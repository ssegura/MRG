# https://developers.google.com/youtube/v3/docs/search/list
features:
-  id: search
   description: Returns a collection of search results that match the query parameters specified in the API request.
   parameters:
   -  name: part
      description: Specifies a comma-separated list of one or more search resource properties that the API response will include.
      type: string
      required: true
      enum:
      - snippet
   -  name: forContentOwner
      description:  Restricts the search to only retrieve videos owned by the content owner identified by the onBehalfOfContentOwner parameter.
      type: boolean
      default: false
      required: false
   -  name: forDeveloper
      description:  Restricts the search to only retrieve videos owned by the content owner identified by the onBehalfOfContentOwner parameter.
      type: boolean
      default: false
      required: false
   -  name: forMine
      description:  Restricts the search to only retrieve videos owned by the authenticated user.
      type: boolean
      default: false
      required: false
   -  name: relatedToVideoId
      description:  Retrieves a list of videos that are related to the video that the parameter value identifies.
      type: string
      required: false
   -  name: channelId
      description:  Indicates that the API response should only contain resources created by the channel.
      type: string
      required: false
   -  name: channelType
      description:  The channelType parameter lets you restrict a search to a particular type of channel.
      type: string
      enum:
      - any
      - show
      default: any
      required: false
   -  name: eventType
      description:  The eventType parameter restricts a search to broadcast events.
      type: string
      enum:
      - completed
      - live
      - upcoming
      required: false
   -  name: location
      description:  The location parameter, in conjunction with the locationRadius parameter, defines a circular geographic area and also restricts a search to videos that specify, in their metadata, a geographic location that falls within that area.
      type: string
      required: false
   -  name: locationRadius
      description:  The locationRadius parameter, in conjunction with the location parameter, defines a circular geographic area.
      type: string
      required: false
   -  name: maxResults
      description:  The maxResults parameter specifies the maximum number of items that should be returned in the result set.
      type: integer
      required: false
      default: 5
   -  name: onBehalfOfContentOwner
      description:  The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value.
      type: string
      required: false
   -  name: order
      description: The order parameter specifies the method that will be used to order resources in the API response.
      type: string
      enum:
      - date
      - rating
      - relevance
      - title
      - videoCount
      - viewCount
      default: relevance
      required: false
   -  name: pageToken
      description: The pageToken parameter identifies a specific page in the result set that should be returned.
      type: string
      required: false
   -  name: publishedAfter
      description: The publishedAfter parameter indicates that the API response should only contain resources created at or after the specified time.
      type: datetime
      required: false
   -  name: publishedBefore
      description: The publishedBefore parameter indicates that the API response should only contain resources created before or at the specified time.
      type: datetime
      required: false
   -  name: q
      description: The q parameter specifies the query term to search for.
      type: string
      required: false
   -  name: regionCode
      description: The regionCode parameter instructs the API to return search results for videos that can be viewed in the specified country.
      type: string
      required: false
   -  name: relevanceLanguage
      description: The relevanceLanguage parameter instructs the API to return search results that are most relevant to the specified language.
      type: string
      required: false
   -  name: safeSearch
      description: The safeSearch parameter indicates whether the search results should include restricted content as well as standard content.
      type: string
      enum:
      - moderate
      - none
      - strict
      default: moderate
      required: false
   -  name: topicId
      description: The topicId parameter indicates that the API response should only contain resources associated with the specified topic.
      type: string
      required: false
   -  name: type
      description: The type parameter restricts a search query to only retrieve a particular type of resource.
      type: string
      enum:
      - video
      - channel
      - playlist
      required: false
   -  name: videoCaption
      description: The videoCaption parameter indicates whether the API should filter video search results based on whether they have captions.
      type: string
      enum:
      - any
      - closedCaption
      - none
      default: any
      required: false
   -  name: videoCategoryId
      description: The videoCategoryId parameter filters video search results based on their category.
      type: string
      required: false
   -  name: videoDefinition
      description: The videoDefinition parameter lets you restrict a search to only include either high definition (HD) or standard definition (SD) videos.
      type: string
      enum:
      - any
      - high
      - standard
      default: any
      required: false
   -  name: videoDimension
      description: The videoDimension parameter lets you restrict a search to only retrieve 2D or 3D videos.
      type: string
      enum:
      - any
      - 2d
      - 3d
      default: any
      required: false
   -  name: videoDuration
      description: The videoDuration parameter filters video search results based on their duration.
      type: string
      enum:
      - any
      - long
      - medium
      - short
      default: any
      required: false
   -  name: videoEmbeddable
      description: The videoDuration parameter filters video search results based on their duration.
      type: string
      enum:
      - any
      - true
      default: any
      required: false
   -  name: videoLicense
      description: The videoLicense parameter filters search results to only include videos with a particular license.
      type: string
      enum:
      - any
      - creativeCommon
      - youtube
      default: any
      required: false
   -  name: videoSyndicated
      description: The videoSyndicated parameter lets you to restrict a search to only videos that can be played outside youtube.com
      type: string
      enum:
      - any
      - true
      default: any
      required: false
   -  name: videoType
      description: The videoType parameter lets you restrict a search to a particular type of videos.
      type: string
      enum:
      - any
      - episode
      - movie
      default: any
      required: false


   constraints:
   # Filters (specify 0 or 1 of the following parameters)
   -  constraint: forContentOwner excludes forDeveloper
   -  constraint: forContentOwner excludes forMine
   -  constraint: forContentOwner excludes relatedToVideoId
   -  constraint: forDeveloper excludes forMine
   -  constraint: forDeveloper excludes relatedToVideoId
   -  constraint: forMine excludes relatedToVideoId

   # The onBehalfOfContentOwner parameter is required.
   # The type parameter value must be set to video.
   # None of the following other parameters can be set: videoDefinition, videoDimension, videoDuration, videoLicense, videoEmbeddable, videoSyndicated, videoType.
   -  constraint: forContentOwner requires onBehalfOfContentOwner
   -  constraint: forContentOwner requires type=video
   -  constraint: forContentOwner excludes videoDefinition
   -  constraint: forContentOwner excludes videoDimension
   -  constraint: forContentOwner excludes videoDuration
   -  constraint: forContentOwner excludes videoLicense
   -  constraint: forContentOwner excludes videoEmbeddable
   -  constraint: forContentOwner excludes videoSyndicated
   -  constraint: forContentOwner excludes videoType

   # If you set this parameter to true, then the type parameter's value must also be set to video.
   # In addition, none of the following other parameters can be set in the same request: videoDefinition, videoDimension, videoDuration, videoLicense, videoEmbeddable, videoSyndicated, videoType.
   -  constraint: forMine requires type=video
   -  constraint: forMine excludes videoDefinition
   -  constraint: forMine excludes videoDimension
   -  constraint: forMine excludes videoDuration
   -  constraint: forMine excludes videoLicense
   -  constraint: forMine excludes videoEmbeddable
   -  constraint: forMine excludes videoSyndicated
   -  constraint: forMine excludes videoType

   # Note that if the relatedToVideoId parameter is set, the only other supported parameters are part, maxResults, pageToken, regionCode, relevanceLanguage, safeSearch, type (which must be set to video), and fields.
   -  constraint: relatedToVideoId excludes channelId
   -  constraint: relatedToVideoId excludes channelType
   -  constraint: relatedToVideoId excludes eventType
   -  constraint: relatedToVideoId excludes location
   -  constraint: relatedToVideoId excludes locationRadius
   -  constraint: relatedToVideoId excludes onBehalfOfContentOwner
   -  constraint: relatedToVideoId excludes order
   -  constraint: relatedToVideoId excludes publishedAfter
   -  constraint: relatedToVideoId excludes publishedBefore
   -  constraint: relatedToVideoId excludes q
   -  constraint: relatedToVideoId excludes topicId
   -  constraint: relatedToVideoId excludes videoCaption
   -  constraint: relatedToVideoId excludes videoCategoryId
   -  constraint: relatedToVideoId excludes videoDefinition
   -  constraint: relatedToVideoId excludes videoDimension
   -  constraint: relatedToVideoId excludes videoDuration
   -  constraint: relatedToVideoId excludes videoEmbeddable
   -  constraint: relatedToVideoId excludes videoLicense
   -  constraint: relatedToVideoId excludes videoSyndicated
   -  constraint: relatedToVideoId excludes videoType
   -  constraint: relatedToVideoId requires type=video

   # If you specify a value for this parameter, you must also set the type parameter's value to video.
   -  constraint: eventType requires type=video

   -  constraint: location requires locationRadius
   -  constraint: locationRadius requires location

   -  constraint: videoCaption requires type=video
   -  constraint: videoCategoryId requires type=video
   -  constraint: videoDimension requires type=video
   -  constraint: videoDefinition requires type=video
   -  constraint: videoDuration requires type=video
   -  constraint: videoEmbeddable requires type=video
   -  constraint: videoLicense requires type=video
   -  constraint: videoSyndicated requires type=video
   -  constraint: videoType requires type=video

   -  constraint: channelType requires type=channel

   -  constraint: location requires type=video

   configuration:
      ordering_parameters:
      - order
      conjunctive_filters:
      - forContentOwner
      - forDeveloper
      - forMine
      - relatedToVideoId
      - channelId
      - channelType
      - eventType
      - location
      - publishedAfter
      - publishedBefore
      - regionCode
      - relevanceLanguage
      - safeSearch
      - topicId
      - type
      - videoCaption
      - videoCategoryId
      - videoDefinition
      - videoDimension
      - videoDuration
      - videoEmbeddable
      - videoLicense
      - videoSyndicated
      - videoType
      disjoint_filters:
      - parameter: eventType
      - parameter: type
      - parameter: videoCaption
        values:
         - closedCaption
         - none
      - parameter: videoDefinition
        values:
         - high
         - standard
      - parameter: videoDimension
        values:
         - 2d
         - 3d
      - parameter: videoDuration
        values:
         - long
         - medium
         - short
      - parameter: videoLicense
        values:
         - creativeCommon
         - youtube
      - parameter: videoType
        values:
         - episode
         - movie
      complete_filters:
      -  parameter: type
         all_value: empty
      -  parameter: videoCaption
         all_value: any
      -  parameter: videoDefinition
         all_value: any
      -  parameter: videoDimension
         all_value: any
      -  parameter: videoDuration
         all_value: any
      limit_parameter: maxResults