In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR80 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, raised, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [filterProjects]
and a follow-up test case is constructed by adding the following parameters [following]
and a follow-up test case is constructed by adding the following parameters [amountPledged, goal, savedProjects]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR200 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, goal, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, projectsWeLove, recommendedForMe, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [goal]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR222 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [projectsWeLove]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, goal, subcategory]
and a follow-up test case is constructed by removing the following parameters [location, projectsIHaveBacked, recommendedForMe, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR32 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [following, projectsWeLove, raised]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [recommendedForMe]
and a follow-up test case is constructed by removing the following parameters [goal, location, projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR337 (DISJOINT_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects:liveProjects, amountPledged, category, subcategory]
and a follow-up test case is constructed by changing the value of the following parameters [filterProjects:successfulProjects]
and a follow-up test case is constructed by changing the value of the following parameters [filterProjects:upcomingProjects]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR391 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked:showProjectsIHaveBacked, recommendedForMe, filterProjects, raised, category, subcategory]
and a follow-up test case is constructed by changing the value of the following parameters [projectsIHaveBacked:showProjectsIHaveNotBacked]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR197 (COMPLETE_EXTEND):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [savedProjects:showProjectsIHaveSaved]
and a follow-up test case is constructed by changing the value of the following parameters [savedProjects:showProjectsIHaveNotSaved]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR22 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [location]
and a follow-up test case is constructed by adding the following parameters [goal]
and a follow-up test case is constructed by adding the following parameters [projectsIHaveBacked, raised]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR17 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [goal, location, projectsIHaveBacked, raised]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR66 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, raised, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [location, projectsIHaveBacked, projectsWeLove, raised, recommendedForMe]
and a follow-up test case is constructed by removing the following parameters [searchQuery, subcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR452 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, location, projectsWeLove, recommendedForMe, savedProjects]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR481 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, recommendedForMe, filterProjects, goal, category]
and a follow-up test case is constructed by removing the following parameters [filterProjects, goal, projectsWeLove, recommendedForMe, savedProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR176 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, goal, projectsIHaveBacked, projectsWeLove, recommendedForMe]
and a follow-up test case is constructed by removing the following parameters [filterProjects, subcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR268 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, raised, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [following, goal, projectsIHaveBacked, searchQuery]
and a follow-up test case is constructed by adding the following parameters [filterProjects]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR252 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [raised:<75% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:75% to 100% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:>100% raised]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR457 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, projectsWeLove]
and a follow-up test case is constructed by removing the following parameters [raised, recommendedForMe]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [location, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR330 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [goal, searchQuery]
and a follow-up test case is constructed by adding the following parameters [raised]
and a follow-up test case is constructed by adding the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR441 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects:showProjectsIHaveSaved, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category, subcategory]
and a follow-up test case is constructed by changing the value of the following parameters [savedProjects:showProjectsIHaveNotSaved]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR175 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, subcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, projectsWeLove]
and a follow-up test case is constructed by removing the following parameters [goal]
and a follow-up test case is constructed by removing the following parameters [recommendedForMe]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR92 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, raised, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [savedProjects:showProjectsIHaveSaved]
and a follow-up test case is constructed by changing the value of the following parameters [savedProjects:showProjectsIHaveNotSaved]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR476 (DISJOINT_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged:<$1,000 pledged, raised, category]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$10,000 to $100,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$100,000 to $1,000,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:>$1,000,000 pledged]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR487 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, recommendedForMe, filterProjects, goal, category]
and a follow-up test case is constructed by removing the following parameters [filterProjects, recommendedForMe, searchQuery]
and a follow-up test case is constructed by removing the following parameters [goal, projectsWeLove]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR203 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, goal, category]
and a follow-up test case is constructed by removing the following parameters [following, projectsWeLove, recommendedForMe]
and a follow-up test case is constructed by removing the following parameters [savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged, goal]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR504 (SHUFFLING_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy:Popularity, projectsWeLove, savedProjects, recommendedForMe, filterProjects, goal, category]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Magic]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Newest]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:EndDate]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:MostFunded]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:MostBacked]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:NearMe]
then the source and the follow-up output(s) should have the same items, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR425 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, goal, location, projectsIHaveBacked, projectsWeLove, raised, recommendedForMe, savedProjects, searchQuery, subcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR104 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [recommendedForMe, searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, goal, projectsIHaveBacked, projectsWeLove, savedProjects]
and a follow-up test case is constructed by removing the following parameters [subcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR294 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [filterProjects, recommendedForMe, searchQuery]
and a follow-up test case is constructed by removing the following parameters [goal, projectsIHaveBacked, projectsWeLove, raised]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR195 (DISJOINT_EXTEND):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal:<$1,000 goal, category, subcategory]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$1,000 to $10,000 goal]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR257 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, raised, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, location, projectsWeLove, recommendedForMe, savedProjects]
and a follow-up test case is constructed by removing the following parameters [raised, subcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR358 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category]
and a follow-up test case is constructed by adding the following parameters [amountPledged]
and a follow-up test case is constructed by adding the following parameters [filterProjects, subcategory]
and a follow-up test case is constructed by adding the following parameters [goal]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR26 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, category, subcategory:Video Games]
and a follow-up test case is constructed by changing the value of the following parameters [subcategory:Conceptual Art]
and a follow-up test case is constructed by changing the value of the following parameters [subcategory:Digital Art]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [following, projectsWeLove, recommendedForMe, searchQuery, subcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR284 (COMPLETE_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, raised, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [following:showProjectsIFollow]
and a follow-up test case is constructed by changing the value of the following parameters [following:showProjectsIDoNotFollow]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR465 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category]
and a follow-up test case is constructed by adding the following parameters [goal, searchQuery]
and a follow-up test case is constructed by adding the following parameters [subcategory]
and a follow-up test case is constructed by adding the following parameters [filterProjects]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR482 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, recommendedForMe, filterProjects, goal, category]
and a follow-up test case is constructed by removing the following parameters [filterProjects, goal, projectsWeLove, recommendedForMe, searchQuery]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR74 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, raised, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [filterProjects, following, goal]
and a follow-up test case is constructed by adding the following parameters [savedProjects]
and a follow-up test case is constructed by adding the following parameters [amountPledged]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR126 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, category]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, projectsWeLove]
and a follow-up test case is constructed by removing the following parameters [filterProjects, recommendedForMe, searchQuery]
and a follow-up test case is constructed by removing the following parameters [following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR228 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, goal, projectsIHaveBacked, projectsWeLove, subcategory]
and a follow-up test case is constructed by removing the following parameters [location]
and a follow-up test case is constructed by removing the following parameters [recommendedForMe, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR153 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, projectsWeLove, recommendedForMe, savedProjects, searchQuery, subcategory]
and a follow-up test case is constructed by removing the following parameters [raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR385 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [amountPledged]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR173 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, projectsWeLove]
and a follow-up test case is constructed by removing the following parameters [following, goal, projectsIHaveBacked, recommendedForMe, subcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR151 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, subcategory]
and a follow-up test case is constructed by removing the following parameters [following, recommendedForMe]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [raised, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [projectsWeLove]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR238 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [savedProjects]
and a follow-up test case is constructed by adding the following parameters [amountPledged]
and a follow-up test case is constructed by adding the following parameters [raised]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR400 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, recommendedForMe, raised, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [raised]
and a follow-up test case is constructed by removing the following parameters [projectsWeLove, recommendedForMe]
and a follow-up test case is constructed by removing the following parameters [subcategory]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
and a follow-up test case is constructed by removing the following parameters [following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR102 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, goal, recommendedForMe, savedProjects]
and a follow-up test case is constructed by removing the following parameters [filterProjects, projectsWeLove, subcategory]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR14 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [location, raised]
and a follow-up test case is constructed by adding the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by adding the following parameters [goal]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR448 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category]
and a follow-up test case is constructed by removing the following parameters [projectsWeLove]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, location, projectsIHaveBacked, raised, recommendedForMe, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR241 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [savedProjects]
and a follow-up test case is constructed by adding the following parameters [amountPledged, raised]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR168 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects:showProjectsIHaveSaved, following, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category, subcategory]
and a follow-up test case is constructed by changing the value of the following parameters [savedProjects:showProjectsIHaveNotSaved]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR54 (DISJOINT_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal:<$1,000 goal, raised, category]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$1,000 to $10,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$10,000 to $100,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$100,000 to $1,000,000 goal]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR474 (DISJOINT_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects:showProjectsIHaveSaved, following, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category]
and a follow-up test case is constructed by changing the value of the following parameters [savedProjects:showProjectsIHaveNotSaved]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR362 (SHUFFLING_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy:Popularity, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Magic]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Newest]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:EndDate]
then the source and the follow-up output(s) should have the same items, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR505 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, recommendedForMe, filterProjects, goal:<$1,000 goal, category]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$1,000 to $10,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$10,000 to $100,000 goal]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR115 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged:<$1,000 pledged, goal, category, subcategory]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$10,000 to $100,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$100,000 to $1,000,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:>$1,000,000 pledged]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR349 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category]
and a follow-up test case is constructed by removing the following parameters [following, projectsIHaveBacked, projectsWeLove, recommendedForMe, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [location, raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR182 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, goal, projectsIHaveBacked, projectsWeLove, recommendedForMe, subcategory]
and a follow-up test case is constructed by removing the following parameters [following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR133 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, category]
and a follow-up test case is constructed by adding the following parameters [amountPledged, goal, savedProjects, subcategory]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR323 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [recommendedForMe]
and a follow-up test case is constructed by removing the following parameters [filterProjects, location, projectsWeLove, savedProjects, subcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR470 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category]
and a follow-up test case is constructed by adding the following parameters [filterProjects, subcategory]
and a follow-up test case is constructed by adding the following parameters [goal, searchQuery]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR251 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [savedProjects:showProjectsIHaveSaved]
and a follow-up test case is constructed by changing the value of the following parameters [savedProjects:showProjectsIHaveNotSaved]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR155 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [projectsWeLove, recommendedForMe, searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, projectsIHaveBacked, raised, savedProjects, subcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR343 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [following, searchQuery]
and a follow-up test case is constructed by removing the following parameters [projectsWeLove, savedProjects]
and a follow-up test case is constructed by removing the following parameters [location, recommendedForMe]
and a follow-up test case is constructed by removing the following parameters [raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR128 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, category]
and a follow-up test case is constructed by removing the following parameters [following, projectsIHaveBacked, recommendedForMe]
and a follow-up test case is constructed by removing the following parameters [filterProjects, projectsWeLove, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR82 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, raised, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [amountPledged, following, goal, savedProjects]
and a follow-up test case is constructed by adding the following parameters [filterProjects]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR262 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, raised, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, location, raised, recommendedForMe, savedProjects, subcategory]
and a follow-up test case is constructed by removing the following parameters [projectsWeLove]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR413 (SHUFFLING_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy:NearMe, projectsWeLove, following, recommendedForMe, raised, category, subcategory]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Magic]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Popularity]
then the source and the follow-up output(s) should have the same items, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR373 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, projectsWeLove, recommendedForMe, savedProjects, subcategory]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR87 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, raised, category, subcategory:Video Games]
and a follow-up test case is constructed by changing the value of the following parameters [subcategory:Conceptual Art]
and a follow-up test case is constructed by changing the value of the following parameters [subcategory:Digital Art]
and a follow-up test case is constructed by changing the value of the following parameters [subcategory:Mixed Media]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR298 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category]
and a follow-up test case is constructed by adding the following parameters [amountPledged, subcategory]
and a follow-up test case is constructed by adding the following parameters [following]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR366 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised:<75% raised, category]
and a follow-up test case is constructed by changing the value of the following parameters [raised:75% to 100% raised]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR130 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, category]
and a follow-up test case is constructed by removing the following parameters [following, projectsIHaveBacked, recommendedForMe, searchQuery]
and a follow-up test case is constructed by removing the following parameters [projectsWeLove]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR213 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, goal, category]
and a follow-up test case is constructed by adding the following parameters [filterProjects, raised]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR150 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, raised, subcategory]
and a follow-up test case is constructed by removing the following parameters [following, searchQuery]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, recommendedForMe]
and a follow-up test case is constructed by removing the following parameters [projectsWeLove]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR67 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, raised, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [raised]
and a follow-up test case is constructed by removing the following parameters [location, projectsIHaveBacked, projectsWeLove, recommendedForMe, subcategory]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR13 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [goal, projectsIHaveBacked, raised]
and a follow-up test case is constructed by adding the following parameters [location]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR202 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, goal, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, projectsWeLove, savedProjects]
and a follow-up test case is constructed by removing the following parameters [following, goal, recommendedForMe, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR229 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, location, projectsIHaveBacked, projectsWeLove, recommendedForMe, searchQuery, subcategory]
and a follow-up test case is constructed by removing the following parameters [goal]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR322 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, location, recommendedForMe]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, projectsWeLove, savedProjects]
and a follow-up test case is constructed by removing the following parameters [subcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR335 (DISJOINT_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, category:Games, subcategory]
and a follow-up test case is constructed by changing the value of the following parameters [category:Art]
and a follow-up test case is constructed by changing the value of the following parameters [category:Comics]
and a follow-up test case is constructed by changing the value of the following parameters [category:Crafts]
and a follow-up test case is constructed by changing the value of the following parameters [category:Dance]
and a follow-up test case is constructed by changing the value of the following parameters [category:Design]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR381 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [following]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR356 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category]
and a follow-up test case is constructed by adding the following parameters [amountPledged, filterProjects, goal, subcategory]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR160 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [filterProjects, goal]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR351 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category]
and a follow-up test case is constructed by removing the following parameters [following, raised]
and a follow-up test case is constructed by removing the following parameters [projectsWeLove]
and a follow-up test case is constructed by removing the following parameters [recommendedForMe, savedProjects]
and a follow-up test case is constructed by removing the following parameters [location]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR224 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, goal, location, projectsIHaveBacked, projectsWeLove, recommendedForMe, searchQuery, subcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR18 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [location, projectsIHaveBacked, raised]
and a follow-up test case is constructed by adding the following parameters [goal]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR100 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [goal, projectsIHaveBacked, savedProjects]
and a follow-up test case is constructed by removing the following parameters [filterProjects, projectsWeLove, searchQuery, subcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
and a follow-up test case is constructed by removing the following parameters [recommendedForMe]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR56 (DISJOINT_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects:showProjectsIHaveNotSaved, following, projectsIHaveBacked, recommendedForMe, goal, raised, category]
and a follow-up test case is constructed by changing the value of the following parameters [savedProjects:showProjectsIHaveSaved]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR113 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects:showProjectsIHaveNotSaved, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, subcategory]
and a follow-up test case is constructed by changing the value of the following parameters [savedProjects:showProjectsIHaveSaved]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR409 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, recommendedForMe, raised, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [filterProjects, projectsIHaveBacked, savedProjects]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR256 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, raised, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, location, recommendedForMe, savedProjects]
and a follow-up test case is constructed by removing the following parameters [projectsWeLove, raised, subcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR52 (SHUFFLING_EXTEND):
if a source test case is run with the inputs [location, sortBy:Popularity, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, raised, category]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Magic]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Newest]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:EndDate]
then the source and the follow-up output(s) should have the same items, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR6 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, projectsWeLove, recommendedForMe, searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, savedProjects, subcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR508 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, recommendedForMe, filterProjects:liveProjects, goal, category]
and a follow-up test case is constructed by changing the value of the following parameters [filterProjects:successfulProjects]
and a follow-up test case is constructed by changing the value of the following parameters [filterProjects:upcomingProjects]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR226 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, goal, projectsIHaveBacked, recommendedForMe, searchQuery]
and a follow-up test case is constructed by removing the following parameters [projectsWeLove, subcategory]
and a follow-up test case is constructed by removing the following parameters [location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR302 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category]
and a follow-up test case is constructed by adding the following parameters [subcategory]
and a follow-up test case is constructed by adding the following parameters [amountPledged, following]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR406 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, recommendedForMe, raised, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [raised]
and a follow-up test case is constructed by removing the following parameters [following, projectsWeLove, searchQuery]
and a follow-up test case is constructed by removing the following parameters [recommendedForMe, subcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR395 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [goal:<$1,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$1,000 to $10,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$10,000 to $100,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$100,000 to $1,000,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:>$1,000,000 goal]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR394 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [following:showProjectsIFollow]
and a follow-up test case is constructed by changing the value of the following parameters [following:showProjectsIDoNotFollow]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR192 (DISJOINT_EXTEND):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects:liveProjects, amountPledged, goal, category, subcategory]
and a follow-up test case is constructed by changing the value of the following parameters [filterProjects:successfulProjects]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR49 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, raised, category]
and a follow-up test case is constructed by adding the following parameters [searchQuery]
and a follow-up test case is constructed by adding the following parameters [filterProjects, subcategory]
and a follow-up test case is constructed by adding the following parameters [amountPledged]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR210 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, goal, category]
and a follow-up test case is constructed by adding the following parameters [filterProjects, subcategory]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR33 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [goal]
and a follow-up test case is constructed by removing the following parameters [following, location, projectsIHaveBacked, projectsWeLove, raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [recommendedForMe]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR78 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, raised, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [amountPledged, savedProjects]
and a follow-up test case is constructed by adding the following parameters [filterProjects, following]
and a follow-up test case is constructed by adding the following parameters [goal]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR244 (SHUFFLING_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy:Popularity, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, category, subcategory]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Magic]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Newest]
then the source and the follow-up output(s) should have the same items, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR124 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, category]
and a follow-up test case is constructed by removing the following parameters [following, projectsWeLove, recommendedForMe]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR28 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, category, subcategory:Video Games]
and a follow-up test case is constructed by changing the value of the following parameters [subcategory:Conceptual Art]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR93 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, raised, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [goal:<$1,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$1,000 to $10,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$10,000 to $100,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$100,000 to $1,000,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:>$1,000,000 goal]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR434 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, goal, location, projectsIHaveBacked, raised, recommendedForMe, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects, projectsWeLove, subcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR363 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked:showProjectsIHaveNotBacked, recommendedForMe, raised, category]
and a follow-up test case is constructed by changing the value of the following parameters [projectsIHaveBacked:showProjectsIHaveBacked]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR429 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, goal, location, projectsIHaveBacked, projectsWeLove, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [raised, recommendedForMe, subcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR64 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, raised, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [location, projectsIHaveBacked, projectsWeLove, raised, recommendedForMe, subcategory]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR408 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, recommendedForMe, raised, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [following, raised, recommendedForMe, searchQuery, subcategory]
and a follow-up test case is constructed by removing the following parameters [projectsWeLove]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR50 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, raised, category]
and a follow-up test case is constructed by adding the following parameters [searchQuery, subcategory]
and a follow-up test case is constructed by adding the following parameters [amountPledged, filterProjects]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR466 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category]
and a follow-up test case is constructed by adding the following parameters [searchQuery]
and a follow-up test case is constructed by adding the following parameters [filterProjects, goal, subcategory]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR336 (DISJOINT_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged:<$1,000 pledged, category, subcategory]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$10,000 to $100,000 pledged]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR316 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [location, recommendedForMe]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, following, projectsWeLove, savedProjects, subcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR142 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, category]
and a follow-up test case is constructed by adding the following parameters [goal:<$1,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$1,000 to $10,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$10,000 to $100,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$100,000 to $1,000,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:>$1,000,000 goal]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR250 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, category:Games, subcategory]
and a follow-up test case is constructed by changing the value of the following parameters [category:Art]
and a follow-up test case is constructed by changing the value of the following parameters [category:Comics]
and a follow-up test case is constructed by changing the value of the following parameters [category:Crafts]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR183 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [savedProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR108 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [following]
and a follow-up test case is constructed by adding the following parameters [raised]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR141 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, category]
and a follow-up test case is constructed by adding the following parameters [savedProjects:showProjectsIHaveSaved]
and a follow-up test case is constructed by changing the value of the following parameters [savedProjects:showProjectsIHaveNotSaved]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR398 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, recommendedForMe, raised, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [projectsWeLove, recommendedForMe, subcategory]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
and a follow-up test case is constructed by removing the following parameters [raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR467 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category]
and a follow-up test case is constructed by adding the following parameters [goal, searchQuery, subcategory]
and a follow-up test case is constructed by adding the following parameters [filterProjects]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR469 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category]
and a follow-up test case is constructed by adding the following parameters [searchQuery, subcategory]
and a follow-up test case is constructed by adding the following parameters [filterProjects]
and a follow-up test case is constructed by adding the following parameters [goal]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR397 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, recommendedForMe, raised, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [projectsWeLove, raised, recommendedForMe, searchQuery, subcategory]
and a follow-up test case is constructed by removing the following parameters [following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR245 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects:liveProjects, goal, category, subcategory]
and a follow-up test case is constructed by changing the value of the following parameters [filterProjects:successfulProjects]
and a follow-up test case is constructed by changing the value of the following parameters [filterProjects:upcomingProjects]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR230 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, projectsWeLove, subcategory]
and a follow-up test case is constructed by removing the following parameters [following, location, searchQuery]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [goal, recommendedForMe]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR490 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, recommendedForMe, filterProjects, goal, category]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
and a follow-up test case is constructed by removing the following parameters [goal, recommendedForMe]
and a follow-up test case is constructed by removing the following parameters [filterProjects, savedProjects]
and a follow-up test case is constructed by removing the following parameters [projectsWeLove]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR420 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, recommendedForMe, raised, category, subcategory:Tabletop Games]
and a follow-up test case is constructed by changing the value of the following parameters [subcategory:Conceptual Art]
and a follow-up test case is constructed by changing the value of the following parameters [subcategory:Digital Art]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR304 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, goal:<$1,000 goal, raised, category]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$1,000 to $10,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$10,000 to $100,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$100,000 to $1,000,000 goal]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR131 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, category]
and a follow-up test case is constructed by adding the following parameters [amountPledged]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR95 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, goal, projectsWeLove, subcategory]
and a follow-up test case is constructed by removing the following parameters [recommendedForMe, savedProjects]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR122 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, category]
and a follow-up test case is constructed by removing the following parameters [filterProjects, projectsWeLove, searchQuery]
and a follow-up test case is constructed by removing the following parameters [following, projectsIHaveBacked, recommendedForMe]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR41 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [following, projectsWeLove, savedProjects]
and a follow-up test case is constructed by removing the following parameters [goal, location, projectsIHaveBacked, raised, recommendedForMe]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR361 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category]
and a follow-up test case is constructed by adding the following parameters [filterProjects, goal]
and a follow-up test case is constructed by adding the following parameters [subcategory]
and a follow-up test case is constructed by adding the following parameters [amountPledged]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR305 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised:<75% raised, category]
and a follow-up test case is constructed by changing the value of the following parameters [raised:75% to 100% raised]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR90 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, raised:<75% raised, category, subcategory]
and a follow-up test case is constructed by changing the value of the following parameters [raised:75% to 100% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:>100% raised]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR456 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category]
and a follow-up test case is constructed by removing the following parameters [following, raised]
and a follow-up test case is constructed by removing the following parameters [amountPledged, savedProjects]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, projectsWeLove, recommendedForMe]
and a follow-up test case is constructed by removing the following parameters [location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR418 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following:showProjectsIDoNotFollow, recommendedForMe, raised, category, subcategory]
and a follow-up test case is constructed by changing the value of the following parameters [following:showProjectsIFollow]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR311 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category]
and a follow-up test case is constructed by adding the following parameters [following:showProjectsIFollow]
and a follow-up test case is constructed by changing the value of the following parameters [following:showProjectsIDoNotFollow]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR446 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked:showProjectsIHaveNotBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category, subcategory]
and a follow-up test case is constructed by changing the value of the following parameters [projectsIHaveBacked:showProjectsIHaveBacked]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR403 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, recommendedForMe, raised, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [recommendedForMe]
and a follow-up test case is constructed by removing the following parameters [following, projectsWeLove, raised, subcategory]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR326 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [goal, projectsIHaveBacked]
and a follow-up test case is constructed by adding the following parameters [searchQuery]
and a follow-up test case is constructed by adding the following parameters [raised]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR85 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, raised, category:Games, subcategory]
and a follow-up test case is constructed by changing the value of the following parameters [category:Art]
and a follow-up test case is constructed by changing the value of the following parameters [category:Comics]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR157 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [following, raised, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged, projectsIHaveBacked, projectsWeLove, recommendedForMe, subcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR19 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [goal, raised]
and a follow-up test case is constructed by adding the following parameters [location]
and a follow-up test case is constructed by adding the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR299 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category]
and a follow-up test case is constructed by adding the following parameters [following]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR0 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, searchQuery, subcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, projectsWeLove, recommendedForMe, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR377 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [recommendedForMe]
and a follow-up test case is constructed by removing the following parameters [raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects, projectsIHaveBacked, subcategory]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [projectsWeLove]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR135 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, category]
and a follow-up test case is constructed by adding the following parameters [amountPledged, goal, raised]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR15 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [goal, location, raised]
and a follow-up test case is constructed by adding the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR11 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, subcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, recommendedForMe, searchQuery]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [projectsWeLove]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR464 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category]
and a follow-up test case is constructed by adding the following parameters [filterProjects, searchQuery]
and a follow-up test case is constructed by adding the following parameters [goal, subcategory]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR198 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, goal, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, goal, projectsWeLove, recommendedForMe, savedProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR166 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged:<$1,000 pledged, raised, category, subcategory]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$10,000 to $100,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$100,000 to $1,000,000 pledged]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR475 (DISJOINT_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged:<$1,000 pledged, raised, category]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$10,000 to $100,000 pledged]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR276 (SHUFFLING_EXTEND):
if a source test case is run with the inputs [location, sortBy:Popularity, projectsWeLove, savedProjects, recommendedForMe, amountPledged, raised, category, subcategory]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Magic]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Newest]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:EndDate]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:MostFunded]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:MostBacked]
then the source and the follow-up output(s) should have the same items, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR68 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, raised, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [location, projectsIHaveBacked, projectsWeLove, raised, recommendedForMe, searchQuery]
and a follow-up test case is constructed by removing the following parameters [subcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR382 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [amountPledged, following, goal]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR309 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, goal:<$1,000 goal, raised, category]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$1,000 to $10,000 goal]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR187 (SHUFFLING_EXTEND):
if a source test case is run with the inputs [sortBy:NearMe, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, subcategory]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Magic]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Popularity]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Newest]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:EndDate]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:MostFunded]
then the source and the follow-up output(s) should have the same items, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR488 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, recommendedForMe, filterProjects, goal, category]
and a follow-up test case is constructed by removing the following parameters [goal, projectsWeLove, recommendedForMe, savedProjects]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR207 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, goal, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
and a follow-up test case is constructed by removing the following parameters [following, goal, projectsWeLove, recommendedForMe, searchQuery]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR484 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, recommendedForMe, filterProjects, goal, category]
and a follow-up test case is constructed by removing the following parameters [filterProjects, goal, recommendedForMe, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [projectsWeLove]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR180 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, following, goal, projectsIHaveBacked, projectsWeLove, recommendedForMe, subcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR411 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, recommendedForMe, raised, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [amountPledged, goal]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR10 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [savedProjects, searchQuery, subcategory]
and a follow-up test case is constructed by removing the following parameters [recommendedForMe]
and a follow-up test case is constructed by removing the following parameters [following, projectsWeLove]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR370 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, projectsWeLove, raised, recommendedForMe, savedProjects, subcategory]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR376 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [recommendedForMe]
and a follow-up test case is constructed by removing the following parameters [filterProjects, projectsWeLove, raised, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, subcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR360 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category]
and a follow-up test case is constructed by adding the following parameters [subcategory]
and a follow-up test case is constructed by adding the following parameters [filterProjects, goal]
and a follow-up test case is constructed by adding the following parameters [amountPledged]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR321 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, following, location, projectsWeLove, recommendedForMe]
and a follow-up test case is constructed by removing the following parameters [savedProjects, subcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR386 (SHUFFLING_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy:NearMe, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, subcategory]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Magic]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Popularity]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Newest]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:EndDate]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:MostFunded]
then the source and the follow-up output(s) should have the same items, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR372 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, projectsWeLove, recommendedForMe, searchQuery]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, raised, subcategory]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR148 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, projectsWeLove, raised, recommendedForMe, searchQuery, subcategory]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR57 (DISJOINT_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, raised:<75% raised, category]
and a follow-up test case is constructed by changing the value of the following parameters [raised:75% to 100% raised]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR379 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, projectsIHaveBacked, projectsWeLove, recommendedForMe, searchQuery, subcategory]
and a follow-up test case is constructed by removing the following parameters [raised, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR435 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [location]
and a follow-up test case is constructed by removing the following parameters [goal, raised]
and a follow-up test case is constructed by removing the following parameters [recommendedForMe, savedProjects]
and a follow-up test case is constructed by removing the following parameters [projectsWeLove, subcategory]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged, projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR5 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [following, searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged, projectsWeLove, recommendedForMe, savedProjects, subcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR38 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, recommendedForMe]
and a follow-up test case is constructed by removing the following parameters [goal, location, projectsWeLove, savedProjects]
and a follow-up test case is constructed by removing the following parameters [following, raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR194 (DISJOINT_EXTEND):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged:<$1,000 pledged, goal, category, subcategory]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$10,000 to $100,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$100,000 to $1,000,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:>$1,000,000 pledged]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR415 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, recommendedForMe, raised, category:Games, subcategory]
and a follow-up test case is constructed by changing the value of the following parameters [category:Art]
and a follow-up test case is constructed by changing the value of the following parameters [category:Comics]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR514 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, recommendedForMe, filterProjects, goal, category]
and a follow-up test case is constructed by adding the following parameters [following:showProjectsIFollow]
and a follow-up test case is constructed by changing the value of the following parameters [following:showProjectsIDoNotFollow]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR310 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category]
and a follow-up test case is constructed by adding the following parameters [amountPledged:<$1,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$10,000 to $100,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$100,000 to $1,000,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:>$1,000,000 pledged]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR427 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [amountPledged, projectsIHaveBacked, projectsWeLove, subcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, goal]
and a follow-up test case is constructed by removing the following parameters [location, searchQuery]
and a follow-up test case is constructed by removing the following parameters [recommendedForMe]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR7 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, projectsWeLove, recommendedForMe, savedProjects]
and a follow-up test case is constructed by removing the following parameters [filterProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [subcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR240 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [savedProjects]
and a follow-up test case is constructed by adding the following parameters [raised]
and a follow-up test case is constructed by adding the following parameters [amountPledged]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR63 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, raised, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [location, projectsIHaveBacked, projectsWeLove, raised, recommendedForMe, searchQuery, subcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR483 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, recommendedForMe, filterProjects, goal, category]
and a follow-up test case is constructed by removing the following parameters [filterProjects, recommendedForMe, searchQuery]
and a follow-up test case is constructed by removing the following parameters [goal, projectsWeLove, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR72 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, raised, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [filterProjects, goal, savedProjects]
and a follow-up test case is constructed by adding the following parameters [following]
and a follow-up test case is constructed by adding the following parameters [amountPledged]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR342 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, raised, recommendedForMe, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [following, location, projectsWeLove]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR264 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, raised, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, projectsWeLove, raised, savedProjects, subcategory]
and a follow-up test case is constructed by removing the following parameters [location]
and a follow-up test case is constructed by removing the following parameters [recommendedForMe]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR368 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category]
and a follow-up test case is constructed by adding the following parameters [amountPledged:<$1,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$10,000 to $100,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$100,000 to $1,000,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:>$1,000,000 pledged]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR4 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, projectsWeLove, recommendedForMe, savedProjects, searchQuery, subcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR227 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, goal, projectsWeLove, recommendedForMe, subcategory]
and a follow-up test case is constructed by removing the following parameters [following, location, projectsIHaveBacked, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR290 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [filterProjects, projectsIHaveBacked, projectsWeLove, raised, recommendedForMe, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [goal]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR501 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, recommendedForMe, filterProjects, goal, category]
and a follow-up test case is constructed by adding the following parameters [amountPledged, location, projectsIHaveBacked]
and a follow-up test case is constructed by adding the following parameters [following, raised, subcategory]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR494 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, recommendedForMe, filterProjects, goal, category]
and a follow-up test case is constructed by adding the following parameters [amountPledged, subcategory]
and a follow-up test case is constructed by adding the following parameters [following, projectsIHaveBacked]
and a follow-up test case is constructed by adding the following parameters [location]
and a follow-up test case is constructed by adding the following parameters [raised]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR502 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, recommendedForMe, filterProjects, goal, category]
and a follow-up test case is constructed by adding the following parameters [location, projectsIHaveBacked, raised]
and a follow-up test case is constructed by adding the following parameters [amountPledged]
and a follow-up test case is constructed by adding the following parameters [following, subcategory]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR371 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, projectsIHaveBacked, projectsWeLove, raised, recommendedForMe, savedProjects, searchQuery, subcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR171 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, goal, projectsIHaveBacked, projectsWeLove]
and a follow-up test case is constructed by removing the following parameters [subcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, recommendedForMe]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR91 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, raised, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [amountPledged:<$1,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$10,000 to $100,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$100,000 to $1,000,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:>$1,000,000 pledged]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR8 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, recommendedForMe, savedProjects, searchQuery, subcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, projectsWeLove]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR167 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category, subcategory:Tabletop Games]
and a follow-up test case is constructed by changing the value of the following parameters [subcategory:Conceptual Art]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR390 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects:liveProjects, raised, category, subcategory]
and a follow-up test case is constructed by changing the value of the following parameters [filterProjects:successfulProjects]
and a follow-up test case is constructed by changing the value of the following parameters [filterProjects:upcomingProjects]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR12 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, projectsWeLove, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects, recommendedForMe, subcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR123 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, category]
and a follow-up test case is constructed by removing the following parameters [recommendedForMe, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
and a follow-up test case is constructed by removing the following parameters [following, projectsWeLove]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR125 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, category]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, projectsIHaveBacked, recommendedForMe]
and a follow-up test case is constructed by removing the following parameters [projectsWeLove, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR417 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, recommendedForMe, raised, category:Games, subcategory]
and a follow-up test case is constructed by changing the value of the following parameters [category:Art]
and a follow-up test case is constructed by changing the value of the following parameters [category:Comics]
and a follow-up test case is constructed by changing the value of the following parameters [category:Crafts]
and a follow-up test case is constructed by changing the value of the following parameters [category:Dance]
and a follow-up test case is constructed by changing the value of the following parameters [category:Design]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR410 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, recommendedForMe, raised, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [goal, savedProjects]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR60 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, raised, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [location, projectsIHaveBacked, raised, recommendedForMe, searchQuery, subcategory]
and a follow-up test case is constructed by removing the following parameters [projectsWeLove]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR170 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, projectsWeLove, recommendedForMe]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, following]
and a follow-up test case is constructed by removing the following parameters [subcategory]
and a follow-up test case is constructed by removing the following parameters [goal]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR414 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, recommendedForMe, raised, category, subcategory:Tabletop Games]
and a follow-up test case is constructed by changing the value of the following parameters [subcategory:Conceptual Art]
and a follow-up test case is constructed by changing the value of the following parameters [subcategory:Digital Art]
and a follow-up test case is constructed by changing the value of the following parameters [subcategory:Mixed Media]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR172 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, following, projectsIHaveBacked, projectsWeLove, recommendedForMe, subcategory]
and a follow-up test case is constructed by removing the following parameters [goal]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR380 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [recommendedForMe]
and a follow-up test case is constructed by removing the following parameters [projectsWeLove, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects, subcategory]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR249 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal:<$1,000 goal, category, subcategory]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$1,000 to $10,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$10,000 to $100,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$100,000 to $1,000,000 goal]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR83 (SHUFFLING_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy:Popularity, projectsWeLove, projectsIHaveBacked, recommendedForMe, raised, category, subcategory]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Magic]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Newest]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:EndDate]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:MostFunded]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:MostBacked]
then the source and the follow-up output(s) should have the same items, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR79 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, raised, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [amountPledged, filterProjects, goal, savedProjects]
and a follow-up test case is constructed by adding the following parameters [following]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR246 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked:showProjectsIHaveBacked, recommendedForMe, filterProjects, goal, category, subcategory]
and a follow-up test case is constructed by changing the value of the following parameters [projectsIHaveBacked:showProjectsIHaveNotBacked]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR303 (SHUFFLING_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy:NearMe, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Magic]
then the source and the follow-up output(s) should have the same items, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR42 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [following, goal, location, projectsIHaveBacked, projectsWeLove, raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [recommendedForMe]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR439 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal:<$1,000 goal, raised, category, subcategory]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$1,000 to $10,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$10,000 to $100,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$100,000 to $1,000,000 goal]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR143 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, category]
and a follow-up test case is constructed by adding the following parameters [amountPledged:<$1,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$10,000 to $100,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$100,000 to $1,000,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:>$1,000,000 pledged]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR89 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, raised, category:Games, subcategory]
and a follow-up test case is constructed by changing the value of the following parameters [category:Art]
and a follow-up test case is constructed by changing the value of the following parameters [category:Comics]
and a follow-up test case is constructed by changing the value of the following parameters [category:Crafts]
and a follow-up test case is constructed by changing the value of the following parameters [category:Dance]
and a follow-up test case is constructed by changing the value of the following parameters [category:Design]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR47 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, raised, category]
and a follow-up test case is constructed by adding the following parameters [amountPledged, searchQuery, subcategory]
and a follow-up test case is constructed by adding the following parameters [filterProjects]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR416 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, recommendedForMe, raised:<75% raised, category, subcategory]
and a follow-up test case is constructed by changing the value of the following parameters [raised:75% to 100% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:>100% raised]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR98 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [projectsWeLove]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, recommendedForMe]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [goal, subcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR331 (SHUFFLING_EXTEND):
if a source test case is run with the inputs [location, sortBy:Popularity, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, category, subcategory]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Magic]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Newest]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:EndDate]
then the source and the follow-up output(s) should have the same items, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR71 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, raised, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [filterProjects, following]
and a follow-up test case is constructed by adding the following parameters [savedProjects]
and a follow-up test case is constructed by adding the following parameters [amountPledged, goal]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR421 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, recommendedForMe, raised, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [goal:<$1,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$1,000 to $10,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$10,000 to $100,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$100,000 to $1,000,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:>$1,000,000 goal]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR480 (COMPLETE_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category]
and a follow-up test case is constructed by adding the following parameters [goal:<$1,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$1,000 to $10,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$10,000 to $100,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$100,000 to $1,000,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:>$1,000,000 goal]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR225 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [goal, projectsIHaveBacked, projectsWeLove, recommendedForMe, searchQuery, subcategory]
and a follow-up test case is constructed by removing the following parameters [location]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR378 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [projectsWeLove, recommendedForMe]
and a follow-up test case is constructed by removing the following parameters [filterProjects, savedProjects]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [subcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR357 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category]
and a follow-up test case is constructed by adding the following parameters [amountPledged, goal]
and a follow-up test case is constructed by adding the following parameters [subcategory]
and a follow-up test case is constructed by adding the following parameters [filterProjects]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR364 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised:<75% raised, category]
and a follow-up test case is constructed by changing the value of the following parameters [raised:75% to 100% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:>100% raised]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR510 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, recommendedForMe, filterProjects, goal:<$1,000 goal, category]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$1,000 to $10,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$10,000 to $100,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$100,000 to $1,000,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:>$1,000,000 goal]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR69 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, raised, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [location, projectsWeLove, recommendedForMe]
and a follow-up test case is constructed by removing the following parameters [subcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR40 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [following, goal, projectsIHaveBacked, projectsWeLove]
and a follow-up test case is constructed by removing the following parameters [location]
and a follow-up test case is constructed by removing the following parameters [recommendedForMe, savedProjects]
and a follow-up test case is constructed by removing the following parameters [raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR369 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category]
and a follow-up test case is constructed by adding the following parameters [goal:<$1,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$1,000 to $10,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$10,000 to $100,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$100,000 to $1,000,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:>$1,000,000 goal]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR329 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [projectsIHaveBacked, raised, searchQuery]
and a follow-up test case is constructed by adding the following parameters [goal]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR339 (COMPLETE_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [projectsIHaveBacked:showProjectsIHaveBacked]
and a follow-up test case is constructed by changing the value of the following parameters [projectsIHaveBacked:showProjectsIHaveNotBacked]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR389 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category:Games, subcategory]
and a follow-up test case is constructed by changing the value of the following parameters [category:Art]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR512 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, recommendedForMe, filterProjects, goal, category]
and a follow-up test case is constructed by adding the following parameters [amountPledged:<$1,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$10,000 to $100,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$100,000 to $1,000,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:>$1,000,000 pledged]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR178 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, goal, projectsIHaveBacked, projectsWeLove, recommendedForMe, subcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR84 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, raised, category, subcategory:Video Games]
and a follow-up test case is constructed by changing the value of the following parameters [subcategory:Conceptual Art]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR333 (DISJOINT_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, category, subcategory:Tabletop Games]
and a follow-up test case is constructed by changing the value of the following parameters [subcategory:Conceptual Art]
and a follow-up test case is constructed by changing the value of the following parameters [subcategory:Digital Art]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR138 (SHUFFLING_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy:NearMe, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, category]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Magic]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Popularity]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Newest]
then the source and the follow-up output(s) should have the same items, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR117 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged:<$1,000 pledged, goal, category, subcategory]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$10,000 to $100,000 pledged]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR461 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category]
and a follow-up test case is constructed by adding the following parameters [searchQuery]
and a follow-up test case is constructed by adding the following parameters [filterProjects]
and a follow-up test case is constructed by adding the following parameters [goal, subcategory]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR191 (DISJOINT_EXTEND):
if a source test case is run with the inputs [sortBy, projectsWeLove, following:showProjectsIDoNotFollow, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, subcategory]
and a follow-up test case is constructed by changing the value of the following parameters [following:showProjectsIFollow]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR158 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [goal]
and a follow-up test case is constructed by adding the following parameters [filterProjects]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR221 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, goal, category]
and a follow-up test case is constructed by adding the following parameters [raised:<75% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:75% to 100% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:>100% raised]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, projectsWeLove, savedProjects, searchQuery, subcategory]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [recommendedForMe]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR77 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, raised, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [amountPledged, filterProjects, following, goal, savedProjects]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR492 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, recommendedForMe, filterProjects, goal, category]
and a follow-up test case is constructed by adding the following parameters [amountPledged, subcategory]
and a follow-up test case is constructed by adding the following parameters [following, location, projectsIHaveBacked]
and a follow-up test case is constructed by adding the following parameters [raised]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR269 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, raised, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [filterProjects, following, goal, projectsIHaveBacked, searchQuery]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR152 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, projectsIHaveBacked, projectsWeLove, raised, recommendedForMe, searchQuery, subcategory]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR65 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, raised, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [projectsWeLove, subcategory]
and a follow-up test case is constructed by removing the following parameters [location, projectsIHaveBacked, recommendedForMe, searchQuery]
and a follow-up test case is constructed by removing the following parameters [raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR308 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects:showProjectsIHaveSaved, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category]
and a follow-up test case is constructed by changing the value of the following parameters [savedProjects:showProjectsIHaveNotSaved]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR73 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, raised, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [following, goal, savedProjects]
and a follow-up test case is constructed by adding the following parameters [amountPledged, filterProjects]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR340 (COMPLETE_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [goal:<$1,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$1,000 to $10,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$10,000 to $100,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$100,000 to $1,000,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:>$1,000,000 goal]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR325 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by adding the following parameters [goal]
and a follow-up test case is constructed by adding the following parameters [raised]
and a follow-up test case is constructed by adding the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR30 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [goal:<$1,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$1,000 to $10,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$10,000 to $100,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$100,000 to $1,000,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:>$1,000,000 goal]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR477 (DISJOINT_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, raised:<75% raised, category]
and a follow-up test case is constructed by changing the value of the following parameters [raised:75% to 100% raised]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR450 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, raised]
and a follow-up test case is constructed by removing the following parameters [following, location, projectsWeLove, recommendedForMe, savedProjects]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR25 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, category:Games, subcategory]
and a follow-up test case is constructed by changing the value of the following parameters [category:Art]
and a follow-up test case is constructed by changing the value of the following parameters [category:Comics]
and a follow-up test case is constructed by changing the value of the following parameters [category:Crafts]
and a follow-up test case is constructed by changing the value of the following parameters [category:Dance]
and a follow-up test case is constructed by changing the value of the following parameters [category:Design]
and a follow-up test case is constructed by changing the value of the following parameters [category:Fashion]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR444 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category:Games, subcategory]
and a follow-up test case is constructed by changing the value of the following parameters [category:Art]
and a follow-up test case is constructed by changing the value of the following parameters [category:Comics]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR442 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category, subcategory:Tabletop Games]
and a follow-up test case is constructed by changing the value of the following parameters [subcategory:Conceptual Art]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR503 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, recommendedForMe, filterProjects, goal, category]
and a follow-up test case is constructed by adding the following parameters [amountPledged, following, location, projectsIHaveBacked, subcategory]
and a follow-up test case is constructed by adding the following parameters [raised]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR471 (SHUFFLING_EXTEND):
if a source test case is run with the inputs [location, sortBy:Popularity, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Magic]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Newest]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:EndDate]
then the source and the follow-up output(s) should have the same items, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR16 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by adding the following parameters [location]
and a follow-up test case is constructed by adding the following parameters [goal, raised]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR344 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category]
and a follow-up test case is constructed by removing the following parameters [projectsWeLove]
and a follow-up test case is constructed by removing the following parameters [location, projectsIHaveBacked, raised, recommendedForMe]
and a follow-up test case is constructed by removing the following parameters [following, savedProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR86 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked:showProjectsIHaveNotBacked, recommendedForMe, raised, category, subcategory]
and a follow-up test case is constructed by changing the value of the following parameters [projectsIHaveBacked:showProjectsIHaveBacked]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR387 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects:showProjectsIHaveNotSaved, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, subcategory]
and a follow-up test case is constructed by changing the value of the following parameters [savedProjects:showProjectsIHaveSaved]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR271 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, raised, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [filterProjects]
and a follow-up test case is constructed by adding the following parameters [following, goal, projectsIHaveBacked, searchQuery]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR27 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects:liveProjects, amountPledged, category, subcategory]
and a follow-up test case is constructed by changing the value of the following parameters [filterProjects:successfulProjects]
and a follow-up test case is constructed by changing the value of the following parameters [filterProjects:upcomingProjects]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR449 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, location, projectsIHaveBacked, raised, recommendedForMe, savedProjects]
and a follow-up test case is constructed by removing the following parameters [projectsWeLove]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR428 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, location, projectsIHaveBacked, projectsWeLove, raised, savedProjects, searchQuery, subcategory]
and a follow-up test case is constructed by removing the following parameters [goal]
and a follow-up test case is constructed by removing the following parameters [recommendedForMe]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR352 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category]
and a follow-up test case is constructed by removing the following parameters [location, projectsIHaveBacked, projectsWeLove, raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [following, recommendedForMe, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR109 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [following, raised]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR463 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category]
and a follow-up test case is constructed by adding the following parameters [searchQuery, subcategory]
and a follow-up test case is constructed by adding the following parameters [goal]
and a follow-up test case is constructed by adding the following parameters [filterProjects]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR76 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, raised, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [amountPledged, filterProjects, following, savedProjects]
and a follow-up test case is constructed by adding the following parameters [goal]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR219 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, goal:<$1,000 goal, category]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$1,000 to $10,000 goal]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR103 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, goal, projectsIHaveBacked, projectsWeLove, recommendedForMe, savedProjects, subcategory]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR383 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [amountPledged, following]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR401 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, recommendedForMe, raised, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [projectsWeLove, recommendedForMe, searchQuery, subcategory]
and a follow-up test case is constructed by removing the following parameters [following, raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR96 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, goal, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [filterProjects, savedProjects, subcategory]
and a follow-up test case is constructed by removing the following parameters [projectsWeLove, recommendedForMe, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR338 (DISJOINT_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, category:Games, subcategory]
and a follow-up test case is constructed by changing the value of the following parameters [category:Art]
and a follow-up test case is constructed by changing the value of the following parameters [category:Comics]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR58 (COMPLETE_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, raised, category]
and a follow-up test case is constructed by adding the following parameters [amountPledged:<$1,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$10,000 to $100,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$100,000 to $1,000,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:>$1,000,000 pledged]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR459 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, projectsWeLove, raised, recommendedForMe]
and a follow-up test case is constructed by removing the following parameters [location, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR412 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, recommendedForMe, raised, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR216 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged:<$1,000 pledged, goal, category]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$10,000 to $100,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$100,000 to $1,000,000 pledged]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR9 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, projectsWeLove, recommendedForMe, savedProjects, subcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR97 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, goal, projectsIHaveBacked, projectsWeLove, recommendedForMe, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [subcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR277 (DISJOINT_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, raised:<75% raised, category, subcategory]
and a follow-up test case is constructed by changing the value of the following parameters [raised:75% to 100% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:>100% raised]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR162 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, raised:<75% raised, category, subcategory]
and a follow-up test case is constructed by changing the value of the following parameters [raised:75% to 100% raised]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR59 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, raised, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [raised]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, searchQuery]
and a follow-up test case is constructed by removing the following parameters [location, projectsWeLove, recommendedForMe, subcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR62 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, raised, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, recommendedForMe, searchQuery]
and a follow-up test case is constructed by removing the following parameters [location, projectsWeLove]
and a follow-up test case is constructed by removing the following parameters [raised, subcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR347 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category]
and a follow-up test case is constructed by removing the following parameters [following, location, projectsIHaveBacked, projectsWeLove, raised, recommendedForMe, savedProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR497 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, recommendedForMe, filterProjects, goal, category]
and a follow-up test case is constructed by adding the following parameters [raised]
and a follow-up test case is constructed by adding the following parameters [amountPledged, location, subcategory]
and a follow-up test case is constructed by adding the following parameters [following, projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR301 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category]
and a follow-up test case is constructed by adding the following parameters [amountPledged]
and a follow-up test case is constructed by adding the following parameters [following]
and a follow-up test case is constructed by adding the following parameters [subcategory]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR156 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, projectsWeLove, searchQuery]
and a follow-up test case is constructed by removing the following parameters [recommendedForMe]
and a follow-up test case is constructed by removing the following parameters [savedProjects, subcategory]
and a follow-up test case is constructed by removing the following parameters [raised]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR214 (SHUFFLING_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy:NearMe, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, goal, category]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Magic]
then the source and the follow-up output(s) should have the same items, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR346 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, projectsWeLove, raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [recommendedForMe]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
and a follow-up test case is constructed by removing the following parameters [location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR280 (DISJOINT_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, raised, category:Games, subcategory]
and a follow-up test case is constructed by changing the value of the following parameters [category:Art]
and a follow-up test case is constructed by changing the value of the following parameters [category:Comics]
and a follow-up test case is constructed by changing the value of the following parameters [category:Crafts]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR443 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category:Games, subcategory]
and a follow-up test case is constructed by changing the value of the following parameters [category:Art]
and a follow-up test case is constructed by changing the value of the following parameters [category:Comics]
and a follow-up test case is constructed by changing the value of the following parameters [category:Crafts]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR259 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, raised, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, location, savedProjects]
and a follow-up test case is constructed by removing the following parameters [recommendedForMe, subcategory]
and a follow-up test case is constructed by removing the following parameters [projectsWeLove, raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR46 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, raised, category]
and a follow-up test case is constructed by adding the following parameters [filterProjects, searchQuery, subcategory]
and a follow-up test case is constructed by adding the following parameters [amountPledged]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR35 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [location, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [following, goal, projectsWeLove, recommendedForMe, savedProjects]
and a follow-up test case is constructed by removing the following parameters [raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR236 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [raised]
and a follow-up test case is constructed by adding the following parameters [amountPledged, savedProjects]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR165 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked:showProjectsIHaveBacked, recommendedForMe, amountPledged, raised, category, subcategory]
and a follow-up test case is constructed by changing the value of the following parameters [projectsIHaveBacked:showProjectsIHaveNotBacked]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR289 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [goal]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, projectsWeLove, raised, recommendedForMe, searchQuery]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR404 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, recommendedForMe, raised, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [following, projectsWeLove, recommendedForMe, subcategory]
and a follow-up test case is constructed by removing the following parameters [raised, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR208 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, goal, category]
and a follow-up test case is constructed by adding the following parameters [filterProjects, projectsIHaveBacked, raised, subcategory]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR218 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged:<$1,000 pledged, goal, category]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$10,000 to $100,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$100,000 to $1,000,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:>$1,000,000 pledged]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR300 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category]
and a follow-up test case is constructed by adding the following parameters [amountPledged, following]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR293 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [filterProjects, projectsIHaveBacked, projectsWeLove, searchQuery]
and a follow-up test case is constructed by removing the following parameters [goal, raised, recommendedForMe, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR105 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, goal, projectsIHaveBacked, projectsWeLove, recommendedForMe, savedProjects, subcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR315 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, location, projectsWeLove, savedProjects, subcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
and a follow-up test case is constructed by removing the following parameters [recommendedForMe]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR296 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, projectsWeLove, raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [goal, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects, recommendedForMe]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR75 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, raised, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [following, goal]
and a follow-up test case is constructed by adding the following parameters [amountPledged, filterProjects]
and a follow-up test case is constructed by adding the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR239 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [amountPledged, raised]
and a follow-up test case is constructed by adding the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR288 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [goal, projectsWeLove, raised, recommendedForMe, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR51 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, raised, category]
and a follow-up test case is constructed by adding the following parameters [filterProjects, subcategory]
and a follow-up test case is constructed by adding the following parameters [amountPledged]
and a follow-up test case is constructed by adding the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR493 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, recommendedForMe, filterProjects, goal, category]
and a follow-up test case is constructed by adding the following parameters [amountPledged, following, raised]
and a follow-up test case is constructed by adding the following parameters [projectsIHaveBacked, subcategory]
and a follow-up test case is constructed by adding the following parameters [location]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR106 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
and a follow-up test case is constructed by removing the following parameters [filterProjects, goal, recommendedForMe]
and a follow-up test case is constructed by removing the following parameters [projectsWeLove, savedProjects, searchQuery, subcategory]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR454 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category]
and a follow-up test case is constructed by removing the following parameters [location]
and a follow-up test case is constructed by removing the following parameters [following, projectsIHaveBacked, projectsWeLove]
and a follow-up test case is constructed by removing the following parameters [amountPledged, savedProjects]
and a follow-up test case is constructed by removing the following parameters [recommendedForMe]
and a follow-up test case is constructed by removing the following parameters [raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR174 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, projectsWeLove, subcategory]
and a follow-up test case is constructed by removing the following parameters [goal]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [amountPledged, recommendedForMe]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR499 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, recommendedForMe, filterProjects, goal, category]
and a follow-up test case is constructed by adding the following parameters [amountPledged, raised]
and a follow-up test case is constructed by adding the following parameters [following, location, projectsIHaveBacked, subcategory]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR127 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, category]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, projectsWeLove, recommendedForMe, searchQuery]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR31 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [raised:<75% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:75% to 100% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:>100% raised]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR495 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, recommendedForMe, filterProjects, goal, category]
and a follow-up test case is constructed by adding the following parameters [amountPledged]
and a follow-up test case is constructed by adding the following parameters [subcategory]
and a follow-up test case is constructed by adding the following parameters [following, location]
and a follow-up test case is constructed by adding the following parameters [projectsIHaveBacked, raised]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR486 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, recommendedForMe, filterProjects, goal, category]
and a follow-up test case is constructed by removing the following parameters [projectsWeLove, recommendedForMe, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects, goal]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR29 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [projectsIHaveBacked:showProjectsIHaveBacked]
and a follow-up test case is constructed by changing the value of the following parameters [projectsIHaveBacked:showProjectsIHaveNotBacked]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR260 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, raised, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, location, projectsWeLove, raised, recommendedForMe, subcategory]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR149 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, raised, recommendedForMe, savedProjects, searchQuery, subcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, projectsWeLove]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR206 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, goal, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [goal]
and a follow-up test case is constructed by removing the following parameters [recommendedForMe]
and a follow-up test case is constructed by removing the following parameters [projectsWeLove]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR438 (SHUFFLING_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy:Popularity, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category, subcategory]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Magic]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Newest]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:EndDate]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:MostFunded]
then the source and the follow-up output(s) should have the same items, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR281 (DISJOINT_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, raised, category:Games, subcategory]
and a follow-up test case is constructed by changing the value of the following parameters [category:Art]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR267 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, raised, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [filterProjects, projectsIHaveBacked]
and a follow-up test case is constructed by adding the following parameters [goal, searchQuery]
and a follow-up test case is constructed by adding the following parameters [following]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR295 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [filterProjects, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [goal, projectsWeLove, recommendedForMe]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR399 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, recommendedForMe, raised, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [following, projectsWeLove, raised, recommendedForMe, searchQuery, subcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR405 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, recommendedForMe, raised, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [projectsWeLove]
and a follow-up test case is constructed by removing the following parameters [following, raised, recommendedForMe, subcategory]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR185 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR215 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following:showProjectsIDoNotFollow, recommendedForMe, amountPledged, goal, category]
and a follow-up test case is constructed by changing the value of the following parameters [following:showProjectsIFollow]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR275 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, raised, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [following, searchQuery]
and a follow-up test case is constructed by adding the following parameters [goal]
and a follow-up test case is constructed by adding the following parameters [filterProjects, projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR248 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal:<$1,000 goal, category, subcategory]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$1,000 to $10,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$10,000 to $100,000 goal]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR217 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged:<$1,000 pledged, goal, category]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR291 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [filterProjects, goal, projectsIHaveBacked, projectsWeLove, raised, recommendedForMe, savedProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR307 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category:Games]
and a follow-up test case is constructed by changing the value of the following parameters [category:Art]
and a follow-up test case is constructed by changing the value of the following parameters [category:Comics]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR445 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal:<$1,000 goal, raised, category, subcategory]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$1,000 to $10,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$10,000 to $100,000 goal]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR498 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, recommendedForMe, filterProjects, goal, category]
and a follow-up test case is constructed by adding the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by adding the following parameters [location]
and a follow-up test case is constructed by adding the following parameters [following, raised]
and a follow-up test case is constructed by adding the following parameters [amountPledged]
and a follow-up test case is constructed by adding the following parameters [subcategory]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR285 (COMPLETE_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, raised, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [projectsIHaveBacked:showProjectsIHaveBacked]
and a follow-up test case is constructed by changing the value of the following parameters [projectsIHaveBacked:showProjectsIHaveNotBacked]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR169 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [goal:<$1,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$1,000 to $10,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$10,000 to $100,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$100,000 to $1,000,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:>$1,000,000 goal]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR375 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [projectsWeLove, recommendedForMe, savedProjects]
and a follow-up test case is constructed by removing the following parameters [filterProjects, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [subcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR233 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [following, goal, location, projectsIHaveBacked, projectsWeLove, searchQuery, subcategory]
and a follow-up test case is constructed by removing the following parameters [recommendedForMe]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR114 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category:Games, subcategory]
and a follow-up test case is constructed by changing the value of the following parameters [category:Art]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR189 (DISJOINT_EXTEND):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, subcategory:Video Games]
and a follow-up test case is constructed by changing the value of the following parameters [subcategory:Conceptual Art]
and a follow-up test case is constructed by changing the value of the following parameters [subcategory:Digital Art]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR324 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [goal, projectsIHaveBacked, raised, searchQuery]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR44 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, raised, category]
and a follow-up test case is constructed by adding the following parameters [amountPledged, filterProjects, searchQuery, subcategory]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR440 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged:<$1,000 pledged, goal, raised, category, subcategory]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$10,000 to $100,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$100,000 to $1,000,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:>$1,000,000 pledged]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR258 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, raised, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [projectsWeLove, raised, recommendedForMe, savedProjects, subcategory]
and a follow-up test case is constructed by removing the following parameters [location]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR496 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, recommendedForMe, filterProjects, goal, category]
and a follow-up test case is constructed by adding the following parameters [amountPledged, location]
and a follow-up test case is constructed by adding the following parameters [following, projectsIHaveBacked, raised, subcategory]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR201 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, goal, category]
and a follow-up test case is constructed by removing the following parameters [following, goal, projectsWeLove, recommendedForMe, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR101 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, goal, projectsIHaveBacked, projectsWeLove, recommendedForMe, savedProjects, searchQuery, subcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR419 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, recommendedForMe, raised, category:Games, subcategory]
and a follow-up test case is constructed by changing the value of the following parameters [category:Art]
and a follow-up test case is constructed by changing the value of the following parameters [category:Comics]
and a follow-up test case is constructed by changing the value of the following parameters [category:Crafts]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR196 (COMPLETE_EXTEND):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [raised:<75% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:75% to 100% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:>100% raised]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR253 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [amountPledged:<$1,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$10,000 to $100,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$100,000 to $1,000,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:>$1,000,000 pledged]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR393 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [amountPledged:<$1,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$10,000 to $100,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$100,000 to $1,000,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:>$1,000,000 pledged]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR188 (DISJOINT_EXTEND):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged:<$1,000 pledged, goal, category, subcategory]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR48 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, raised, category]
and a follow-up test case is constructed by adding the following parameters [filterProjects, searchQuery]
and a follow-up test case is constructed by adding the following parameters [amountPledged, subcategory]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR147 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [following, projectsWeLove]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [amountPledged, recommendedForMe, searchQuery, subcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR235 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [amountPledged, raised, savedProjects]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR507 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, recommendedForMe, filterProjects, goal:<$1,000 goal, category]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$1,000 to $10,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$10,000 to $100,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$100,000 to $1,000,000 goal]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR273 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, raised, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [following]
and a follow-up test case is constructed by adding the following parameters [filterProjects]
and a follow-up test case is constructed by adding the following parameters [searchQuery]
and a follow-up test case is constructed by adding the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by adding the following parameters [goal]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR270 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, raised, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [goal, projectsIHaveBacked]
and a follow-up test case is constructed by adding the following parameters [following]
and a follow-up test case is constructed by adding the following parameters [filterProjects]
and a follow-up test case is constructed by adding the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR220 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, goal, category]
and a follow-up test case is constructed by adding the following parameters [projectsIHaveBacked:showProjectsIHaveBacked]
and a follow-up test case is constructed by changing the value of the following parameters [projectsIHaveBacked:showProjectsIHaveNotBacked]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR36 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [following, goal, projectsIHaveBacked, projectsWeLove, raised, recommendedForMe, savedProjects]
and a follow-up test case is constructed by removing the following parameters [location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR447 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [following:showProjectsIFollow]
and a follow-up test case is constructed by changing the value of the following parameters [following:showProjectsIDoNotFollow]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR37 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [following, location, projectsWeLove, raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [goal, recommendedForMe]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR179 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, recommendedForMe]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, following, goal, projectsWeLove, subcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR436 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, goal, location, recommendedForMe, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects, projectsIHaveBacked, projectsWeLove, raised, savedProjects, subcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR432 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, projectsWeLove, recommendedForMe]
and a follow-up test case is constructed by removing the following parameters [filterProjects, raised, savedProjects, subcategory]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [location, searchQuery]
and a follow-up test case is constructed by removing the following parameters [goal]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR453 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, location, projectsIHaveBacked, projectsWeLove, raised, recommendedForMe, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR110 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [raised]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR468 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category]
and a follow-up test case is constructed by adding the following parameters [goal]
and a follow-up test case is constructed by adding the following parameters [subcategory]
and a follow-up test case is constructed by adding the following parameters [searchQuery]
and a follow-up test case is constructed by adding the following parameters [filterProjects]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR111 (SHUFFLING_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy:NearMe, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, subcategory]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Magic]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Popularity]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Newest]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:EndDate]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:MostFunded]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:MostBacked]
then the source and the follow-up output(s) should have the same items, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR146 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, projectsIHaveBacked, projectsWeLove, raised, savedProjects, searchQuery, subcategory]
and a follow-up test case is constructed by removing the following parameters [recommendedForMe]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR212 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, goal, category]
and a follow-up test case is constructed by adding the following parameters [projectsIHaveBacked, raised]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR199 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, goal, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, goal, recommendedForMe, savedProjects]
and a follow-up test case is constructed by removing the following parameters [following, projectsWeLove, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR209 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, goal, category]
and a follow-up test case is constructed by adding the following parameters [raised, subcategory]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR129 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, category]
and a follow-up test case is constructed by removing the following parameters [following, projectsIHaveBacked, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects, projectsWeLove, recommendedForMe]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR24 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following:showProjectsIFollow, recommendedForMe, filterProjects, amountPledged, category, subcategory]
and a follow-up test case is constructed by changing the value of the following parameters [following:showProjectsIDoNotFollow]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR145 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, projectsIHaveBacked, projectsWeLove, raised, recommendedForMe, savedProjects, searchQuery, subcategory]
and a follow-up test case is constructed by removing the following parameters [following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR116 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged:<$1,000 pledged, goal, category, subcategory]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR433 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, goal, subcategory]
and a follow-up test case is constructed by removing the following parameters [location, raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, projectsWeLove]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
and a follow-up test case is constructed by removing the following parameters [recommendedForMe]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR23 (SHUFFLING_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy:Popularity, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, category, subcategory]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Magic]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Newest]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:EndDate]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:MostFunded]
then the source and the follow-up output(s) should have the same items, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR81 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, raised, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [amountPledged, goal]
and a follow-up test case is constructed by adding the following parameters [filterProjects, savedProjects]
and a follow-up test case is constructed by adding the following parameters [following]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR437 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [following]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR319 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, location, projectsWeLove, subcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, recommendedForMe, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR119 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [following:showProjectsIFollow]
and a follow-up test case is constructed by changing the value of the following parameters [following:showProjectsIDoNotFollow]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR234 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, projectsWeLove]
and a follow-up test case is constructed by removing the following parameters [location, recommendedForMe, searchQuery, subcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, goal]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR318 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [savedProjects, subcategory]
and a follow-up test case is constructed by removing the following parameters [following, location, projectsWeLove]
and a follow-up test case is constructed by removing the following parameters [amountPledged, recommendedForMe]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR163 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following:showProjectsIDoNotFollow, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category, subcategory]
and a follow-up test case is constructed by changing the value of the following parameters [following:showProjectsIFollow]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR43 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [following, goal, location, projectsIHaveBacked, projectsWeLove, raised, recommendedForMe, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR313 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, location, recommendedForMe, savedProjects, subcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, projectsWeLove]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR430 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, goal, location, projectsIHaveBacked, projectsWeLove, raised, recommendedForMe, savedProjects]
and a follow-up test case is constructed by removing the following parameters [subcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR424 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, goal, location, projectsIHaveBacked, projectsWeLove, raised, recommendedForMe, savedProjects, searchQuery, subcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR489 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, recommendedForMe, filterProjects, goal, category]
and a follow-up test case is constructed by removing the following parameters [filterProjects, recommendedForMe]
and a follow-up test case is constructed by removing the following parameters [goal, projectsWeLove]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR3 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, projectsWeLove, recommendedForMe, savedProjects, subcategory]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
and a follow-up test case is constructed by removing the following parameters [following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR254 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, raised, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, recommendedForMe]
and a follow-up test case is constructed by removing the following parameters [location]
and a follow-up test case is constructed by removing the following parameters [raised, savedProjects, subcategory]
and a follow-up test case is constructed by removing the following parameters [projectsWeLove]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR45 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, raised, category]
and a follow-up test case is constructed by adding the following parameters [amountPledged, subcategory]
and a follow-up test case is constructed by adding the following parameters [searchQuery]
and a follow-up test case is constructed by adding the following parameters [filterProjects]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR274 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, raised, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [goal, projectsIHaveBacked, searchQuery]
and a follow-up test case is constructed by adding the following parameters [filterProjects, following]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR491 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, recommendedForMe, filterProjects, goal, category]
and a follow-up test case is constructed by adding the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by adding the following parameters [raised, subcategory]
and a follow-up test case is constructed by adding the following parameters [amountPledged, location]
and a follow-up test case is constructed by adding the following parameters [following]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR451 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category]
and a follow-up test case is constructed by removing the following parameters [recommendedForMe, savedProjects]
and a follow-up test case is constructed by removing the following parameters [following, raised]
and a follow-up test case is constructed by removing the following parameters [amountPledged, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [location, projectsWeLove]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR266 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, raised, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by adding the following parameters [searchQuery]
and a follow-up test case is constructed by adding the following parameters [following]
and a follow-up test case is constructed by adding the following parameters [filterProjects, goal]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR121 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, category]
and a follow-up test case is constructed by removing the following parameters [following, projectsWeLove, recommendedForMe, searchQuery]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR327 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [goal]
and a follow-up test case is constructed by adding the following parameters [raised]
and a follow-up test case is constructed by adding the following parameters [projectsIHaveBacked, searchQuery]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR431 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, projectsIHaveBacked, projectsWeLove, subcategory]
and a follow-up test case is constructed by removing the following parameters [goal, location, recommendedForMe]
and a follow-up test case is constructed by removing the following parameters [filterProjects, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR184 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [raised, searchQuery]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR312 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, following, location, projectsWeLove, recommendedForMe, savedProjects, subcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR137 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, category]
and a follow-up test case is constructed by adding the following parameters [amountPledged, goal, raised]
and a follow-up test case is constructed by adding the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR345 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category]
and a follow-up test case is constructed by removing the following parameters [following, location, projectsIHaveBacked, projectsWeLove, raised, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [recommendedForMe]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR193 (DISJOINT_EXTEND):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, subcategory:Video Games]
and a follow-up test case is constructed by changing the value of the following parameters [subcategory:Conceptual Art]
and a follow-up test case is constructed by changing the value of the following parameters [subcategory:Digital Art]
and a follow-up test case is constructed by changing the value of the following parameters [subcategory:Mixed Media]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR139 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following:showProjectsIFollow, projectsIHaveBacked, recommendedForMe, filterProjects, category]
and a follow-up test case is constructed by changing the value of the following parameters [following:showProjectsIDoNotFollow]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR161 (SHUFFLING_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy:NearMe, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category, subcategory]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Magic]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Popularity]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Newest]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:EndDate]
then the source and the follow-up output(s) should have the same items, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR186 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [raised, savedProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR455 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category]
and a follow-up test case is constructed by removing the following parameters [location, projectsWeLove]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
and a follow-up test case is constructed by removing the following parameters [recommendedForMe, savedProjects]
and a follow-up test case is constructed by removing the following parameters [following, raised]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR242 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [raised]
and a follow-up test case is constructed by adding the following parameters [savedProjects]
and a follow-up test case is constructed by adding the following parameters [amountPledged]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR231 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [subcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, goal, location, projectsIHaveBacked, recommendedForMe, searchQuery]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [projectsWeLove]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR334 (DISJOINT_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged:<$1,000 pledged, category, subcategory]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$10,000 to $100,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$100,000 to $1,000,000 pledged]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR211 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, goal, category]
and a follow-up test case is constructed by adding the following parameters [filterProjects, projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR478 (DISJOINT_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, raised:<75% raised, category]
and a follow-up test case is constructed by changing the value of the following parameters [raised:75% to 100% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:>100% raised]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR94 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, raised, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [following:showProjectsIFollow]
and a follow-up test case is constructed by changing the value of the following parameters [following:showProjectsIDoNotFollow]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR237 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [amountPledged]
and a follow-up test case is constructed by adding the following parameters [raised, savedProjects]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR374 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, projectsIHaveBacked, projectsWeLove, raised, recommendedForMe, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [subcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR190 (DISJOINT_EXTEND):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category:Games, subcategory]
and a follow-up test case is constructed by changing the value of the following parameters [category:Art]
and a follow-up test case is constructed by changing the value of the following parameters [category:Comics]
and a follow-up test case is constructed by changing the value of the following parameters [category:Crafts]
and a follow-up test case is constructed by changing the value of the following parameters [category:Dance]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR292 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, projectsWeLove, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects, goal, raised, recommendedForMe, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR506 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, recommendedForMe, filterProjects:liveProjects, goal, category]
and a follow-up test case is constructed by changing the value of the following parameters [filterProjects:successfulProjects]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR355 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category]
and a follow-up test case is constructed by adding the following parameters [goal, subcategory]
and a follow-up test case is constructed by adding the following parameters [amountPledged, filterProjects]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR354 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category]
and a follow-up test case is constructed by adding the following parameters [amountPledged, filterProjects, goal]
and a follow-up test case is constructed by adding the following parameters [subcategory]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR317 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, location, projectsWeLove, recommendedForMe, savedProjects, subcategory]
and a follow-up test case is constructed by removing the following parameters [following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR34 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [following, goal, location, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [projectsWeLove, raised, recommendedForMe, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR306 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category:Games]
and a follow-up test case is constructed by changing the value of the following parameters [category:Art]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR320 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, location, projectsWeLove]
and a follow-up test case is constructed by removing the following parameters [amountPledged, savedProjects, subcategory]
and a follow-up test case is constructed by removing the following parameters [recommendedForMe]
and a follow-up test case is constructed by removing the following parameters [following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR107 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, projectsWeLove, recommendedForMe, searchQuery, subcategory]
and a follow-up test case is constructed by removing the following parameters [goal]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR88 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, raised:<75% raised, category, subcategory]
and a follow-up test case is constructed by changing the value of the following parameters [raised:75% to 100% raised]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR509 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects:showProjectsIHaveSaved, recommendedForMe, filterProjects, goal, category]
and a follow-up test case is constructed by changing the value of the following parameters [savedProjects:showProjectsIHaveNotSaved]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR314 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
and a follow-up test case is constructed by removing the following parameters [amountPledged, location]
and a follow-up test case is constructed by removing the following parameters [following, projectsWeLove, recommendedForMe]
and a follow-up test case is constructed by removing the following parameters [savedProjects, subcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR278 (DISJOINT_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects:showProjectsIHaveNotSaved, recommendedForMe, amountPledged, raised, category, subcategory]
and a follow-up test case is constructed by changing the value of the following parameters [savedProjects:showProjectsIHaveSaved]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR513 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, recommendedForMe, filterProjects, goal, category]
and a follow-up test case is constructed by adding the following parameters [projectsIHaveBacked:showProjectsIHaveBacked]
and a follow-up test case is constructed by changing the value of the following parameters [projectsIHaveBacked:showProjectsIHaveNotBacked]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR99 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, projectsIHaveBacked, projectsWeLove, recommendedForMe, searchQuery, subcategory]
and a follow-up test case is constructed by removing the following parameters [goal, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR286 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [filterProjects, goal, projectsIHaveBacked, raised, recommendedForMe, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [projectsWeLove]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR118 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [raised:<75% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:75% to 100% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:>100% raised]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR402 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, recommendedForMe, raised, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [following, searchQuery, subcategory]
and a follow-up test case is constructed by removing the following parameters [projectsWeLove, raised, recommendedForMe]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR384 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [goal]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR164 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged:<$1,000 pledged, raised, category, subcategory]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR341 (COMPLETE_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [raised:<75% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:75% to 100% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:>100% raised]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR159 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [filterProjects]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR392 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, subcategory:Video Games]
and a follow-up test case is constructed by changing the value of the following parameters [subcategory:Conceptual Art]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR61 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, raised, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [raised]
and a follow-up test case is constructed by removing the following parameters [projectsWeLove, searchQuery]
and a follow-up test case is constructed by removing the following parameters [recommendedForMe]
and a follow-up test case is constructed by removing the following parameters [location]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, subcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR282 (DISJOINT_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged:<$1,000 pledged, raised, category, subcategory]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$10,000 to $100,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$100,000 to $1,000,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:>$1,000,000 pledged]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR426 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, location, searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged, goal, projectsIHaveBacked, projectsWeLove]
and a follow-up test case is constructed by removing the following parameters [recommendedForMe, savedProjects, subcategory]
and a follow-up test case is constructed by removing the following parameters [raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR232 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, goal, location, recommendedForMe, subcategory]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, projectsWeLove, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR255 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, raised, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, raised, recommendedForMe, subcategory]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [location, projectsWeLove]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR287 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [raised, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects, goal, projectsIHaveBacked, projectsWeLove, recommendedForMe]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR120 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, category]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, projectsIHaveBacked, projectsWeLove, recommendedForMe, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR422 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, recommendedForMe, raised, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [projectsIHaveBacked:showProjectsIHaveBacked]
and a follow-up test case is constructed by changing the value of the following parameters [projectsIHaveBacked:showProjectsIHaveNotBacked]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR177 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, goal, projectsIHaveBacked, recommendedForMe, subcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, projectsWeLove]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR132 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, category]
and a follow-up test case is constructed by adding the following parameters [raised]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR39 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [following, location]
and a follow-up test case is constructed by removing the following parameters [goal, raised, recommendedForMe]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, projectsWeLove, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR407 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, recommendedForMe, raised, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [projectsWeLove, recommendedForMe, subcategory]
and a follow-up test case is constructed by removing the following parameters [raised]
and a follow-up test case is constructed by removing the following parameters [following, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR140 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects:liveProjects, category]
and a follow-up test case is constructed by changing the value of the following parameters [filterProjects:successfulProjects]
and a follow-up test case is constructed by changing the value of the following parameters [filterProjects:upcomingProjects]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR204 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, goal, category]
and a follow-up test case is constructed by removing the following parameters [goal, recommendedForMe, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
and a follow-up test case is constructed by removing the following parameters [following, projectsWeLove]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR112 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked:showProjectsIHaveNotBacked, recommendedForMe, filterProjects, amountPledged, goal, category, subcategory]
and a follow-up test case is constructed by changing the value of the following parameters [projectsIHaveBacked:showProjectsIHaveBacked]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR55 (DISJOINT_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal:<$1,000 goal, raised, category]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$1,000 to $10,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$10,000 to $100,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$100,000 to $1,000,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:>$1,000,000 goal]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR396 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, recommendedForMe, raised, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [projectsWeLove]
and a follow-up test case is constructed by removing the following parameters [following, raised, recommendedForMe, searchQuery, subcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR472 (DISJOINT_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked:showProjectsIHaveNotBacked, recommendedForMe, amountPledged, raised, category]
and a follow-up test case is constructed by changing the value of the following parameters [projectsIHaveBacked:showProjectsIHaveBacked]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR460 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category]
and a follow-up test case is constructed by adding the following parameters [filterProjects, goal, searchQuery, subcategory]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR353 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category]
and a follow-up test case is constructed by adding the following parameters [filterProjects, goal]
and a follow-up test case is constructed by adding the following parameters [amountPledged]
and a follow-up test case is constructed by adding the following parameters [subcategory]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR365 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects:showProjectsIHaveSaved, following, projectsIHaveBacked, recommendedForMe, raised, category]
and a follow-up test case is constructed by changing the value of the following parameters [savedProjects:showProjectsIHaveNotSaved]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR423 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, recommendedForMe, raised, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [amountPledged:<$1,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$10,000 to $100,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$100,000 to $1,000,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:>$1,000,000 pledged]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR479 (DISJOINT_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following:showProjectsIDoNotFollow, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category]
and a follow-up test case is constructed by changing the value of the following parameters [following:showProjectsIFollow]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR70 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, raised, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [location, projectsIHaveBacked, searchQuery, subcategory]
and a follow-up test case is constructed by removing the following parameters [raised, recommendedForMe]
and a follow-up test case is constructed by removing the following parameters [projectsWeLove]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR265 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, raised, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [projectsWeLove, recommendedForMe, subcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, location, raised, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR328 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [goal, projectsIHaveBacked, raised]
and a follow-up test case is constructed by adding the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR21 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [raised]
and a follow-up test case is constructed by adding the following parameters [goal, location]
and a follow-up test case is constructed by adding the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR263 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, raised, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [projectsWeLove, raised, recommendedForMe, savedProjects]
and a follow-up test case is constructed by removing the following parameters [amountPledged, location, subcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR134 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, category]
and a follow-up test case is constructed by adding the following parameters [subcategory]
and a follow-up test case is constructed by adding the following parameters [amountPledged]
and a follow-up test case is constructed by adding the following parameters [goal, raised]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR283 (COMPLETE_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, raised, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [goal:<$1,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$1,000 to $10,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$10,000 to $100,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$100,000 to $1,000,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:>$1,000,000 goal]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR348 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category]
and a follow-up test case is constructed by removing the following parameters [following, projectsWeLove, recommendedForMe, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [location, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR53 (DISJOINT_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked:showProjectsIHaveBacked, recommendedForMe, goal, raised, category]
and a follow-up test case is constructed by changing the value of the following parameters [projectsIHaveBacked:showProjectsIHaveNotBacked]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR473 (DISJOINT_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged:<$1,000 pledged, raised, category]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR20 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by adding the following parameters [goal, location, raised]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR205 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, goal, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, goal, recommendedForMe, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [projectsWeLove]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR458 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category]
and a follow-up test case is constructed by removing the following parameters [following, projectsIHaveBacked, projectsWeLove, raised, recommendedForMe, savedProjects]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
and a follow-up test case is constructed by removing the following parameters [location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR462 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category]
and a follow-up test case is constructed by adding the following parameters [filterProjects, goal]
and a follow-up test case is constructed by adding the following parameters [searchQuery, subcategory]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR359 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category]
and a follow-up test case is constructed by adding the following parameters [amountPledged, filterProjects, subcategory]
and a follow-up test case is constructed by adding the following parameters [goal]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR154 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, subcategory]
and a follow-up test case is constructed by removing the following parameters [recommendedForMe, searchQuery]
and a follow-up test case is constructed by removing the following parameters [following, raised]
and a follow-up test case is constructed by removing the following parameters [amountPledged, projectsWeLove, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR279 (DISJOINT_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, raised, category:Games, subcategory]
and a follow-up test case is constructed by changing the value of the following parameters [category:Art]
and a follow-up test case is constructed by changing the value of the following parameters [category:Comics]
and a follow-up test case is constructed by changing the value of the following parameters [category:Crafts]
and a follow-up test case is constructed by changing the value of the following parameters [category:Dance]
and a follow-up test case is constructed by changing the value of the following parameters [category:Design]
and a follow-up test case is constructed by changing the value of the following parameters [category:Fashion]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR388 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, raised:<75% raised, category, subcategory]
and a follow-up test case is constructed by changing the value of the following parameters [raised:75% to 100% raised]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR485 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, recommendedForMe, filterProjects, goal, category]
and a follow-up test case is constructed by removing the following parameters [filterProjects, projectsWeLove, savedProjects]
and a follow-up test case is constructed by removing the following parameters [goal, recommendedForMe, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR511 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, recommendedForMe, filterProjects, goal:<$1,000 goal, category]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$1,000 to $10,000 goal]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR500 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, recommendedForMe, filterProjects, goal, category]
and a follow-up test case is constructed by adding the following parameters [amountPledged]
and a follow-up test case is constructed by adding the following parameters [location, subcategory]
and a follow-up test case is constructed by adding the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by adding the following parameters [following, raised]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR181 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [following, goal, projectsIHaveBacked, projectsWeLove, recommendedForMe, subcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR247 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, category, subcategory:Tabletop Games]
and a follow-up test case is constructed by changing the value of the following parameters [subcategory:Conceptual Art]
and a follow-up test case is constructed by changing the value of the following parameters [subcategory:Digital Art]
and a follow-up test case is constructed by changing the value of the following parameters [subcategory:Mixed Media]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR297 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category]
and a follow-up test case is constructed by adding the following parameters [amountPledged, following, subcategory]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR144 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, category]
and a follow-up test case is constructed by adding the following parameters [raised:<75% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:75% to 100% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:>100% raised]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR223 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, location, projectsIHaveBacked, projectsWeLove, recommendedForMe, searchQuery, subcategory]
and a follow-up test case is constructed by removing the following parameters [goal]
and a follow-up test case is constructed by removing the following parameters [following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR332 (DISJOINT_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, category, subcategory:Tabletop Games]
and a follow-up test case is constructed by changing the value of the following parameters [subcategory:Conceptual Art]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR136 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, category]
and a follow-up test case is constructed by adding the following parameters [subcategory]
and a follow-up test case is constructed by adding the following parameters [amountPledged, goal, savedProjects]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR272 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, raised, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [filterProjects, following, projectsIHaveBacked]
and a follow-up test case is constructed by adding the following parameters [goal, searchQuery]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR350 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category]
and a follow-up test case is constructed by removing the following parameters [location, projectsWeLove, searchQuery]
and a follow-up test case is constructed by removing the following parameters [following, projectsIHaveBacked, raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [recommendedForMe]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR367 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following:showProjectsIFollow, projectsIHaveBacked, recommendedForMe, raised, category]
and a follow-up test case is constructed by changing the value of the following parameters [following:showProjectsIDoNotFollow]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR261 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, raised, category, subcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, recommendedForMe]
and a follow-up test case is constructed by removing the following parameters [projectsWeLove, savedProjects]
and a follow-up test case is constructed by removing the following parameters [raised, subcategory]
and a follow-up test case is constructed by removing the following parameters [location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR243 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, category, subcategory]
and a follow-up test case is constructed by adding the following parameters [amountPledged, savedProjects]
and a follow-up test case is constructed by adding the following parameters [raised]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

