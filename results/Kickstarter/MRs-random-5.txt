In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR659 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, goal, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [amountPledged, projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR351 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, raised, category, journalismSubcategory]
and a follow-up test case is constructed by removing the following parameters [goal, journalismSubcategory, projectsIHaveBacked, raised, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [following, location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1135 (COMPLETE_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, category, danceSubcategory]
and a follow-up test case is constructed by adding the following parameters [amountPledged:<$1,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$10,000 to $100,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$100,000 to $1,000,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:>$1,000,000 pledged]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR430 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following:showProjectsIDoNotFollow, projectsIHaveBacked, recommendedForMe, amountPledged, goal, raised, category, designSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [following:showProjectsIFollow]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR189 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, designSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [designSubcategory]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category]
and a follow-up test case is constructed by removing the following parameters [filterProjects, location, projectsIHaveBacked, raised, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1584 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, photographySubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, location, photographySubcategory, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1585 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, photographySubcategory]
and a follow-up test case is constructed by removing the following parameters [following, location, projectsIHaveBacked, savedProjects]
and a follow-up test case is constructed by removing the following parameters [filterProjects, photographySubcategory, raised, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1557 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, goal, projectsIHaveBacked, savedProjects]
and a follow-up test case is constructed by removing the following parameters [publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR49 (SHUFFLING_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy:NearMe, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Magic]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Popularity]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Newest]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:EndDate]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:MostFunded]
then the source and the follow-up output(s) should have the same items, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2153 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, raised, category]
and a follow-up test case is constructed by removing the following parameters [filterProjects, savedProjects]
and a follow-up test case is constructed by removing the following parameters [raised]
and a follow-up test case is constructed by removing the following parameters [following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR471 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, goal, category, comicsSubcategory]
and a follow-up test case is constructed by adding the following parameters [raised:<75% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:75% to 100% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:>100% raised]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR190 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, designSubcategory]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [filterProjects, projectsIHaveBacked, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [designSubcategory]
and a follow-up test case is constructed by removing the following parameters [following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR772 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, raised, category, foodSubcategory]
and a follow-up test case is constructed by removing the following parameters [location]
and a follow-up test case is constructed by removing the following parameters [raised, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [foodSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1112 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, category, danceSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, goal, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [location]
and a follow-up test case is constructed by removing the following parameters [danceSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1997 (SHUFFLING_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy:NearMe, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Magic]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Popularity]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Newest]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:EndDate]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:MostFunded]
then the source and the follow-up output(s) should have the same items, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2018 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects, goal]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [location, raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR569 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category, musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, goal, musicSubcategory, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR145 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category, craftsSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, craftsSubcategory, filterProjects, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [following, goal, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1973 (DISJOINT_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, raised:<75% raised, category]
and a follow-up test case is constructed by changing the value of the following parameters [raised:75% to 100% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:>100% raised]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1593 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, photographySubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, location, raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [photographySubcategory, searchQuery]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR661 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, goal, projectsIHaveBacked, savedProjects]
and a follow-up test case is constructed by removing the following parameters [amountPledged, publishingSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR339 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, raised, category, journalismSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, goal, location, raised, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [journalismSubcategory]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1603 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects:liveProjects, raised, category, photographySubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [filterProjects:successfulProjects]
and a follow-up test case is constructed by changing the value of the following parameters [filterProjects:upcomingProjects]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1113 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, category, danceSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
and a follow-up test case is constructed by removing the following parameters [location]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [danceSubcategory, following, goal]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2025 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, goal, location, projectsIHaveBacked, raised, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1319 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, artSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, savedProjects]
and a follow-up test case is constructed by removing the following parameters [filterProjects, location]
and a follow-up test case is constructed by removing the following parameters [artSubcategory]
and a follow-up test case is constructed by removing the following parameters [raised]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR95 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [filmAndVideoSubcategory, filterProjects, following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR745 (SHUFFLING_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy:Popularity, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category, danceSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Magic]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Newest]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:EndDate]
then the source and the follow-up output(s) should have the same items, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1122 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, category, danceSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, goal, location, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [danceSubcategory, filterProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR12 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category]
and a follow-up test case is constructed by removing the following parameters [location, searchQuery]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, raised]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1249 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, category, artSubcategory]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
and a follow-up test case is constructed by removing the following parameters [artSubcategory, filterProjects, savedProjects]
and a follow-up test case is constructed by removing the following parameters [following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR933 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, publishingSubcategory]
and a follow-up test case is constructed by adding the following parameters [savedProjects:showProjectsIHaveSaved]
and a follow-up test case is constructed by changing the value of the following parameters [savedProjects:showProjectsIHaveNotSaved]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR656 (COMPLETE_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, technologySubcategory]
and a follow-up test case is constructed by adding the following parameters [following:showProjectsIFollow]
and a follow-up test case is constructed by changing the value of the following parameters [following:showProjectsIDoNotFollow]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1669 (SHUFFLING_EXTEND):
if a source test case is run with the inputs [location, sortBy:Popularity, projectsWeLove, projectsIHaveBacked, recommendedForMe, category, comicsSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Magic]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Newest]
then the source and the follow-up output(s) should have the same items, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1937 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked:showProjectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category]
and a follow-up test case is constructed by changing the value of the following parameters [projectsIHaveBacked:showProjectsIHaveNotBacked]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR335 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, raised, category, journalismSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, goal, location, searchQuery]
and a follow-up test case is constructed by removing the following parameters [journalismSubcategory, projectsIHaveBacked, raised, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1152 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, category, gamesSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, location]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [amountPledged, gamesSubcategory, projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1233 (COMPLETE_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category, musicSubcategory]
and a follow-up test case is constructed by adding the following parameters [amountPledged:<$1,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$10,000 to $100,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$100,000 to $1,000,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:>$1,000,000 pledged]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1795 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, category, photographySubcategory]
and a follow-up test case is constructed by adding the following parameters [raised:<75% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:75% to 100% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:>100% raised]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1297 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, artSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [artSubcategory, location, savedProjects]
and a follow-up test case is constructed by removing the following parameters [raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR24 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category]
and a follow-up test case is constructed by adding the following parameters [savedProjects:showProjectsIHaveSaved]
and a follow-up test case is constructed by changing the value of the following parameters [savedProjects:showProjectsIHaveNotSaved]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR523 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, recommendedForMe, goal, raised, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by removing the following parameters [location, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filmAndVideoSubcategory, goal]
and a follow-up test case is constructed by removing the following parameters [raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1948 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [location]
and a follow-up test case is constructed by removing the following parameters [amountPledged, raised]
and a follow-up test case is constructed by removing the following parameters [following, goal, projectsIHaveBacked, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1521 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, category, danceSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [danceSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR621 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, recommendedForMe, filterProjects, amountPledged:<$1,000 pledged, category, journalismSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$10,000 to $100,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$100,000 to $1,000,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:>$1,000,000 pledged]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2146 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, raised, category]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, raised, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1035 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, goal, category, gamesSubcategory]
and a follow-up test case is constructed by removing the following parameters [goal, location]
and a follow-up test case is constructed by removing the following parameters [amountPledged, gamesSubcategory, savedProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1600 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked:showProjectsIHaveNotBacked, recommendedForMe, filterProjects, raised, category, photographySubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [projectsIHaveBacked:showProjectsIHaveBacked]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR990 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category, artSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, projectsIHaveBacked, raised, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [artSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR971 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, category, journalismSubcategory]
and a follow-up test case is constructed by removing the following parameters [journalismSubcategory, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [location, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1498 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, raised, category, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, savedProjects]
and a follow-up test case is constructed by removing the following parameters [following, location, raised, theaterSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR789 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, category, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, projectsIHaveBacked, savedProjects, searchQuery, theaterSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1700 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, recommendedForMe, filterProjects, category, fashionSubcategory]
and a follow-up test case is constructed by removing the following parameters [fashionSubcategory, filterProjects, following, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR389 (SHUFFLING_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy:Popularity, projectsWeLove, savedProjects, recommendedForMe, amountPledged, goal, category, designSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Magic]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Newest]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:EndDate]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:MostFunded]
then the source and the follow-up output(s) should have the same items, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR593 (SHUFFLING_EXTEND):
if a source test case is run with the inputs [sortBy:NearMe, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category, musicSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Magic]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Popularity]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Newest]
then the source and the follow-up output(s) should have the same items, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1338 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, projectsIHaveBacked, raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR313 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, raised, category, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, location]
and a follow-up test case is constructed by removing the following parameters [goal, projectsIHaveBacked, raised, savedProjects, theaterSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1950 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, goal, projectsIHaveBacked, savedProjects]
and a follow-up test case is constructed by removing the following parameters [location, raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1796 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, category, photographySubcategory]
and a follow-up test case is constructed by adding the following parameters [goal:<$1,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$1,000 to $10,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$10,000 to $100,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$100,000 to $1,000,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:>$1,000,000 goal]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1087 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, goal, category, photographySubcategory]
and a follow-up test case is constructed by removing the following parameters [following, photographySubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
and a follow-up test case is constructed by removing the following parameters [goal]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR578 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category, musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, musicSubcategory, raised]
and a follow-up test case is constructed by removing the following parameters [following, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [goal]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR552 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, fashionSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, fashionSubcategory, following, goal, projectsIHaveBacked, savedProjects]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1716 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, recommendedForMe, filterProjects:liveProjects, category, fashionSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [filterProjects:successfulProjects]
and a follow-up test case is constructed by changing the value of the following parameters [filterProjects:upcomingProjects]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR424 (SHUFFLING_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy:Popularity, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, raised, category, designSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Magic]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Newest]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:EndDate]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:MostFunded]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:MostBacked]
then the source and the follow-up output(s) should have the same items, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR720 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category, danceSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, location, projectsIHaveBacked, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [danceSubcategory, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR546 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, fashionSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, fashionSubcategory, filterProjects, following, goal]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR4 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category]
and a follow-up test case is constructed by removing the following parameters [filterProjects, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [location, projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1403 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, category, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, savedProjects, searchQuery, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR734 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category, danceSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, danceSubcategory, projectsIHaveBacked, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1904 (SHUFFLING_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy:Popularity, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, category]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Magic]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Newest]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:EndDate]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:MostFunded]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:MostBacked]
then the source and the follow-up output(s) should have the same items, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1721 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, recommendedForMe, filterProjects, category, fashionSubcategory]
and a follow-up test case is constructed by adding the following parameters [savedProjects:showProjectsIHaveSaved]
and a follow-up test case is constructed by changing the value of the following parameters [savedProjects:showProjectsIHaveNotSaved]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR891 (SHUFFLING_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy:Popularity, projectsWeLove, savedProjects, recommendedForMe, filterProjects, raised, category, publishingSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Magic]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Newest]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:EndDate]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:MostFunded]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:MostBacked]
then the source and the follow-up output(s) should have the same items, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1691 (SHUFFLING_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy:Popularity, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Magic]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Newest]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:EndDate]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:MostFunded]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:MostBacked]
then the source and the follow-up output(s) should have the same items, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR928 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following:showProjectsIFollow, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, publishingSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [following:showProjectsIDoNotFollow]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR87 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
and a follow-up test case is constructed by removing the following parameters [filmAndVideoSubcategory, filterProjects]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1184 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, raised, category, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
and a follow-up test case is constructed by removing the following parameters [following, raised, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR653 (DISJOINT_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, technologySubcategory:Hardware]
and a follow-up test case is constructed by changing the value of the following parameters [technologySubcategory:3D Printing]
and a follow-up test case is constructed by changing the value of the following parameters [technologySubcategory:Apps]
and a follow-up test case is constructed by changing the value of the following parameters [technologySubcategory:Camera Equipment]
and a follow-up test case is constructed by changing the value of the following parameters [technologySubcategory:DIY Electronics]
and a follow-up test case is constructed by changing the value of the following parameters [technologySubcategory:Fabrication Tools]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR831 (DISJOINT_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked:showProjectsIHaveNotBacked, recommendedForMe, filterProjects, goal, category, foodSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [projectsIHaveBacked:showProjectsIHaveBacked]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR930 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked:showProjectsIHaveBacked, recommendedForMe, filterProjects, raised, category, publishingSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [projectsIHaveBacked:showProjectsIHaveNotBacked]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR133 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, category]
and a follow-up test case is constructed by adding the following parameters [raised:<75% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:75% to 100% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:>100% raised]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1550 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [goal]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [amountPledged, projectsIHaveBacked, savedProjects]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
and a follow-up test case is constructed by removing the following parameters [publishingSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR289 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, category, musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [location, musicSubcategory, projectsIHaveBacked, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1783 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, category, photographySubcategory]
and a follow-up test case is constructed by removing the following parameters [photographySubcategory, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
and a follow-up test case is constructed by removing the following parameters [location, projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1646 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, goal, location, publishingSubcategory, savedProjects]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1235 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, category, artSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, searchQuery]
and a follow-up test case is constructed by removing the following parameters [artSubcategory, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR845 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [following, goal, raised]
and a follow-up test case is constructed by removing the following parameters [filterProjects, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1230 (DISJOINT_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised:<75% raised, category, musicSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [raised:75% to 100% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:>100% raised]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR631 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, goal]
and a follow-up test case is constructed by removing the following parameters [location]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2095 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, raised, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, location]
and a follow-up test case is constructed by removing the following parameters [following, projectsIHaveBacked, raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1376 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, raised, category, designSubcategory]
and a follow-up test case is constructed by removing the following parameters [raised]
and a follow-up test case is constructed by removing the following parameters [following, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [designSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR573 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category, musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, goal, projectsIHaveBacked, raised]
and a follow-up test case is constructed by removing the following parameters [amountPledged, musicSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1751 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [filterProjects, raised]
and a follow-up test case is constructed by removing the following parameters [goal]
and a follow-up test case is constructed by removing the following parameters [following, projectsIHaveBacked, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR350 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, raised, category, journalismSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, goal, journalismSubcategory, location, projectsIHaveBacked, raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1705 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, recommendedForMe, filterProjects, category, fashionSubcategory]
and a follow-up test case is constructed by removing the following parameters [fashionSubcategory, searchQuery]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR778 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, raised, category, foodSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, location, raised, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [foodSubcategory]
and a follow-up test case is constructed by removing the following parameters [following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR853 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [goal, location, raised]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR851 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [filterProjects, location, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [goal, raised]
and a follow-up test case is constructed by removing the following parameters [following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR478 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, goal, raised, category, craftsSubcategory]
and a follow-up test case is constructed by removing the following parameters [craftsSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, goal, location, savedProjects]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following]
and a follow-up test case is constructed by removing the following parameters [raised, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2145 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, publishingSubcategory]
and a follow-up test case is constructed by adding the following parameters [raised:<75% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:75% to 100% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:>100% raised]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1500 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, raised, category, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, location, savedProjects, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR838 (COMPLETE_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, goal, category, foodSubcategory]
and a follow-up test case is constructed by adding the following parameters [raised:<75% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:75% to 100% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:>100% raised]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR246 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, recommendedForMe, filterProjects, amountPledged, category, theaterSubcategory]
and a follow-up test case is constructed by adding the following parameters [savedProjects:showProjectsIHaveSaved]
and a follow-up test case is constructed by changing the value of the following parameters [savedProjects:showProjectsIHaveNotSaved]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR821 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, goal, category, foodSubcategory]
and a follow-up test case is constructed by removing the following parameters [foodSubcategory]
and a follow-up test case is constructed by removing the following parameters [goal, location, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [filterProjects, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR371 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, goal, category, designSubcategory]
and a follow-up test case is constructed by removing the following parameters [designSubcategory, goal, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged, location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1919 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, following, projectsIHaveBacked, raised, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [goal]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1707 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, recommendedForMe, filterProjects, category, fashionSubcategory]
and a follow-up test case is constructed by removing the following parameters [fashionSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2076 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged:<$1,000 pledged, goal, raised, category]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$10,000 to $100,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$100,000 to $1,000,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:>$1,000,000 pledged]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1855 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, category]
and a follow-up test case is constructed by removing the following parameters [following, searchQuery]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR934 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category, comicsSubcategory]
and a follow-up test case is constructed by removing the following parameters [comicsSubcategory, following, savedProjects]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, raised, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1092 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, goal, category, photographySubcategory]
and a follow-up test case is constructed by removing the following parameters [goal, photographySubcategory, savedProjects]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
and a follow-up test case is constructed by removing the following parameters [following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2124 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, location]
and a follow-up test case is constructed by removing the following parameters [filterProjects, goal, projectsIHaveBacked, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1209 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category, musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, location, musicSubcategory, projectsIHaveBacked, raised]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR397 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, goal, category, designSubcategory]
and a follow-up test case is constructed by adding the following parameters [projectsIHaveBacked:showProjectsIHaveBacked]
and a follow-up test case is constructed by changing the value of the following parameters [projectsIHaveBacked:showProjectsIHaveNotBacked]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1764 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal:<$1,000 goal, raised, category]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$1,000 to $10,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$10,000 to $100,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$100,000 to $1,000,000 goal]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR925 (SHUFFLING_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy:Popularity, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, publishingSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Magic]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Newest]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:EndDate]
then the source and the follow-up output(s) should have the same items, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1275 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, raised, category, fashionSubcategory]
and a follow-up test case is constructed by removing the following parameters [fashionSubcategory, location, raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR671 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, goal, projectsIHaveBacked, publishingSubcategory, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2149 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, raised, category]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, raised]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR180 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, designSubcategory]
and a follow-up test case is constructed by removing the following parameters [designSubcategory, filterProjects, following, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1775 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, category, photographySubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, location, projectsIHaveBacked, searchQuery]
and a follow-up test case is constructed by removing the following parameters [photographySubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR703 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, gamesSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, gamesSubcategory, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1066 (SHUFFLING_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy:NearMe, projectsWeLove, savedProjects, recommendedForMe, amountPledged, raised, category, musicSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Magic]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Popularity]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Newest]
then the source and the follow-up output(s) should have the same items, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1288 (SHUFFLING_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy:Popularity, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, raised, category, fashionSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Magic]
then the source and the follow-up output(s) should have the same items, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR205 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, designSubcategory]
and a follow-up test case is constructed by adding the following parameters [goal:<$1,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$1,000 to $10,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$10,000 to $100,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$100,000 to $1,000,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:>$1,000,000 goal]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2041 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked:showProjectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category]
and a follow-up test case is constructed by changing the value of the following parameters [projectsIHaveBacked:showProjectsIHaveNotBacked]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR305 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, raised, category, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, goal, location, projectsIHaveBacked, raised, savedProjects, theaterSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2133 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, goal, location, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, projectsIHaveBacked, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1216 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category, musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [location, musicSubcategory, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [following, raised]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR9 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category]
and a follow-up test case is constructed by removing the following parameters [filterProjects, location, projectsIHaveBacked, searchQuery]
and a follow-up test case is constructed by removing the following parameters [raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR892 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, filterProjects:liveProjects, raised, category, publishingSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [filterProjects:successfulProjects]
and a follow-up test case is constructed by changing the value of the following parameters [filterProjects:upcomingProjects]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1715 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, recommendedForMe, filterProjects, category, fashionSubcategory:Accessories]
and a follow-up test case is constructed by changing the value of the following parameters [fashionSubcategory:Apparel]
and a follow-up test case is constructed by changing the value of the following parameters [fashionSubcategory:Childrenswear]
and a follow-up test case is constructed by changing the value of the following parameters [fashionSubcategory:Couture]
and a follow-up test case is constructed by changing the value of the following parameters [fashionSubcategory:Footwear]
and a follow-up test case is constructed by changing the value of the following parameters [fashionSubcategory:Jewelry]
and a follow-up test case is constructed by changing the value of the following parameters [fashionSubcategory:Pet Fashion]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1148 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, category, gamesSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, location, projectsIHaveBacked, savedProjects]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
and a follow-up test case is constructed by removing the following parameters [gamesSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR280 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, category, musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, savedProjects]
and a follow-up test case is constructed by removing the following parameters [location, projectsIHaveBacked, searchQuery]
and a follow-up test case is constructed by removing the following parameters [musicSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR673 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [goal, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1264 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, raised, category, fashionSubcategory]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [location, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [fashionSubcategory]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR848 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, goal, location, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1218 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category, musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [location, musicSubcategory, raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1346 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR422 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, raised, category, designSubcategory]
and a follow-up test case is constructed by removing the following parameters [goal, searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged, designSubcategory, projectsIHaveBacked, raised]
and a follow-up test case is constructed by removing the following parameters [following, location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1069 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged:<$1,000 pledged, raised, category, musicSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$10,000 to $100,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$100,000 to $1,000,000 pledged]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1811 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, goal, projectsIHaveBacked, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1287 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, raised, category, fashionSubcategory]
and a follow-up test case is constructed by removing the following parameters [location, raised]
and a follow-up test case is constructed by removing the following parameters [fashionSubcategory, projectsIHaveBacked, savedProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR837 (COMPLETE_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, goal, category, foodSubcategory]
and a follow-up test case is constructed by adding the following parameters [amountPledged:<$1,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$10,000 to $100,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$100,000 to $1,000,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:>$1,000,000 pledged]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1896 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, category]
and a follow-up test case is constructed by removing the following parameters [filterProjects, location, searchQuery]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR431 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, raised, category, designSubcategory:Architecture]
and a follow-up test case is constructed by changing the value of the following parameters [designSubcategory:Civic Design]
and a follow-up test case is constructed by changing the value of the following parameters [designSubcategory:Graphic Design]
and a follow-up test case is constructed by changing the value of the following parameters [designSubcategory:Interactive Design]
and a follow-up test case is constructed by changing the value of the following parameters [designSubcategory:Product Design]
and a follow-up test case is constructed by changing the value of the following parameters [designSubcategory:Toys]
and a follow-up test case is constructed by changing the value of the following parameters [designSubcategory:Typography]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR283 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, category, musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, projectsIHaveBacked, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [location]
and a follow-up test case is constructed by removing the following parameters [musicSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR412 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, raised, category, designSubcategory]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [amountPledged, designSubcategory, goal, location, projectsIHaveBacked, raised]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1368 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, raised, category, designSubcategory]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [raised]
and a follow-up test case is constructed by removing the following parameters [designSubcategory, following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1802 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [goal]
and a follow-up test case is constructed by removing the following parameters [filterProjects, projectsIHaveBacked, publishingSubcategory, raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2044 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, following, goal, projectsIHaveBacked, raised, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1095 (DISJOINT_EXTEND):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following:showProjectsIDoNotFollow, recommendedForMe, amountPledged, goal, category, photographySubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [following:showProjectsIFollow]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR196 (SHUFFLING_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy:NearMe, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, designSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Magic]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Popularity]
then the source and the follow-up output(s) should have the same items, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR203 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, designSubcategory:Architecture]
and a follow-up test case is constructed by changing the value of the following parameters [designSubcategory:Civic Design]
and a follow-up test case is constructed by changing the value of the following parameters [designSubcategory:Graphic Design]
and a follow-up test case is constructed by changing the value of the following parameters [designSubcategory:Interactive Design]
and a follow-up test case is constructed by changing the value of the following parameters [designSubcategory:Product Design]
and a follow-up test case is constructed by changing the value of the following parameters [designSubcategory:Toys]
and a follow-up test case is constructed by changing the value of the following parameters [designSubcategory:Typography]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR885 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, filterProjects, raised, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [publishingSubcategory, raised]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
and a follow-up test case is constructed by removing the following parameters [location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1091 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, goal, category, photographySubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, goal]
and a follow-up test case is constructed by removing the following parameters [photographySubcategory, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1459 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, foodSubcategory]
and a follow-up test case is constructed by removing the following parameters [foodSubcategory, projectsIHaveBacked, searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, goal]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR268 (SHUFFLING_EXTEND):
if a source test case is run with the inputs [location, sortBy:Popularity, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, artSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Magic]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Newest]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:EndDate]
then the source and the follow-up output(s) should have the same items, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1852 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, category]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [following, savedProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1118 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, category, danceSubcategory]
and a follow-up test case is constructed by removing the following parameters [danceSubcategory, filterProjects, following, goal, location, projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1488 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, raised, category, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, location, raised, savedProjects, theaterSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1062 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, raised, category, musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, musicSubcategory, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1605 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised:<75% raised, category, photographySubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [raised:75% to 100% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:>100% raised]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR553 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, fashionSubcategory]
and a follow-up test case is constructed by removing the following parameters [goal]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
and a follow-up test case is constructed by removing the following parameters [fashionSubcategory, filterProjects, following, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1915 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, projectsIHaveBacked, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [following, goal]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR779 (SHUFFLING_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy:Popularity, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, raised, category, foodSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Magic]
then the source and the follow-up output(s) should have the same items, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR318 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, raised, category, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [savedProjects, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [goal]
and a follow-up test case is constructed by removing the following parameters [location]
and a follow-up test case is constructed by removing the following parameters [raised]
and a follow-up test case is constructed by removing the following parameters [following, projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR230 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, recommendedForMe, filterProjects, amountPledged, category, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, following, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1598 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, photographySubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, location, photographySubcategory, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [following, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR225 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, recommendedForMe, filterProjects, amountPledged, category, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [theaterSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1587 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, photographySubcategory]
and a follow-up test case is constructed by removing the following parameters [following, location, photographySubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, projectsIHaveBacked, raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1829 (COMPLETE_EXTEND):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category, publishingSubcategory]
and a follow-up test case is constructed by adding the following parameters [savedProjects:showProjectsIHaveSaved]
and a follow-up test case is constructed by changing the value of the following parameters [savedProjects:showProjectsIHaveNotSaved]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR480 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, goal, raised, category, craftsSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, raised]
and a follow-up test case is constructed by removing the following parameters [amountPledged, location, searchQuery]
and a follow-up test case is constructed by removing the following parameters [goal, savedProjects]
and a follow-up test case is constructed by removing the following parameters [craftsSubcategory, filterProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR117 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, category]
and a follow-up test case is constructed by removing the following parameters [location, savedProjects]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR587 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category, musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following]
and a follow-up test case is constructed by removing the following parameters [goal, musicSubcategory, projectsIHaveBacked, raised]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR106 (DISJOINT_EXTEND):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects:showProjectsIHaveNotSaved, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [savedProjects:showProjectsIHaveSaved]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1652 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
and a follow-up test case is constructed by removing the following parameters [following, location, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [goal, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1416 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, category, technologySubcategory]
and a follow-up test case is constructed by adding the following parameters [raised:<75% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:75% to 100% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:>100% raised]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1968 (DISJOINT_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, raised, category:Journalism]
and a follow-up test case is constructed by changing the value of the following parameters [category:All categories]
and a follow-up test case is constructed by changing the value of the following parameters [category:Art]
and a follow-up test case is constructed by changing the value of the following parameters [category:Comics]
and a follow-up test case is constructed by changing the value of the following parameters [category:Crafts]
and a follow-up test case is constructed by changing the value of the following parameters [category:Dance]
and a follow-up test case is constructed by changing the value of the following parameters [category:Design]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1003 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category, artSubcategory]
and a follow-up test case is constructed by removing the following parameters [artSubcategory, following, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2135 (SHUFFLING_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy:Popularity, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, publishingSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Magic]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Newest]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:EndDate]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:MostFunded]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:MostBacked]
then the source and the follow-up output(s) should have the same items, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1725 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, category]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [savedProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR684 (DISJOINT_EXTEND):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects:showProjectsIHaveSaved, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, publishingSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [savedProjects:showProjectsIHaveNotSaved]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR562 (DISJOINT_EXTEND):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked:showProjectsIHaveNotBacked, recommendedForMe, filterProjects, amountPledged, goal, category, fashionSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [projectsIHaveBacked:showProjectsIHaveBacked]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1458 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, foodSubcategory]
and a follow-up test case is constructed by removing the following parameters [foodSubcategory, projectsIHaveBacked, searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [goal]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1191 (SHUFFLING_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy:Popularity, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, raised, category, technologySubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Magic]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Newest]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:EndDate]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:MostFunded]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:MostBacked]
then the source and the follow-up output(s) should have the same items, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1790 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects:liveProjects, category, photographySubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [filterProjects:successfulProjects]
and a follow-up test case is constructed by changing the value of the following parameters [filterProjects:upcomingProjects]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR407 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, raised, category, designSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, designSubcategory, following, goal, location, projectsIHaveBacked, raised]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2086 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, raised, category]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, savedProjects]
and a follow-up test case is constructed by removing the following parameters [filterProjects, location]
and a follow-up test case is constructed by removing the following parameters [raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1353 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category]
and a follow-up test case is constructed by adding the following parameters [filterProjects]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1711 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, recommendedForMe, filterProjects, category, fashionSubcategory]
and a follow-up test case is constructed by adding the following parameters [amountPledged]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1690 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by removing the following parameters [filmAndVideoSubcategory, location, projectsIHaveBacked, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1322 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, artSubcategory]
and a follow-up test case is constructed by removing the following parameters [artSubcategory, projectsIHaveBacked, raised]
and a follow-up test case is constructed by removing the following parameters [location, savedProjects]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1563 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [goal, projectsIHaveBacked, publishingSubcategory, searchQuery]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1568 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged:<$1,000 pledged, goal, category, publishingSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$10,000 to $100,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$100,000 to $1,000,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:>$1,000,000 pledged]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR130 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, category:All categories]
and a follow-up test case is constructed by changing the value of the following parameters [category:Art]
and a follow-up test case is constructed by changing the value of the following parameters [category:Comics]
and a follow-up test case is constructed by changing the value of the following parameters [category:Crafts]
and a follow-up test case is constructed by changing the value of the following parameters [category:Dance]
and a follow-up test case is constructed by changing the value of the following parameters [category:Design]
and a follow-up test case is constructed by changing the value of the following parameters [category:Fashion]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR549 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, fashionSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, fashionSubcategory, goal, savedProjects]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1016 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked:showProjectsIHaveBacked, recommendedForMe, raised, category, artSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [projectsIHaveBacked:showProjectsIHaveNotBacked]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1321 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, artSubcategory]
and a follow-up test case is constructed by removing the following parameters [artSubcategory, filterProjects, location, projectsIHaveBacked, savedProjects]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR943 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category, comicsSubcategory]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, raised, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [comicsSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1616 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, raised, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
and a follow-up test case is constructed by removing the following parameters [publishingSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1452 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, foodSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, foodSubcategory, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [amountPledged, goal]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR506 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, goal, raised, category, craftsSubcategory]
and a follow-up test case is constructed by adding the following parameters [projectsIHaveBacked:showProjectsIHaveBacked]
and a follow-up test case is constructed by changing the value of the following parameters [projectsIHaveBacked:showProjectsIHaveNotBacked]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR836 (COMPLETE_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, goal, category, foodSubcategory]
and a follow-up test case is constructed by adding the following parameters [following:showProjectsIFollow]
and a follow-up test case is constructed by changing the value of the following parameters [following:showProjectsIDoNotFollow]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2077 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category]
and a follow-up test case is constructed by adding the following parameters [savedProjects:showProjectsIHaveSaved]
and a follow-up test case is constructed by changing the value of the following parameters [savedProjects:showProjectsIHaveNotSaved]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR520 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, recommendedForMe, goal, raised, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by removing the following parameters [filmAndVideoSubcategory, goal, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1076 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, goal, category, photographySubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
and a follow-up test case is constructed by removing the following parameters [following, goal, savedProjects]
and a follow-up test case is constructed by removing the following parameters [photographySubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR59 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [goal, location, raised, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1555 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, projectsIHaveBacked, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged, goal, publishingSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1060 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, raised, category, musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
and a follow-up test case is constructed by removing the following parameters [musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2003 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects:showProjectsIHaveNotSaved, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category]
and a follow-up test case is constructed by changing the value of the following parameters [savedProjects:showProjectsIHaveSaved]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR309 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, raised, category, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [goal, projectsIHaveBacked, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [location]
and a follow-up test case is constructed by removing the following parameters [following, raised]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR583 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category, musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, goal, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [raised]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
and a follow-up test case is constructed by removing the following parameters [musicSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR548 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, fashionSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, fashionSubcategory, filterProjects, goal, savedProjects]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1504 (DISJOINT_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, raised, category, theaterSubcategory:Musical]
and a follow-up test case is constructed by changing the value of the following parameters [theaterSubcategory:Comedy]
and a follow-up test case is constructed by changing the value of the following parameters [theaterSubcategory:Experimental]
and a follow-up test case is constructed by changing the value of the following parameters [theaterSubcategory:Festivals]
and a follow-up test case is constructed by changing the value of the following parameters [theaterSubcategory:Immersive]
and a follow-up test case is constructed by changing the value of the following parameters [theaterSubcategory:Plays]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1441 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, recommendedForMe, filterProjects, amountPledged, goal, raised:<75% raised, category, fashionSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [raised:75% to 100% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:>100% raised]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR360 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, raised:<75% raised, category, journalismSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [raised:75% to 100% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:>100% raised]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1842 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, category:Crafts]
and a follow-up test case is constructed by changing the value of the following parameters [category:All categories]
and a follow-up test case is constructed by changing the value of the following parameters [category:Art]
and a follow-up test case is constructed by changing the value of the following parameters [category:Comics]
and a follow-up test case is constructed by changing the value of the following parameters [category:Dance]
and a follow-up test case is constructed by changing the value of the following parameters [category:Design]
and a follow-up test case is constructed by changing the value of the following parameters [category:Fashion]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1142 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, category, gamesSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, gamesSubcategory, projectsIHaveBacked, savedProjects]
and a follow-up test case is constructed by removing the following parameters [following, location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1029 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, goal, category, gamesSubcategory]
and a follow-up test case is constructed by removing the following parameters [gamesSubcategory, goal, location, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR302 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, category, musicSubcategory]
and a follow-up test case is constructed by adding the following parameters [goal:<$1,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$1,000 to $10,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$10,000 to $100,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$100,000 to $1,000,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:>$1,000,000 goal]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2058 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [following, projectsIHaveBacked, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects, raised]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
and a follow-up test case is constructed by removing the following parameters [goal]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1198 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, raised:<75% raised, category, technologySubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [raised:75% to 100% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:>100% raised]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR213 (DISJOINT_EXTEND):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, projectsIHaveBacked:showProjectsIHaveBacked, recommendedForMe, category, craftsSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [projectsIHaveBacked:showProjectsIHaveNotBacked]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1199 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, raised, category, technologySubcategory]
and a follow-up test case is constructed by adding the following parameters [projectsIHaveBacked:showProjectsIHaveBacked]
and a follow-up test case is constructed by changing the value of the following parameters [projectsIHaveBacked:showProjectsIHaveNotBacked]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR688 (DISJOINT_EXTEND):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, publishingSubcategory:Poetry]
and a follow-up test case is constructed by changing the value of the following parameters [publishingSubcategory:Academic]
and a follow-up test case is constructed by changing the value of the following parameters [publishingSubcategory:Anthologies]
and a follow-up test case is constructed by changing the value of the following parameters [publishingSubcategory:Art Books]
and a follow-up test case is constructed by changing the value of the following parameters [publishingSubcategory:Calendars]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR211 (SHUFFLING_EXTEND):
if a source test case is run with the inputs [sortBy:NearMe, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, category, craftsSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Magic]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Popularity]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Newest]
then the source and the follow-up output(s) should have the same items, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2070 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following:showProjectsIFollow, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category]
and a follow-up test case is constructed by changing the value of the following parameters [following:showProjectsIDoNotFollow]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR664 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [goal, savedProjects]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [amountPledged, projectsIHaveBacked, publishingSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR929 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, publishingSubcategory:Poetry]
and a follow-up test case is constructed by changing the value of the following parameters [publishingSubcategory:Academic]
and a follow-up test case is constructed by changing the value of the following parameters [publishingSubcategory:Anthologies]
and a follow-up test case is constructed by changing the value of the following parameters [publishingSubcategory:Art Books]
and a follow-up test case is constructed by changing the value of the following parameters [publishingSubcategory:Calendars]
and a follow-up test case is constructed by changing the value of the following parameters [publishingSubcategory:Children's Books]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR613 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, recommendedForMe, filterProjects, amountPledged, category, journalismSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, journalismSubcategory, searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2065 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category]
and a follow-up test case is constructed by adding the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR442 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, goal, category, comicsSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, comicsSubcategory, filterProjects, following, location, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [goal]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR698 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, gamesSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, gamesSubcategory, projectsIHaveBacked, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1553 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, goal, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [publishingSubcategory, savedProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1253 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, category, artSubcategory]
and a follow-up test case is constructed by adding the following parameters [goal]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1718 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, recommendedForMe, filterProjects, category, fashionSubcategory]
and a follow-up test case is constructed by adding the following parameters [amountPledged:<$1,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$10,000 to $100,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$100,000 to $1,000,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:>$1,000,000 pledged]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR887 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, filterProjects, raised, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, location, publishingSubcategory, raised, savedProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1155 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, category, gamesSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, gamesSubcategory, location, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1236 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, category, artSubcategory]
and a follow-up test case is constructed by removing the following parameters [artSubcategory, filterProjects, following, savedProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1763 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category:Fashion]
and a follow-up test case is constructed by changing the value of the following parameters [category:All categories]
and a follow-up test case is constructed by changing the value of the following parameters [category:Art]
and a follow-up test case is constructed by changing the value of the following parameters [category:Comics]
and a follow-up test case is constructed by changing the value of the following parameters [category:Crafts]
and a follow-up test case is constructed by changing the value of the following parameters [category:Dance]
and a follow-up test case is constructed by changing the value of the following parameters [category:Design]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1729 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects:showProjectsIHaveSaved, projectsIHaveBacked, recommendedForMe, category]
and a follow-up test case is constructed by changing the value of the following parameters [savedProjects:showProjectsIHaveNotSaved]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR557 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, fashionSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
and a follow-up test case is constructed by removing the following parameters [goal, projectsIHaveBacked, savedProjects]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
and a follow-up test case is constructed by removing the following parameters [fashionSubcategory, following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1402 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, category, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, savedProjects]
and a follow-up test case is constructed by removing the following parameters [following, projectsIHaveBacked, searchQuery]
and a follow-up test case is constructed by removing the following parameters [technologySubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1437 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, recommendedForMe, filterProjects, amountPledged, goal, raised, category, fashionSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, raised]
and a follow-up test case is constructed by removing the following parameters [filterProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [fashionSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, goal, location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1425 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, recommendedForMe, filterProjects, amountPledged, goal, raised, category, fashionSubcategory]
and a follow-up test case is constructed by removing the following parameters [raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged, fashionSubcategory, filterProjects, following, location]
and a follow-up test case is constructed by removing the following parameters [goal]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2062 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [goal]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, following, projectsIHaveBacked, raised, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2022 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [filterProjects, goal, location]
and a follow-up test case is constructed by removing the following parameters [following, projectsIHaveBacked, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR415 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, raised, category, designSubcategory]
and a follow-up test case is constructed by removing the following parameters [goal]
and a follow-up test case is constructed by removing the following parameters [designSubcategory, following, location, projectsIHaveBacked, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1138 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, category, gamesSubcategory]
and a follow-up test case is constructed by removing the following parameters [location, projectsIHaveBacked, savedProjects]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [amountPledged, gamesSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1137 (COMPLETE_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, category, danceSubcategory]
and a follow-up test case is constructed by adding the following parameters [savedProjects:showProjectsIHaveSaved]
and a follow-up test case is constructed by changing the value of the following parameters [savedProjects:showProjectsIHaveNotSaved]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR488 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, goal, raised, category, craftsSubcategory]
and a follow-up test case is constructed by removing the following parameters [craftsSubcategory, following, savedProjects]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, goal, location, raised, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR248 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, recommendedForMe, filterProjects, amountPledged, category, theaterSubcategory]
and a follow-up test case is constructed by adding the following parameters [projectsIHaveBacked:showProjectsIHaveBacked]
and a follow-up test case is constructed by changing the value of the following parameters [projectsIHaveBacked:showProjectsIHaveNotBacked]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2142 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects:liveProjects, amountPledged, goal, category, publishingSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [filterProjects:successfulProjects]
and a follow-up test case is constructed by changing the value of the following parameters [filterProjects:upcomingProjects]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR603 (DISJOINT_EXTEND):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged:<$1,000 pledged, goal, raised, category, musicSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$10,000 to $100,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$100,000 to $1,000,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:>$1,000,000 pledged]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR936 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category, comicsSubcategory]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, searchQuery]
and a follow-up test case is constructed by removing the following parameters [comicsSubcategory, following, savedProjects]
and a follow-up test case is constructed by removing the following parameters [raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR134 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, category]
and a follow-up test case is constructed by adding the following parameters [projectsIHaveBacked:showProjectsIHaveBacked]
and a follow-up test case is constructed by changing the value of the following parameters [projectsIHaveBacked:showProjectsIHaveNotBacked]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR672 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, goal, savedProjects]
and a follow-up test case is constructed by removing the following parameters [publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1466 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, foodSubcategory]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged, goal]
and a follow-up test case is constructed by removing the following parameters [foodSubcategory, projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR579 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category, musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following]
and a follow-up test case is constructed by removing the following parameters [amountPledged, goal, musicSubcategory, projectsIHaveBacked, raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR773 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, raised, category, foodSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, foodSubcategory]
and a follow-up test case is constructed by removing the following parameters [location, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [raised]
and a follow-up test case is constructed by removing the following parameters [following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1250 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, category, artSubcategory]
and a follow-up test case is constructed by removing the following parameters [artSubcategory, filterProjects, following, savedProjects]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1367 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, raised, category, designSubcategory]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [designSubcategory, projectsIHaveBacked, raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR654 (COMPLETE_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, technologySubcategory]
and a follow-up test case is constructed by adding the following parameters [savedProjects:showProjectsIHaveSaved]
and a follow-up test case is constructed by changing the value of the following parameters [savedProjects:showProjectsIHaveNotSaved]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR39 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, savedProjects]
and a follow-up test case is constructed by removing the following parameters [filmAndVideoSubcategory, following, goal, projectsIHaveBacked, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2060 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [filterProjects, goal, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1581 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, photographySubcategory]
and a follow-up test case is constructed by removing the following parameters [following, location, photographySubcategory, projectsIHaveBacked, savedProjects]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
and a follow-up test case is constructed by removing the following parameters [raised, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR860 (DISJOINT_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, following, projectsIHaveBacked:showProjectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category]
and a follow-up test case is constructed by changing the value of the following parameters [projectsIHaveBacked:showProjectsIHaveNotBacked]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR530 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, recommendedForMe, goal, raised, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by adding the following parameters [amountPledged:<$1,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$10,000 to $100,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$100,000 to $1,000,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:>$1,000,000 pledged]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1215 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category, musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, location, musicSubcategory, raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR531 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, recommendedForMe, goal, raised, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by adding the following parameters [savedProjects:showProjectsIHaveSaved]
and a follow-up test case is constructed by changing the value of the following parameters [savedProjects:showProjectsIHaveNotSaved]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1078 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, goal, category, photographySubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, photographySubcategory]
and a follow-up test case is constructed by removing the following parameters [following, goal]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR817 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, goal, category, foodSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, goal, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [foodSubcategory, location, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR667 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, goal, projectsIHaveBacked, savedProjects]
and a follow-up test case is constructed by removing the following parameters [publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1158 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, category, gamesSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, location, projectsIHaveBacked, savedProjects]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [gamesSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR962 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category, comicsSubcategory:Graphic Novels]
and a follow-up test case is constructed by changing the value of the following parameters [comicsSubcategory:Anthologies]
and a follow-up test case is constructed by changing the value of the following parameters [comicsSubcategory:Comic Books]
and a follow-up test case is constructed by changing the value of the following parameters [comicsSubcategory:Events]
and a follow-up test case is constructed by changing the value of the following parameters [comicsSubcategory:Webcomics]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1064 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, raised, category, musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, raised]
and a follow-up test case is constructed by removing the following parameters [musicSubcategory, savedProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1727 (SHUFFLING_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy:NearMe, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, category]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Magic]
then the source and the follow-up output(s) should have the same items, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1205 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category, musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [raised]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [location, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1469 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, foodSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, goal, searchQuery]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [amountPledged, foodSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR74 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [goal]
and a follow-up test case is constructed by removing the following parameters [location, raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1636 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [goal, searchQuery]
and a follow-up test case is constructed by removing the following parameters [location]
and a follow-up test case is constructed by removing the following parameters [following, projectsIHaveBacked, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1794 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked:showProjectsIHaveBacked, recommendedForMe, filterProjects, category, photographySubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [projectsIHaveBacked:showProjectsIHaveNotBacked]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1484 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, raised, category, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, raised, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [location]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1542 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, goal, projectsIHaveBacked, publishingSubcategory, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR788 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, category, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [theaterSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1210 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category, musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, location, musicSubcategory, raised]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1928 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, goal, raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR426 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, raised:<75% raised, category, designSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [raised:75% to 100% raised]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1033 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, goal, category, gamesSubcategory]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [amountPledged, gamesSubcategory, goal, location, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1611 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, raised, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [publishingSubcategory, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2083 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, raised, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, following, location, projectsIHaveBacked, raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR604 (COMPLETE_EXTEND):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category, musicSubcategory]
and a follow-up test case is constructed by adding the following parameters [savedProjects:showProjectsIHaveSaved]
and a follow-up test case is constructed by changing the value of the following parameters [savedProjects:showProjectsIHaveNotSaved]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1435 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, recommendedForMe, filterProjects, amountPledged, goal, raised, category, fashionSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, fashionSubcategory, filterProjects, goal, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [following, location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR365 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, raised, category, journalismSubcategory:Video]
and a follow-up test case is constructed by changing the value of the following parameters [journalismSubcategory:Audio]
and a follow-up test case is constructed by changing the value of the following parameters [journalismSubcategory:Photo]
and a follow-up test case is constructed by changing the value of the following parameters [journalismSubcategory:Print]
and a follow-up test case is constructed by changing the value of the following parameters [journalismSubcategory:Web]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR14 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category]
and a follow-up test case is constructed by removing the following parameters [location, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR169 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects:liveProjects, amountPledged, goal, raised, category, craftsSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [filterProjects:successfulProjects]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR994 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category, artSubcategory]
and a follow-up test case is constructed by removing the following parameters [artSubcategory, projectsIHaveBacked, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [following, raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR252 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, artSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
and a follow-up test case is constructed by removing the following parameters [artSubcategory, filterProjects, goal, location, projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1944 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [amountPledged, location, projectsIHaveBacked, raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [goal]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1583 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, photographySubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, location, photographySubcategory, projectsIHaveBacked, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1765 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category]
and a follow-up test case is constructed by adding the following parameters [savedProjects:showProjectsIHaveSaved]
and a follow-up test case is constructed by changing the value of the following parameters [savedProjects:showProjectsIHaveNotSaved]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1098 (DISJOINT_EXTEND):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged:<$1,000 pledged, goal, category, photographySubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$10,000 to $100,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$100,000 to $1,000,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:>$1,000,000 pledged]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1804 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [goal, projectsIHaveBacked, publishingSubcategory, raised]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
and a follow-up test case is constructed by removing the following parameters [following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1539 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, category, danceSubcategory]
and a follow-up test case is constructed by adding the following parameters [projectsIHaveBacked:showProjectsIHaveBacked]
and a follow-up test case is constructed by changing the value of the following parameters [projectsIHaveBacked:showProjectsIHaveNotBacked]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1971 (DISJOINT_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked:showProjectsIHaveNotBacked, recommendedForMe, amountPledged, goal, raised, category]
and a follow-up test case is constructed by changing the value of the following parameters [projectsIHaveBacked:showProjectsIHaveBacked]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1023 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, goal, category, gamesSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, gamesSubcategory, goal, location, savedProjects]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR436 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, goal, category, comicsSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, comicsSubcategory, following, goal, location, savedProjects]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR814 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, goal, category, foodSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, foodSubcategory, goal, location, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1739 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects, goal, raised]
and a follow-up test case is constructed by removing the following parameters [following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR969 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, category, journalismSubcategory]
and a follow-up test case is constructed by removing the following parameters [location, projectsIHaveBacked, savedProjects]
and a follow-up test case is constructed by removing the following parameters [journalismSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR97 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filmAndVideoSubcategory, savedProjects]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1501 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, raised, category, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, location]
and a follow-up test case is constructed by removing the following parameters [following, raised, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR787 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, category, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR628 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, recommendedForMe, filterProjects, amountPledged, category, journalismSubcategory]
and a follow-up test case is constructed by adding the following parameters [raised:<75% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:75% to 100% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:>100% raised]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1893 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, category]
and a follow-up test case is constructed by removing the following parameters [filterProjects, location, searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged, projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR446 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, goal, category, comicsSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, comicsSubcategory, following, goal, location, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR668 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [goal, projectsIHaveBacked, savedProjects]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, publishingSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1953 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, goal, projectsIHaveBacked, raised]
and a follow-up test case is constructed by removing the following parameters [following, location, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1141 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, category, gamesSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [amountPledged, gamesSubcategory, location, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1303 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, artSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, projectsIHaveBacked, raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [artSubcategory, following, location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR570 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category, musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, following, goal, musicSubcategory, projectsIHaveBacked, raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR693 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, gamesSubcategory]
and a follow-up test case is constructed by removing the following parameters [gamesSubcategory]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, raised]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR686 (DISJOINT_EXTEND):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following:showProjectsIDoNotFollow, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, publishingSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [following:showProjectsIFollow]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR550 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, fashionSubcategory]
and a follow-up test case is constructed by removing the following parameters [fashionSubcategory, filterProjects]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, projectsIHaveBacked, savedProjects]
and a follow-up test case is constructed by removing the following parameters [goal]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR496 (SHUFFLING_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy:Popularity, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, goal, raised, category, craftsSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Magic]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Newest]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:EndDate]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:MostFunded]
then the source and the follow-up output(s) should have the same items, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR545 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, fashionSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, fashionSubcategory, following, goal, savedProjects]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR718 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category, danceSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, danceSubcategory, location, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1408 (SHUFFLING_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy:NearMe, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, category, technologySubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Magic]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Popularity]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Newest]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:EndDate]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:MostFunded]
then the source and the follow-up output(s) should have the same items, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2005 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category]
and a follow-up test case is constructed by adding the following parameters [raised:<75% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:75% to 100% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:>100% raised]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1301 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, artSubcategory]
and a follow-up test case is constructed by removing the following parameters [artSubcategory, filterProjects, following, location, raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1667 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, category, comicsSubcategory]
and a follow-up test case is constructed by removing the following parameters [comicsSubcategory]
and a follow-up test case is constructed by removing the following parameters [location, projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR968 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, category, journalismSubcategory]
and a follow-up test case is constructed by removing the following parameters [journalismSubcategory, savedProjects]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1405 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, category, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [following, searchQuery, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [amountPledged, projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR713 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised:<75% raised, category, gamesSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [raised:75% to 100% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:>100% raised]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR29 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filmAndVideoSubcategory, goal, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
and a follow-up test case is constructed by removing the following parameters [following, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1027 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, goal, category, gamesSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, gamesSubcategory, goal, location, savedProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR174 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, designSubcategory]
and a follow-up test case is constructed by removing the following parameters [designSubcategory, filterProjects, following, projectsIHaveBacked, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1073 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, raised, category, musicSubcategory]
and a follow-up test case is constructed by adding the following parameters [projectsIHaveBacked:showProjectsIHaveBacked]
and a follow-up test case is constructed by changing the value of the following parameters [projectsIHaveBacked:showProjectsIHaveNotBacked]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1682 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by removing the following parameters [filmAndVideoSubcategory, filterProjects, projectsIHaveBacked, searchQuery]
and a follow-up test case is constructed by removing the following parameters [location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR719 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category, danceSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, location, projectsIHaveBacked, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [danceSubcategory, raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1863 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked:showProjectsIHaveBacked, recommendedForMe, category]
and a follow-up test case is constructed by changing the value of the following parameters [projectsIHaveBacked:showProjectsIHaveNotBacked]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR542 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, fashionSubcategory]
and a follow-up test case is constructed by removing the following parameters [fashionSubcategory, following, savedProjects]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, goal, projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR119 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, category]
and a follow-up test case is constructed by removing the following parameters [location]
and a follow-up test case is constructed by removing the following parameters [amountPledged, savedProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR765 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, raised, category, foodSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, location, raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [foodSubcategory, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR818 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, goal, category, foodSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, goal, savedProjects]
and a follow-up test case is constructed by removing the following parameters [location, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [foodSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1923 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [raised]
and a follow-up test case is constructed by removing the following parameters [following, goal, savedProjects]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR624 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, recommendedForMe, filterProjects:liveProjects, amountPledged, category, journalismSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [filterProjects:successfulProjects]
and a follow-up test case is constructed by changing the value of the following parameters [filterProjects:upcomingProjects]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1964 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [following, location]
and a follow-up test case is constructed by removing the following parameters [amountPledged, goal, projectsIHaveBacked, raised, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR519 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, recommendedForMe, goal, raised, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by removing the following parameters [goal, location, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filmAndVideoSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR437 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, goal, category, comicsSubcategory]
and a follow-up test case is constructed by removing the following parameters [comicsSubcategory, following, goal]
and a follow-up test case is constructed by removing the following parameters [location, savedProjects]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR505 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, goal, raised, category, craftsSubcategory:Candles]
and a follow-up test case is constructed by changing the value of the following parameters [craftsSubcategory:Crochet]
and a follow-up test case is constructed by changing the value of the following parameters [craftsSubcategory:DIY]
and a follow-up test case is constructed by changing the value of the following parameters [craftsSubcategory:Embroidery]
and a follow-up test case is constructed by changing the value of the following parameters [craftsSubcategory:Glass]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR510 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, recommendedForMe, goal, raised, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
and a follow-up test case is constructed by removing the following parameters [filmAndVideoSubcategory, goal, location]
and a follow-up test case is constructed by removing the following parameters [raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR276 (COMPLETE_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, artSubcategory]
and a follow-up test case is constructed by adding the following parameters [raised:<75% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:75% to 100% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:>100% raised]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR43 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, projectsIHaveBacked, savedProjects]
and a follow-up test case is constructed by removing the following parameters [filmAndVideoSubcategory, goal]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2042 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised:<75% raised, category]
and a follow-up test case is constructed by changing the value of the following parameters [raised:75% to 100% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:>100% raised]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR808 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, category, theaterSubcategory:Musical]
and a follow-up test case is constructed by changing the value of the following parameters [theaterSubcategory:Comedy]
and a follow-up test case is constructed by changing the value of the following parameters [theaterSubcategory:Experimental]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2010 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, goal, raised]
and a follow-up test case is constructed by removing the following parameters [filterProjects, location]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR310 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, raised, category, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [goal]
and a follow-up test case is constructed by removing the following parameters [following, location, projectsIHaveBacked, raised, savedProjects, theaterSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1170 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, raised, category, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [following, location, raised, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1461 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, foodSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, foodSubcategory, searchQuery]
and a follow-up test case is constructed by removing the following parameters [goal, projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR156 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category, craftsSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, craftsSubcategory, filterProjects, following, location, projectsIHaveBacked, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [goal]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1530 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, category, danceSubcategory]
and a follow-up test case is constructed by removing the following parameters [danceSubcategory, following]
and a follow-up test case is constructed by removing the following parameters [savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR524 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, recommendedForMe, goal, raised, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by adding the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR3 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects, location, raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR267 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, artSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, artSubcategory, goal, location]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR852 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [following, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [filterProjects, goal, location, raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1556 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, goal, projectsIHaveBacked, savedProjects]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
and a follow-up test case is constructed by removing the following parameters [publishingSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR829 (SHUFFLING_EXTEND):
if a source test case is run with the inputs [location, sortBy:Popularity, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, goal, category, foodSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Magic]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Newest]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:EndDate]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:MostFunded]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:MostBacked]
then the source and the follow-up output(s) should have the same items, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR261 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, artSubcategory]
and a follow-up test case is constructed by removing the following parameters [artSubcategory, goal]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
and a follow-up test case is constructed by removing the following parameters [location, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR716 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, gamesSubcategory]
and a follow-up test case is constructed by adding the following parameters [savedProjects:showProjectsIHaveSaved]
and a follow-up test case is constructed by changing the value of the following parameters [savedProjects:showProjectsIHaveNotSaved]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR495 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, goal, raised, category, craftsSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
and a follow-up test case is constructed by removing the following parameters [following, goal, location, savedProjects]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
and a follow-up test case is constructed by removing the following parameters [craftsSubcategory, raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2008 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects]
and a follow-up test case is constructed by removing the following parameters [goal, location, raised]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR592 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category, musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [filterProjects, musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, goal, raised]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR678 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, goal, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [following, savedProjects]
and a follow-up test case is constructed by removing the following parameters [publishingSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1282 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, raised, category, fashionSubcategory]
and a follow-up test case is constructed by removing the following parameters [fashionSubcategory, searchQuery]
and a follow-up test case is constructed by removing the following parameters [location, projectsIHaveBacked, raised, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1421 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, recommendedForMe, filterProjects, amountPledged, goal, raised, category, fashionSubcategory]
and a follow-up test case is constructed by removing the following parameters [fashionSubcategory, following, goal, raised]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
and a follow-up test case is constructed by removing the following parameters [filterProjects, location]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1493 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, raised, category, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, location, raised, savedProjects, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2039 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following:showProjectsIFollow, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category]
and a follow-up test case is constructed by changing the value of the following parameters [following:showProjectsIDoNotFollow]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1872 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, category]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [amountPledged, projectsIHaveBacked, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR906 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, searchQuery]
and a follow-up test case is constructed by removing the following parameters [publishingSubcategory, raised]
and a follow-up test case is constructed by removing the following parameters [location]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1947 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, goal, raised]
and a follow-up test case is constructed by removing the following parameters [location]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR839 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [filterProjects, goal, location]
and a follow-up test case is constructed by removing the following parameters [following, raised]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR956 (SHUFFLING_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy:NearMe, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category, comicsSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Magic]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Popularity]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Newest]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:EndDate]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:MostFunded]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:MostBacked]
then the source and the follow-up output(s) should have the same items, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR973 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, category, journalismSubcategory]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [location, savedProjects]
and a follow-up test case is constructed by removing the following parameters [journalismSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1117 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, category, danceSubcategory]
and a follow-up test case is constructed by removing the following parameters [danceSubcategory, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [filterProjects, goal]
and a follow-up test case is constructed by removing the following parameters [location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1921 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [goal, raised, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1258 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following:showProjectsIFollow, recommendedForMe, filterProjects, category, artSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [following:showProjectsIDoNotFollow]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1732 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, category]
and a follow-up test case is constructed by adding the following parameters [raised:<75% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:75% to 100% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:>100% raised]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1492 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, raised, category, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following]
and a follow-up test case is constructed by removing the following parameters [location]
and a follow-up test case is constructed by removing the following parameters [raised, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR614 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, recommendedForMe, filterProjects, amountPledged, category, journalismSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, journalismSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1375 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, raised, category, designSubcategory]
and a follow-up test case is constructed by removing the following parameters [designSubcategory, following]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1781 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, category, photographySubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, photographySubcategory]
and a follow-up test case is constructed by removing the following parameters [location, searchQuery]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1856 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, category]
and a follow-up test case is constructed by removing the following parameters [following, savedProjects]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR947 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category, comicsSubcategory]
and a follow-up test case is constructed by removing the following parameters [raised, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [following, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [comicsSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR498 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, goal:<$1,000 goal, raised, category, craftsSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$1,000 to $10,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$10,000 to $100,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$100,000 to $1,000,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:>$1,000,000 goal]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR458 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, goal, category, comicsSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, location]
and a follow-up test case is constructed by removing the following parameters [amountPledged, comicsSubcategory, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [goal]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1861 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following:showProjectsIFollow, projectsIHaveBacked, recommendedForMe, category]
and a follow-up test case is constructed by changing the value of the following parameters [following:showProjectsIDoNotFollow]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1671 (DISJOINT_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, projectsIHaveBacked:showProjectsIHaveNotBacked, recommendedForMe, category, comicsSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [projectsIHaveBacked:showProjectsIHaveBacked]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1638 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, goal, location, projectsIHaveBacked, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [publishingSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1991 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects]
and a follow-up test case is constructed by removing the following parameters [goal, projectsIHaveBacked, savedProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1776 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, category, photographySubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, location, searchQuery]
and a follow-up test case is constructed by removing the following parameters [photographySubcategory, projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR897 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, filterProjects, raised:<75% raised, category, publishingSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [raised:75% to 100% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:>100% raised]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR341 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, raised, category, journalismSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, goal, journalismSubcategory, location, projectsIHaveBacked, searchQuery]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR509 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, recommendedForMe, goal, raised, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by removing the following parameters [filmAndVideoSubcategory, goal, location, raised, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR413 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, raised, category, designSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, designSubcategory, following, goal, projectsIHaveBacked, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1680 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, location, projectsIHaveBacked, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filmAndVideoSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2087 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, raised, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, raised]
and a follow-up test case is constructed by removing the following parameters [filterProjects, projectsIHaveBacked, searchQuery]
and a follow-up test case is constructed by removing the following parameters [location]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR618 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, recommendedForMe, filterProjects, amountPledged, category, journalismSubcategory]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [journalismSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR58 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [goal]
and a follow-up test case is constructed by removing the following parameters [following, savedProjects]
and a follow-up test case is constructed by removing the following parameters [location, raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1049 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, raised, category, musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, musicSubcategory, raised, savedProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR54 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following:showProjectsIFollow, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [following:showProjectsIDoNotFollow]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1224 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category, musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, location, projectsIHaveBacked, savedProjects]
and a follow-up test case is constructed by removing the following parameters [raised]
and a follow-up test case is constructed by removing the following parameters [musicSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2099 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, raised, category]
and a follow-up test case is constructed by removing the following parameters [location, raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [filterProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1805 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, goal, publishingSubcategory, raised]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1736 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, goal, projectsIHaveBacked, raised]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1116 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, category, danceSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, goal, location]
and a follow-up test case is constructed by removing the following parameters [danceSubcategory]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1658 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked:showProjectsIHaveBacked, recommendedForMe, goal, category, publishingSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [projectsIHaveBacked:showProjectsIHaveNotBacked]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1074 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, raised, category, musicSubcategory]
and a follow-up test case is constructed by adding the following parameters [goal:<$1,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$1,000 to $10,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$10,000 to $100,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$100,000 to $1,000,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:>$1,000,000 goal]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1220 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category, musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [raised]
and a follow-up test case is constructed by removing the following parameters [musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, location]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1364 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category]
and a follow-up test case is constructed by adding the following parameters [goal:<$1,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$1,000 to $10,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$10,000 to $100,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$100,000 to $1,000,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:>$1,000,000 goal]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1907 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked:showProjectsIHaveNotBacked, recommendedForMe, filterProjects, amountPledged, category]
and a follow-up test case is constructed by changing the value of the following parameters [projectsIHaveBacked:showProjectsIHaveBacked]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1360 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects:showProjectsIHaveSaved, following, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category]
and a follow-up test case is constructed by changing the value of the following parameters [savedProjects:showProjectsIHaveNotSaved]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1080 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, goal, category, photographySubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, goal]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [photographySubcategory, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR84 (COMPLETE_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, goal, raised, category]
and a follow-up test case is constructed by adding the following parameters [projectsIHaveBacked:showProjectsIHaveBacked]
and a follow-up test case is constructed by changing the value of the following parameters [projectsIHaveBacked:showProjectsIHaveNotBacked]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1547 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, savedProjects]
and a follow-up test case is constructed by removing the following parameters [following, searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged, goal]
and a follow-up test case is constructed by removing the following parameters [publishingSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR676 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, goal, publishingSubcategory, savedProjects]
and a follow-up test case is constructed by removing the following parameters [amountPledged, projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR685 (DISJOINT_EXTEND):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal:<$1,000 goal, category, publishingSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$1,000 to $10,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$10,000 to $100,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$100,000 to $1,000,000 goal]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1046 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, goal, category, gamesSubcategory]
and a follow-up test case is constructed by adding the following parameters [raised:<75% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:75% to 100% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:>100% raised]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR379 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, goal, category, designSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, designSubcategory, goal, savedProjects]
and a follow-up test case is constructed by removing the following parameters [location, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR376 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, goal, category, designSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, goal, location, savedProjects]
and a follow-up test case is constructed by removing the following parameters [designSubcategory]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR985 (COMPLETE_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, category, journalismSubcategory]
and a follow-up test case is constructed by adding the following parameters [raised:<75% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:75% to 100% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:>100% raised]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2130 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, goal, location, projectsIHaveBacked, publishingSubcategory, searchQuery]
and a follow-up test case is constructed by removing the following parameters [following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1992 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category]
and a follow-up test case is constructed by removing the following parameters [filterProjects, goal, projectsIHaveBacked, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR958 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects:showProjectsIHaveNotSaved, following, projectsIHaveBacked, recommendedForMe, raised, category, comicsSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [savedProjects:showProjectsIHaveSaved]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR311 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, raised, category, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, goal, projectsIHaveBacked, raised, savedProjects, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR47 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, goal, projectsIHaveBacked, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filmAndVideoSubcategory, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1395 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, category, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [amountPledged, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [technologySubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR915 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, location, projectsIHaveBacked, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR333 (COMPLETE_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, raised, category, theaterSubcategory]
and a follow-up test case is constructed by adding the following parameters [amountPledged:<$1,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$10,000 to $100,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$100,000 to $1,000,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:>$1,000,000 pledged]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1462 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, foodSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, foodSubcategory, goal, searchQuery]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1246 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, category, artSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [artSubcategory, following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR500 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects:liveProjects, amountPledged, goal, raised, category, craftsSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [filterProjects:successfulProjects]
and a follow-up test case is constructed by changing the value of the following parameters [filterProjects:upcomingProjects]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1190 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, raised, category, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [location]
and a follow-up test case is constructed by removing the following parameters [filterProjects, raised, savedProjects, searchQuery, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR866 (COMPLETE_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category]
and a follow-up test case is constructed by adding the following parameters [amountPledged:<$1,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$10,000 to $100,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$100,000 to $1,000,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:>$1,000,000 pledged]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR577 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category, musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [raised]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [filterProjects, goal]
and a follow-up test case is constructed by removing the following parameters [musicSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2019 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, following, goal, location, searchQuery]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1631 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [following, goal, location, publishingSubcategory, savedProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR447 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, goal, category, comicsSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, goal, location, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [comicsSubcategory, following]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1983 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [goal, projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1407 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, category, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, searchQuery]
and a follow-up test case is constructed by removing the following parameters [technologySubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR153 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category, craftsSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, craftsSubcategory, filterProjects, following, goal, projectsIHaveBacked, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1750 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [following, projectsIHaveBacked, raised]
and a follow-up test case is constructed by removing the following parameters [goal, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1825 (DISJOINT_EXTEND):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal:<$1,000 goal, raised, category, publishingSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$1,000 to $10,000 goal]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2104 (SHUFFLING_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy:Popularity, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, raised, category]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Magic]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Newest]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:EndDate]
then the source and the follow-up output(s) should have the same items, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR235 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, recommendedForMe, filterProjects, amountPledged, category, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1699 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by adding the following parameters [raised:<75% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:75% to 100% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:>100% raised]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR219 (COMPLETE_EXTEND):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, category, craftsSubcategory]
and a follow-up test case is constructed by adding the following parameters [following:showProjectsIFollow]
and a follow-up test case is constructed by changing the value of the following parameters [following:showProjectsIDoNotFollow]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1305 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, artSubcategory]
and a follow-up test case is constructed by removing the following parameters [artSubcategory, location, savedProjects]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, raised]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR38 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filmAndVideoSubcategory, goal, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1183 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, raised, category, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [location, savedProjects, technologySubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR330 (DISJOINT_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, raised:<75% raised, category, theaterSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [raised:75% to 100% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:>100% raised]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR914 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [raised]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, location, projectsIHaveBacked, publishingSubcategory, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR855 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [goal, location, projectsIHaveBacked, raised]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR803 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, category, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1966 (SHUFFLING_EXTEND):
if a source test case is run with the inputs [location, sortBy:Popularity, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, raised, category]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Magic]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Newest]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:EndDate]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:MostFunded]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:MostBacked]
then the source and the follow-up output(s) should have the same items, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1009 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category, artSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, projectsIHaveBacked, raised]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [artSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1508 (DISJOINT_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects:showProjectsIHaveNotSaved, following, recommendedForMe, amountPledged, raised, category, theaterSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [savedProjects:showProjectsIHaveSaved]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1576 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, photographySubcategory]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [photographySubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following]
and a follow-up test case is constructed by removing the following parameters [location, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1431 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, recommendedForMe, filterProjects, amountPledged, goal, raised, category, fashionSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, goal, searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged, fashionSubcategory, location]
and a follow-up test case is constructed by removing the following parameters [raised]
and a follow-up test case is constructed by removing the following parameters [following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR844 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, goal, location, projectsIHaveBacked, raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2165 (COMPLETE_EXTEND):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, raised, category]
and a follow-up test case is constructed by adding the following parameters [amountPledged:<$1,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$10,000 to $100,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$100,000 to $1,000,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:>$1,000,000 pledged]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR66 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [following, goal, savedProjects]
and a follow-up test case is constructed by removing the following parameters [location, raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1678 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by removing the following parameters [filmAndVideoSubcategory, filterProjects, location, projectsIHaveBacked, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1650 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [goal, searchQuery]
and a follow-up test case is constructed by removing the following parameters [following, location, projectsIHaveBacked, savedProjects]
and a follow-up test case is constructed by removing the following parameters [publishingSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR494 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, goal, raised, category, craftsSubcategory]
and a follow-up test case is constructed by removing the following parameters [craftsSubcategory, filterProjects, location, searchQuery]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [following, goal, raised]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR332 (DISJOINT_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal:<$1,000 goal, raised, category, theaterSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$1,000 to $10,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$10,000 to $100,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$100,000 to $1,000,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:>$1,000,000 goal]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1916 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, following, goal, projectsIHaveBacked, raised, savedProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR648 (DISJOINT_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, projectsIHaveBacked:showProjectsIHaveNotBacked, recommendedForMe, amountPledged, goal, category, technologySubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [projectsIHaveBacked:showProjectsIHaveBacked]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR566 (DISJOINT_EXTEND):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects:liveProjects, amountPledged, goal, category, fashionSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [filterProjects:successfulProjects]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1313 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, artSubcategory]
and a follow-up test case is constructed by removing the following parameters [artSubcategory, filterProjects, following, location, projectsIHaveBacked, raised, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2150 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, raised, category]
and a follow-up test case is constructed by removing the following parameters [following, savedProjects]
and a follow-up test case is constructed by removing the following parameters [filterProjects, raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1383 (COMPLETE_EXTEND):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, raised, category, designSubcategory]
and a follow-up test case is constructed by adding the following parameters [savedProjects:showProjectsIHaveSaved]
and a follow-up test case is constructed by changing the value of the following parameters [savedProjects:showProjectsIHaveNotSaved]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1685 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by removing the following parameters [filmAndVideoSubcategory, filterProjects]
and a follow-up test case is constructed by removing the following parameters [location]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1013 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects:showProjectsIHaveNotSaved, following, projectsIHaveBacked, recommendedForMe, raised, category, artSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [savedProjects:showProjectsIHaveSaved]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR868 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, filterProjects, raised, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [location, publishingSubcategory, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1719 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, recommendedForMe, filterProjects, category, fashionSubcategory]
and a follow-up test case is constructed by adding the following parameters [goal:<$1,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$1,000 to $10,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$10,000 to $100,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$100,000 to $1,000,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:>$1,000,000 goal]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1712 (SHUFFLING_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy:NearMe, projectsWeLove, following, recommendedForMe, filterProjects, category, fashionSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Magic]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Popularity]
then the source and the follow-up output(s) should have the same items, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR567 (COMPLETE_EXTEND):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, fashionSubcategory]
and a follow-up test case is constructed by adding the following parameters [raised:<75% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:75% to 100% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:>100% raised]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2028 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [filterProjects, goal, location, raised]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, projectsIHaveBacked, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR102 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filmAndVideoSubcategory, filterProjects, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR674 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [goal]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [following, projectsIHaveBacked, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR89 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, projectsIHaveBacked, savedProjects]
and a follow-up test case is constructed by removing the following parameters [filmAndVideoSubcategory, following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1514 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, category, danceSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, searchQuery]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [amountPledged, danceSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR816 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, goal, category, foodSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, goal, location, projectsIHaveBacked, savedProjects]
and a follow-up test case is constructed by removing the following parameters [foodSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1090 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, goal, category, photographySubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, goal, savedProjects]
and a follow-up test case is constructed by removing the following parameters [photographySubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR337 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, raised, category, journalismSubcategory]
and a follow-up test case is constructed by removing the following parameters [goal, journalismSubcategory, raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [following, location, projectsIHaveBacked, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR269 (DISJOINT_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects:liveProjects, amountPledged, goal, category, artSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [filterProjects:successfulProjects]
and a follow-up test case is constructed by changing the value of the following parameters [filterProjects:upcomingProjects]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1657 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following:showProjectsIFollow, projectsIHaveBacked, recommendedForMe, goal, category, publishingSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [following:showProjectsIDoNotFollow]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR565 (DISJOINT_EXTEND):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal:<$1,000 goal, category, fashionSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$1,000 to $10,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$10,000 to $100,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$100,000 to $1,000,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:>$1,000,000 goal]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1381 (DISJOINT_EXTEND):
if a source test case is run with the inputs [sortBy, projectsWeLove, following:showProjectsIFollow, projectsIHaveBacked, recommendedForMe, raised, category, designSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [following:showProjectsIDoNotFollow]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2001 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked:showProjectsIHaveNotBacked, recommendedForMe, filterProjects, amountPledged, goal, category]
and a follow-up test case is constructed by changing the value of the following parameters [projectsIHaveBacked:showProjectsIHaveBacked]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2118 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, following, goal, location, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2030 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, following, goal, location, projectsIHaveBacked, raised]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1656 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects:showProjectsIHaveNotSaved, following, projectsIHaveBacked, recommendedForMe, goal, category, publishingSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [savedProjects:showProjectsIHaveSaved]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR474 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, goal, raised, category, craftsSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, craftsSubcategory, filterProjects, following, goal, location, raised, savedProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR800 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, category, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, theaterSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1847 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, category]
and a follow-up test case is constructed by adding the following parameters [projectsIHaveBacked:showProjectsIHaveBacked]
and a follow-up test case is constructed by changing the value of the following parameters [projectsIHaveBacked:showProjectsIHaveNotBacked]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR30 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by removing the following parameters [filmAndVideoSubcategory, following, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [amountPledged, goal]
and a follow-up test case is constructed by removing the following parameters [savedProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2155 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, raised, category]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
and a follow-up test case is constructed by removing the following parameters [following, raised, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR489 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, goal, raised, category, craftsSubcategory]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [craftsSubcategory, filterProjects, goal, location, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [raised]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1333 (DISJOINT_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following:showProjectsIFollow, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, artSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [following:showProjectsIDoNotFollow]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR826 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, goal, category, foodSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
and a follow-up test case is constructed by removing the following parameters [foodSubcategory, goal, projectsIHaveBacked, savedProjects]
and a follow-up test case is constructed by removing the following parameters [location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR878 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, filterProjects, raised, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [location, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects, savedProjects]
and a follow-up test case is constructed by removing the following parameters [publishingSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR820 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, goal, category, foodSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, foodSubcategory, goal, location, savedProjects]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR255 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, artSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
and a follow-up test case is constructed by removing the following parameters [filterProjects, goal]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [artSubcategory, location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR941 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category, comicsSubcategory]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [comicsSubcategory, raised]
and a follow-up test case is constructed by removing the following parameters [following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR460 (SHUFFLING_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy:Popularity, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, goal, category, comicsSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Magic]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Newest]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:EndDate]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:MostFunded]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:MostBacked]
then the source and the follow-up output(s) should have the same items, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR819 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, goal, category, foodSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, goal, projectsIHaveBacked, savedProjects]
and a follow-up test case is constructed by removing the following parameters [foodSubcategory, location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR352 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, raised, category, journalismSubcategory]
and a follow-up test case is constructed by removing the following parameters [goal, location, projectsIHaveBacked, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [journalismSubcategory]
and a follow-up test case is constructed by removing the following parameters [raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1093 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, goal, category, photographySubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, goal, savedProjects]
and a follow-up test case is constructed by removing the following parameters [following, photographySubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR27 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category]
and a follow-up test case is constructed by adding the following parameters [amountPledged:<$1,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$10,000 to $100,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$100,000 to $1,000,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:>$1,000,000 pledged]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR290 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, category, musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [following, location, musicSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1533 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following:showProjectsIDoNotFollow, recommendedForMe, amountPledged, category, danceSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [following:showProjectsIFollow]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR722 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category, danceSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, savedProjects]
and a follow-up test case is constructed by removing the following parameters [danceSubcategory, location, raised]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2024 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, goal, location, projectsIHaveBacked, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category]
and a follow-up test case is constructed by removing the following parameters [filterProjects, raised]
and a follow-up test case is constructed by removing the following parameters [location, projectsIHaveBacked, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2074 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised:<75% raised, category]
and a follow-up test case is constructed by changing the value of the following parameters [raised:75% to 100% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:>100% raised]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1782 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, category, photographySubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, location]
and a follow-up test case is constructed by removing the following parameters [photographySubcategory, projectsIHaveBacked, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2055 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [goal, raised]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, following, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1779 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, category, photographySubcategory]
and a follow-up test case is constructed by removing the following parameters [location, photographySubcategory, projectsIHaveBacked, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR727 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category, danceSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, danceSubcategory, projectsIHaveBacked, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [location, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR497 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following:showProjectsIDoNotFollow, recommendedForMe, filterProjects, amountPledged, goal, raised, category, craftsSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [following:showProjectsIFollow]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR815 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, goal, category, foodSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, foodSubcategory, goal, location, projectsIHaveBacked, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR662 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, projectsIHaveBacked, publishingSubcategory, savedProjects]
and a follow-up test case is constructed by removing the following parameters [goal]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR233 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, recommendedForMe, filterProjects, amountPledged, category, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1169 (COMPLETE_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, category, gamesSubcategory]
and a follow-up test case is constructed by adding the following parameters [goal:<$1,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$1,000 to $10,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$10,000 to $100,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$100,000 to $1,000,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:>$1,000,000 goal]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR533 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, recommendedForMe, goal, raised, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by adding the following parameters [following:showProjectsIFollow]
and a follow-up test case is constructed by changing the value of the following parameters [following:showProjectsIDoNotFollow]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1686 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, location, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filmAndVideoSubcategory, projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR913 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, location, publishingSubcategory, searchQuery]
and a follow-up test case is constructed by removing the following parameters [raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR905 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [publishingSubcategory, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
and a follow-up test case is constructed by removing the following parameters [location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1286 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, raised, category, fashionSubcategory]
and a follow-up test case is constructed by removing the following parameters [raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [fashionSubcategory, location, searchQuery]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR646 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, goal]
and a follow-up test case is constructed by removing the following parameters [location, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1665 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, category, comicsSubcategory]
and a follow-up test case is constructed by removing the following parameters [comicsSubcategory, location, projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR272 (DISJOINT_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged:<$1,000 pledged, goal, category, artSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$10,000 to $100,000 pledged]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR148 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category, craftsSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, craftsSubcategory, filterProjects, following, goal, location, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1022 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, goal, category, gamesSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, goal]
and a follow-up test case is constructed by removing the following parameters [gamesSubcategory, location, savedProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1731 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, category:Music]
and a follow-up test case is constructed by changing the value of the following parameters [category:All categories]
and a follow-up test case is constructed by changing the value of the following parameters [category:Art]
and a follow-up test case is constructed by changing the value of the following parameters [category:Comics]
and a follow-up test case is constructed by changing the value of the following parameters [category:Crafts]
and a follow-up test case is constructed by changing the value of the following parameters [category:Dance]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR783 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following:showProjectsIDoNotFollow, recommendedForMe, amountPledged, raised, category, foodSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [following:showProjectsIFollow]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1448 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, recommendedForMe, filterProjects, amountPledged, goal, raised, category, fashionSubcategory]
and a follow-up test case is constructed by adding the following parameters [projectsIHaveBacked:showProjectsIHaveBacked]
and a follow-up test case is constructed by changing the value of the following parameters [projectsIHaveBacked:showProjectsIHaveNotBacked]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR626 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, recommendedForMe, filterProjects, amountPledged, category, journalismSubcategory]
and a follow-up test case is constructed by adding the following parameters [savedProjects:showProjectsIHaveSaved]
and a follow-up test case is constructed by changing the value of the following parameters [savedProjects:showProjectsIHaveNotSaved]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR609 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, recommendedForMe, filterProjects, amountPledged, category, journalismSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, journalismSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1884 (COMPLETE_EXTEND):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, category]
and a follow-up test case is constructed by adding the following parameters [goal:<$1,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$1,000 to $10,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$10,000 to $100,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$100,000 to $1,000,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:>$1,000,000 goal]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR982 (DISJOINT_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked:showProjectsIHaveBacked, recommendedForMe, category, journalismSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [projectsIHaveBacked:showProjectsIHaveNotBacked]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR966 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, category, journalismSubcategory]
and a follow-up test case is constructed by removing the following parameters [journalismSubcategory, location, savedProjects]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR232 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, recommendedForMe, filterProjects, amountPledged, category, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
and a follow-up test case is constructed by removing the following parameters [theaterSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1720 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, recommendedForMe, filterProjects, category, fashionSubcategory]
and a follow-up test case is constructed by adding the following parameters [raised:<75% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:75% to 100% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:>100% raised]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR874 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, filterProjects, raised, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, location, raised, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [publishingSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2059 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, goal, projectsIHaveBacked, raised]
and a follow-up test case is constructed by removing the following parameters [amountPledged, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2147 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, raised, category]
and a follow-up test case is constructed by removing the following parameters [raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1807 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [goal]
and a follow-up test case is constructed by removing the following parameters [following, publishingSubcategory, raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR785 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, raised, category, foodSubcategory]
and a follow-up test case is constructed by adding the following parameters [projectsIHaveBacked:showProjectsIHaveBacked]
and a follow-up test case is constructed by changing the value of the following parameters [projectsIHaveBacked:showProjectsIHaveNotBacked]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2038 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects:liveProjects, amountPledged, goal, raised, category]
and a follow-up test case is constructed by changing the value of the following parameters [filterProjects:successfulProjects]
and a follow-up test case is constructed by changing the value of the following parameters [filterProjects:upcomingProjects]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1225 (SHUFFLING_EXTEND):
if a source test case is run with the inputs [location, sortBy:Popularity, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category, musicSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Magic]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Newest]
then the source and the follow-up output(s) should have the same items, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR98 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [filmAndVideoSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR714 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, gamesSubcategory]
and a follow-up test case is constructed by adding the following parameters [amountPledged:<$1,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$10,000 to $100,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$100,000 to $1,000,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:>$1,000,000 pledged]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR143 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category, craftsSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, craftsSubcategory, filterProjects, following, goal, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [location]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1588 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, photographySubcategory]
and a follow-up test case is constructed by removing the following parameters [location, savedProjects]
and a follow-up test case is constructed by removing the following parameters [photographySubcategory, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
and a follow-up test case is constructed by removing the following parameters [raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1136 (COMPLETE_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, category, danceSubcategory]
and a follow-up test case is constructed by adding the following parameters [raised:<75% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:75% to 100% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:>100% raised]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR406 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, raised, category, designSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [designSubcategory, following, location, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [goal]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR517 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, recommendedForMe, goal, raised, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by removing the following parameters [filmAndVideoSubcategory, location, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [goal]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1194 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following:showProjectsIFollow, recommendedForMe, filterProjects, raised, category, technologySubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [following:showProjectsIDoNotFollow]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR85 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by removing the following parameters [filmAndVideoSubcategory, filterProjects, following, savedProjects]
and a follow-up test case is constructed by removing the following parameters [amountPledged, projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR343 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, raised, category, journalismSubcategory]
and a follow-up test case is constructed by removing the following parameters [goal]
and a follow-up test case is constructed by removing the following parameters [following, journalismSubcategory, location, projectsIHaveBacked, raised, savedProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR991 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category, artSubcategory]
and a follow-up test case is constructed by removing the following parameters [artSubcategory, raised, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [following, projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1146 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, category, gamesSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, gamesSubcategory, projectsIHaveBacked, savedProjects]
and a follow-up test case is constructed by removing the following parameters [amountPledged, location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1139 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, category, gamesSubcategory]
and a follow-up test case is constructed by removing the following parameters [location]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
and a follow-up test case is constructed by removing the following parameters [gamesSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR250 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, artSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, artSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, goal, location, projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1473 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, foodSubcategory]
and a follow-up test case is constructed by removing the following parameters [goal]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, foodSubcategory, searchQuery]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1212 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category, musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, location, projectsIHaveBacked, raised]
and a follow-up test case is constructed by removing the following parameters [musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1528 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, category, danceSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, searchQuery]
and a follow-up test case is constructed by removing the following parameters [danceSubcategory, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR387 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, goal, category, designSubcategory]
and a follow-up test case is constructed by removing the following parameters [goal, location]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
and a follow-up test case is constructed by removing the following parameters [designSubcategory]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1640 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [goal, savedProjects]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
and a follow-up test case is constructed by removing the following parameters [location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1242 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, category, artSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
and a follow-up test case is constructed by removing the following parameters [artSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1874 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, category]
and a follow-up test case is constructed by removing the following parameters [following, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR249 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, recommendedForMe, filterProjects, amountPledged, category, theaterSubcategory]
and a follow-up test case is constructed by adding the following parameters [raised:<75% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:75% to 100% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:>100% raised]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1812 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, projectsIHaveBacked, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [goal, raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1201 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category, musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [location, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [following, musicSubcategory, raised]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1415 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, category, technologySubcategory]
and a follow-up test case is constructed by adding the following parameters [goal:<$1,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$1,000 to $10,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$10,000 to $100,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$100,000 to $1,000,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:>$1,000,000 goal]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR588 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category, musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, musicSubcategory, projectsIHaveBacked, raised]
and a follow-up test case is constructed by removing the following parameters [following, goal]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR699 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, gamesSubcategory]
and a follow-up test case is constructed by removing the following parameters [gamesSubcategory, projectsIHaveBacked, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR632 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [goal]
and a follow-up test case is constructed by removing the following parameters [amountPledged, location, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1176 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, raised, category, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, location, savedProjects, searchQuery, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [following, raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR967 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, category, journalismSubcategory]
and a follow-up test case is constructed by removing the following parameters [journalismSubcategory]
and a follow-up test case is constructed by removing the following parameters [location]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1398 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, category, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [amountPledged, projectsIHaveBacked, savedProjects, searchQuery, technologySubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR0 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category]
and a follow-up test case is constructed by removing the following parameters [location, projectsIHaveBacked, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR178 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, designSubcategory]
and a follow-up test case is constructed by removing the following parameters [designSubcategory, filterProjects, raised, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR983 (DISJOINT_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, category, journalismSubcategory:Video]
and a follow-up test case is constructed by changing the value of the following parameters [journalismSubcategory:Audio]
and a follow-up test case is constructed by changing the value of the following parameters [journalismSubcategory:Photo]
and a follow-up test case is constructed by changing the value of the following parameters [journalismSubcategory:Print]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2094 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, raised, category]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, projectsIHaveBacked, savedProjects]
and a follow-up test case is constructed by removing the following parameters [raised]
and a follow-up test case is constructed by removing the following parameters [location, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1302 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, artSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, location, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [artSubcategory]
and a follow-up test case is constructed by removing the following parameters [raised]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1178 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, raised, category, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, savedProjects, searchQuery, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [location, raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR202 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following:showProjectsIFollow, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, designSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [following:showProjectsIDoNotFollow]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR293 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, category, musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [location, projectsIHaveBacked, searchQuery]
and a follow-up test case is constructed by removing the following parameters [following, musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR83 (COMPLETE_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, goal, raised, category]
and a follow-up test case is constructed by adding the following parameters [amountPledged:<$1,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$10,000 to $100,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$100,000 to $1,000,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:>$1,000,000 pledged]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR256 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, artSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
and a follow-up test case is constructed by removing the following parameters [goal]
and a follow-up test case is constructed by removing the following parameters [artSubcategory]
and a follow-up test case is constructed by removing the following parameters [location, projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1660 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal:<$1,000 goal, category, publishingSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$1,000 to $10,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$10,000 to $100,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$100,000 to $1,000,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:>$1,000,000 goal]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1475 (SHUFFLING_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy:NearMe, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, foodSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Magic]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Popularity]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Newest]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:EndDate]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:MostFunded]
then the source and the follow-up output(s) should have the same items, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR135 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category, craftsSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, goal, location]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following]
and a follow-up test case is constructed by removing the following parameters [raised]
and a follow-up test case is constructed by removing the following parameters [craftsSubcategory, projectsIHaveBacked, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1644 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, projectsIHaveBacked, savedProjects]
and a follow-up test case is constructed by removing the following parameters [location, searchQuery]
and a follow-up test case is constructed by removing the following parameters [goal, publishingSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1766 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category]
and a follow-up test case is constructed by adding the following parameters [amountPledged:<$1,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$10,000 to $100,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$100,000 to $1,000,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:>$1,000,000 pledged]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1389 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, category, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR594 (DISJOINT_EXTEND):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal:<$1,000 goal, raised, category, musicSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$1,000 to $10,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$10,000 to $100,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$100,000 to $1,000,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:>$1,000,000 goal]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1011 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised:<75% raised, category, artSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [raised:75% to 100% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:>100% raised]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR260 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, artSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, artSubcategory, filterProjects, goal, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR756 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, raised, category, foodSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, foodSubcategory, location, savedProjects]
and a follow-up test case is constructed by removing the following parameters [raised, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR357 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following:showProjectsIDoNotFollow, projectsIHaveBacked, recommendedForMe, goal, raised, category, journalismSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [following:showProjectsIFollow]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1494 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, raised, category, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, location, raised, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR981 (DISJOINT_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects:showProjectsIHaveSaved, projectsIHaveBacked, recommendedForMe, category, journalismSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [savedProjects:showProjectsIHaveNotSaved]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR462 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects:showProjectsIHaveSaved, following, recommendedForMe, filterProjects, amountPledged, goal, category, comicsSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [savedProjects:showProjectsIHaveNotSaved]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2167 (COMPLETE_EXTEND):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, raised, category]
and a follow-up test case is constructed by adding the following parameters [goal:<$1,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$1,000 to $10,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$10,000 to $100,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$100,000 to $1,000,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:>$1,000,000 goal]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR41 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by removing the following parameters [filmAndVideoSubcategory, following, goal, projectsIHaveBacked, searchQuery]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR559 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, fashionSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects]
and a follow-up test case is constructed by removing the following parameters [following, projectsIHaveBacked, savedProjects]
and a follow-up test case is constructed by removing the following parameters [goal]
and a follow-up test case is constructed by removing the following parameters [fashionSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR515 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, recommendedForMe, goal, raised, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by removing the following parameters [raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [goal, location]
and a follow-up test case is constructed by removing the following parameters [filmAndVideoSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR382 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, goal, category, designSubcategory]
and a follow-up test case is constructed by removing the following parameters [designSubcategory, goal, location, searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1279 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, raised, category, fashionSubcategory]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [fashionSubcategory, location]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR200 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised:<75% raised, category, designSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [raised:75% to 100% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:>100% raised]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2127 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, location, projectsIHaveBacked, publishingSubcategory, searchQuery]
and a follow-up test case is constructed by removing the following parameters [goal]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1960 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following]
and a follow-up test case is constructed by removing the following parameters [goal, location, projectsIHaveBacked, raised, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR541 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, fashionSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, fashionSubcategory, filterProjects, goal]
and a follow-up test case is constructed by removing the following parameters [following, projectsIHaveBacked, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR459 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, goal, category, comicsSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, goal]
and a follow-up test case is constructed by removing the following parameters [amountPledged, comicsSubcategory, following, location, savedProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1394 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, category, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, savedProjects, searchQuery, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR285 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, category, musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [musicSubcategory, projectsIHaveBacked, savedProjects]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
and a follow-up test case is constructed by removing the following parameters [following, location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1558 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, goal, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [publishingSubcategory, searchQuery]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR355 (SHUFFLING_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy:Popularity, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, raised, category, journalismSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Magic]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Newest]
then the source and the follow-up output(s) should have the same items, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2056 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, goal, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [following, raised, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1105 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, category, danceSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, goal, location]
and a follow-up test case is constructed by removing the following parameters [danceSubcategory, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1698 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by adding the following parameters [savedProjects:showProjectsIHaveSaved]
and a follow-up test case is constructed by changing the value of the following parameters [savedProjects:showProjectsIHaveNotSaved]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR683 (DISJOINT_EXTEND):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged:<$1,000 pledged, goal, category, publishingSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$10,000 to $100,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$100,000 to $1,000,000 pledged]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1422 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, recommendedForMe, filterProjects, amountPledged, goal, raised, category, fashionSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, fashionSubcategory, filterProjects, following, goal, location, raised]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1454 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, foodSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [foodSubcategory, goal, searchQuery]
and a follow-up test case is constructed by removing the following parameters [following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1689 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by removing the following parameters [filmAndVideoSubcategory, filterProjects, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [location, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR705 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, gamesSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, raised]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [gamesSubcategory]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1767 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, category, photographySubcategory]
and a follow-up test case is constructed by removing the following parameters [location, searchQuery]
and a follow-up test case is constructed by removing the following parameters [photographySubcategory, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR812 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, category, theaterSubcategory]
and a follow-up test case is constructed by adding the following parameters [following:showProjectsIFollow]
and a follow-up test case is constructed by changing the value of the following parameters [following:showProjectsIDoNotFollow]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR114 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, location, savedProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1873 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [following, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR875 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, filterProjects, raised, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, publishingSubcategory, searchQuery]
and a follow-up test case is constructed by removing the following parameters [location, savedProjects]
and a follow-up test case is constructed by removing the following parameters [raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1371 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, raised, category, designSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, projectsIHaveBacked, raised]
and a follow-up test case is constructed by removing the following parameters [designSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR644 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, goal, location, projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR923 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [location, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, raised, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR763 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, raised, category, foodSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, foodSubcategory, location, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1753 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [filterProjects, projectsIHaveBacked, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [goal]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR386 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, goal, category, designSubcategory]
and a follow-up test case is constructed by removing the following parameters [goal, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [designSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1981 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category]
and a follow-up test case is constructed by removing the following parameters [goal, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR712 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following:showProjectsIDoNotFollow, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, gamesSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [following:showProjectsIFollow]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR231 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, recommendedForMe, filterProjects, amountPledged, category, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [following, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR118 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, searchQuery]
and a follow-up test case is constructed by removing the following parameters [location, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1675 (COMPLETE_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, category, comicsSubcategory]
and a follow-up test case is constructed by adding the following parameters [raised:<75% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:75% to 100% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:>100% raised]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1053 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, raised, category, musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [musicSubcategory, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR121 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, category]
and a follow-up test case is constructed by removing the following parameters [location, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1943 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects:showProjectsIHaveSaved, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category]
and a follow-up test case is constructed by changing the value of the following parameters [savedProjects:showProjectsIHaveNotSaved]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2026 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [location]
and a follow-up test case is constructed by removing the following parameters [raised]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, goal, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1007 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category, artSubcategory]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [artSubcategory, following, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR802 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, category, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, savedProjects, searchQuery, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1050 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, raised, category, musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
and a follow-up test case is constructed by removing the following parameters [savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [musicSubcategory, raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR697 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, gamesSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, gamesSubcategory, projectsIHaveBacked, raised, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR558 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, fashionSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, goal, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [amountPledged, fashionSubcategory, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR314 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, raised, category, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, goal, location, raised, savedProjects, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR304 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, category, musicSubcategory]
and a follow-up test case is constructed by adding the following parameters [raised:<75% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:75% to 100% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:>100% raised]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1005 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category, artSubcategory]
and a follow-up test case is constructed by removing the following parameters [artSubcategory, projectsIHaveBacked, raised, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1704 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, recommendedForMe, filterProjects, category, fashionSubcategory]
and a follow-up test case is constructed by removing the following parameters [fashionSubcategory, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR346 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, raised, category, journalismSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, goal, journalismSubcategory, location, raised, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR555 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, fashionSubcategory]
and a follow-up test case is constructed by removing the following parameters [fashionSubcategory, filterProjects, goal]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR378 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, goal, category, designSubcategory]
and a follow-up test case is constructed by removing the following parameters [designSubcategory, location, savedProjects]
and a follow-up test case is constructed by removing the following parameters [amountPledged, goal, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1574 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, photographySubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, location, photographySubcategory, raised, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR910 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following]
and a follow-up test case is constructed by removing the following parameters [location, projectsIHaveBacked, publishingSubcategory, searchQuery]
and a follow-up test case is constructed by removing the following parameters [raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR239 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, recommendedForMe, filterProjects, amountPledged, category, theaterSubcategory]
and a follow-up test case is constructed by adding the following parameters [goal, savedProjects]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR468 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects:liveProjects, amountPledged, goal, category, comicsSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [filterProjects:successfulProjects]
and a follow-up test case is constructed by changing the value of the following parameters [filterProjects:upcomingProjects]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1524 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, category, danceSubcategory]
and a follow-up test case is constructed by removing the following parameters [danceSubcategory, searchQuery]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR35 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filmAndVideoSubcategory, following, goal]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR417 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, raised, category, designSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, goal, location, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [designSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR807 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked:showProjectsIHaveNotBacked, recommendedForMe, filterProjects, category, theaterSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [projectsIHaveBacked:showProjectsIHaveBacked]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR580 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category, musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, following, goal, projectsIHaveBacked, raised]
and a follow-up test case is constructed by removing the following parameters [musicSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2163 (DISJOINT_EXTEND):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects:showProjectsIHaveSaved, following, recommendedForMe, filterProjects, raised, category]
and a follow-up test case is constructed by changing the value of the following parameters [savedProjects:showProjectsIHaveNotSaved]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR912 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, raised]
and a follow-up test case is constructed by removing the following parameters [location, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [publishingSubcategory, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1879 (DISJOINT_EXTEND):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects:showProjectsIHaveSaved, following, projectsIHaveBacked, recommendedForMe, amountPledged, category]
and a follow-up test case is constructed by changing the value of the following parameters [savedProjects:showProjectsIHaveNotSaved]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR381 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, goal, category, designSubcategory]
and a follow-up test case is constructed by removing the following parameters [designSubcategory, goal, location, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1166 (DISJOINT_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged:<$1,000 pledged, category, gamesSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$10,000 to $100,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$100,000 to $1,000,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:>$1,000,000 pledged]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR188 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, designSubcategory]
and a follow-up test case is constructed by removing the following parameters [designSubcategory, filterProjects, following, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [raised, savedProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR764 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, raised, category, foodSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, foodSubcategory, location, raised, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR909 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, raised]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, publishingSubcategory, searchQuery]
and a follow-up test case is constructed by removing the following parameters [location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1388 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, category, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, searchQuery]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR940 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category, comicsSubcategory]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [comicsSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, projectsIHaveBacked, raised, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2152 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, raised, category]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, savedProjects]
and a follow-up test case is constructed by removing the following parameters [raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1939 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects:liveProjects, amountPledged, goal, raised, category]
and a follow-up test case is constructed by changing the value of the following parameters [filterProjects:successfulProjects]
and a follow-up test case is constructed by changing the value of the following parameters [filterProjects:upcomingProjects]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1356 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, raised:<75% raised, category]
and a follow-up test case is constructed by changing the value of the following parameters [raised:75% to 100% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:>100% raised]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR733 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category, danceSubcategory]
and a follow-up test case is constructed by removing the following parameters [location, searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged, danceSubcategory, projectsIHaveBacked, raised, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1622 (SHUFFLING_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy:NearMe, projectsWeLove, savedProjects, recommendedForMe, amountPledged, raised, category, publishingSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Magic]
then the source and the follow-up output(s) should have the same items, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR715 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, gamesSubcategory]
and a follow-up test case is constructed by adding the following parameters [goal:<$1,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$1,000 to $10,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$10,000 to $100,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$100,000 to $1,000,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:>$1,000,000 goal]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1979 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, goal, projectsIHaveBacked, savedProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1358 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged:<$1,000 pledged, raised, category]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$10,000 to $100,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$100,000 to $1,000,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:>$1,000,000 pledged]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1370 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, raised, category, designSubcategory]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, raised]
and a follow-up test case is constructed by removing the following parameters [designSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1552 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, searchQuery]
and a follow-up test case is constructed by removing the following parameters [following, projectsIHaveBacked, savedProjects]
and a follow-up test case is constructed by removing the following parameters [goal, publishingSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR323 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, raised, category, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [goal, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [following, location, raised, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR33 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filmAndVideoSubcategory, goal]
and a follow-up test case is constructed by removing the following parameters [savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [following, projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1318 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, artSubcategory]
and a follow-up test case is constructed by removing the following parameters [artSubcategory, filterProjects, following, projectsIHaveBacked, savedProjects]
and a follow-up test case is constructed by removing the following parameters [location]
and a follow-up test case is constructed by removing the following parameters [raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1325 (DISJOINT_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects:showProjectsIHaveNotSaved, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, artSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [savedProjects:showProjectsIHaveSaved]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1186 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, raised, category, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, location, raised, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [following, searchQuery]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1217 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category, musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [musicSubcategory, projectsIHaveBacked, raised]
and a follow-up test case is constructed by removing the following parameters [following, savedProjects]
and a follow-up test case is constructed by removing the following parameters [location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1352 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1291 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, raised:<75% raised, category, fashionSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [raised:75% to 100% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:>100% raised]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR951 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category, comicsSubcategory]
and a follow-up test case is constructed by removing the following parameters [comicsSubcategory, following, projectsIHaveBacked, searchQuery]
and a follow-up test case is constructed by removing the following parameters [raised, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR16 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category]
and a follow-up test case is constructed by removing the following parameters [filterProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [location, projectsIHaveBacked, raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR384 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, goal, category, designSubcategory]
and a follow-up test case is constructed by removing the following parameters [location]
and a follow-up test case is constructed by removing the following parameters [designSubcategory, goal, searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR544 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, fashionSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, following, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [goal]
and a follow-up test case is constructed by removing the following parameters [fashionSubcategory]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR99 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filmAndVideoSubcategory, filterProjects, projectsIHaveBacked, savedProjects]
and a follow-up test case is constructed by removing the following parameters [following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR931 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, publishingSubcategory]
and a follow-up test case is constructed by adding the following parameters [amountPledged:<$1,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$10,000 to $100,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$100,000 to $1,000,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:>$1,000,000 pledged]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR902 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, location, projectsIHaveBacked, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [publishingSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR76 (DISJOINT_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects:showProjectsIHaveNotSaved, following, recommendedForMe, goal, raised, category]
and a follow-up test case is constructed by changing the value of the following parameters [savedProjects:showProjectsIHaveSaved]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR953 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category, comicsSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [raised]
and a follow-up test case is constructed by removing the following parameters [comicsSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1946 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [location]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [amountPledged, goal]
and a follow-up test case is constructed by removing the following parameters [following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR514 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, recommendedForMe, goal, raised, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by removing the following parameters [location, raised]
and a follow-up test case is constructed by removing the following parameters [goal]
and a follow-up test case is constructed by removing the following parameters [filmAndVideoSubcategory, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR774 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, raised, category, foodSubcategory]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [following, foodSubcategory, location, raised]
and a follow-up test case is constructed by removing the following parameters [amountPledged, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR62 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [goal]
and a follow-up test case is constructed by removing the following parameters [location]
and a follow-up test case is constructed by removing the following parameters [raised]
and a follow-up test case is constructed by removing the following parameters [following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2075 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects:liveProjects, amountPledged, goal, raised, category]
and a follow-up test case is constructed by changing the value of the following parameters [filterProjects:successfulProjects]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR440 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, goal, category, comicsSubcategory]
and a follow-up test case is constructed by removing the following parameters [comicsSubcategory, location, savedProjects]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, goal]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1006 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category, artSubcategory]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, savedProjects]
and a follow-up test case is constructed by removing the following parameters [artSubcategory, following, raised, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR482 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, goal, raised, category, craftsSubcategory]
and a follow-up test case is constructed by removing the following parameters [goal]
and a follow-up test case is constructed by removing the following parameters [amountPledged, craftsSubcategory, filterProjects, following, location, raised, savedProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR69 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [goal, location, raised]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR31 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filmAndVideoSubcategory, following, goal, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [savedProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR954 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category, comicsSubcategory]
and a follow-up test case is constructed by removing the following parameters [comicsSubcategory, raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [following, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR710 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, gamesSubcategory:Mobile Games]
and a follow-up test case is constructed by changing the value of the following parameters [gamesSubcategory:Gaming Hardware]
and a follow-up test case is constructed by changing the value of the following parameters [gamesSubcategory:Live Games]
and a follow-up test case is constructed by changing the value of the following parameters [gamesSubcategory:Playing Cards]
and a follow-up test case is constructed by changing the value of the following parameters [gamesSubcategory:Puzzles]
and a follow-up test case is constructed by changing the value of the following parameters [gamesSubcategory:Tabletop Games]
and a follow-up test case is constructed by changing the value of the following parameters [gamesSubcategory:Video Games]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR243 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following:showProjectsIDoNotFollow, recommendedForMe, filterProjects, amountPledged, category, theaterSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [following:showProjectsIFollow]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR61 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [location]
and a follow-up test case is constructed by removing the following parameters [raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [goal]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1773 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, category, photographySubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
and a follow-up test case is constructed by removing the following parameters [photographySubcategory, searchQuery]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR71 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [following, location, savedProjects]
and a follow-up test case is constructed by removing the following parameters [raised]
and a follow-up test case is constructed by removing the following parameters [goal]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR411 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, raised, category, designSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, designSubcategory, following, location, searchQuery]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, raised]
and a follow-up test case is constructed by removing the following parameters [goal]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1523 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, category, danceSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, searchQuery]
and a follow-up test case is constructed by removing the following parameters [danceSubcategory, following]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR798 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, category, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, projectsIHaveBacked, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [theaterSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR948 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category, comicsSubcategory]
and a follow-up test case is constructed by removing the following parameters [comicsSubcategory, following, raised]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR158 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category, craftsSubcategory]
and a follow-up test case is constructed by removing the following parameters [goal, location]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, projectsIHaveBacked, raised]
and a follow-up test case is constructed by removing the following parameters [craftsSubcategory, searchQuery]
and a follow-up test case is constructed by removing the following parameters [following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1832 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, savedProjects]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1175 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, raised, category, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, raised, savedProjects, searchQuery, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1858 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, category]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, searchQuery]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2144 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, publishingSubcategory]
and a follow-up test case is constructed by adding the following parameters [savedProjects:showProjectsIHaveSaved]
and a follow-up test case is constructed by changing the value of the following parameters [savedProjects:showProjectsIHaveNotSaved]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1365 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, raised, category, designSubcategory]
and a follow-up test case is constructed by removing the following parameters [designSubcategory, following, projectsIHaveBacked, raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR108 (DISJOINT_EXTEND):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, category, filmAndVideoSubcategory:Action]
and a follow-up test case is constructed by changing the value of the following parameters [filmAndVideoSubcategory:Animation]
and a follow-up test case is constructed by changing the value of the following parameters [filmAndVideoSubcategory:Comedy]
and a follow-up test case is constructed by changing the value of the following parameters [filmAndVideoSubcategory:Documentary]
and a follow-up test case is constructed by changing the value of the following parameters [filmAndVideoSubcategory:Drama]
and a follow-up test case is constructed by changing the value of the following parameters [filmAndVideoSubcategory:Experimental]
and a follow-up test case is constructed by changing the value of the following parameters [filmAndVideoSubcategory:Family]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR636 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, location, projectsIHaveBacked, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [goal]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR67 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [following, goal, location]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR680 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, goal, publishingSubcategory, savedProjects]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1579 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, photographySubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, location, photographySubcategory, projectsIHaveBacked, searchQuery]
and a follow-up test case is constructed by removing the following parameters [following, raised, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1770 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, category, photographySubcategory]
and a follow-up test case is constructed by removing the following parameters [location, projectsIHaveBacked, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects, photographySubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1696 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by adding the following parameters [goal:<$1,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$1,000 to $10,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$10,000 to $100,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$100,000 to $1,000,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:>$1,000,000 goal]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR730 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category, danceSubcategory]
and a follow-up test case is constructed by removing the following parameters [savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [danceSubcategory, location]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, raised]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1121 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, category, danceSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, location, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [goal]
and a follow-up test case is constructed by removing the following parameters [danceSubcategory, following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1561 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, goal, publishingSubcategory, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1481 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal:<$1,000 goal, category, foodSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$1,000 to $10,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$10,000 to $100,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$100,000 to $1,000,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:>$1,000,000 goal]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR141 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category, craftsSubcategory]
and a follow-up test case is constructed by removing the following parameters [craftsSubcategory, filterProjects, projectsIHaveBacked, raised]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following]
and a follow-up test case is constructed by removing the following parameters [goal, location]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1127 (SHUFFLING_EXTEND):
if a source test case is run with the inputs [location, sortBy:Popularity, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, category, danceSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Magic]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Newest]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:EndDate]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:MostFunded]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:MostBacked]
then the source and the follow-up output(s) should have the same items, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1635 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
and a follow-up test case is constructed by removing the following parameters [following, projectsIHaveBacked, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [goal, location, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR748 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, amountPledged, raised:<75% raised, category, danceSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [raised:75% to 100% raised]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2161 (DISJOINT_EXTEND):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects:liveProjects, raised, category]
and a follow-up test case is constructed by changing the value of the following parameters [filterProjects:successfulProjects]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR44 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by removing the following parameters [filmAndVideoSubcategory]
and a follow-up test case is constructed by removing the following parameters [savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [following, goal, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1019 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category, artSubcategory]
and a follow-up test case is constructed by adding the following parameters [amountPledged:<$1,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$10,000 to $100,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$100,000 to $1,000,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:>$1,000,000 pledged]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1758 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked:showProjectsIHaveNotBacked, recommendedForMe, filterProjects, goal, raised, category]
and a follow-up test case is constructed by changing the value of the following parameters [projectsIHaveBacked:showProjectsIHaveBacked]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR493 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, goal, raised, category, craftsSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, craftsSubcategory, filterProjects, goal, location, raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1647 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [goal, location, projectsIHaveBacked, publishingSubcategory, savedProjects]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1788 (SHUFFLING_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy:Popularity, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, category, photographySubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Magic]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Newest]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:EndDate]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:MostFunded]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:MostBacked]
then the source and the follow-up output(s) should have the same items, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR856 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [filterProjects, location, projectsIHaveBacked, raised]
and a follow-up test case is constructed by removing the following parameters [following, goal]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1771 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, category, photographySubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, location, photographySubcategory, projectsIHaveBacked, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR237 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, recommendedForMe, filterProjects, amountPledged, category, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, searchQuery, theaterSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR402 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, raised, category, designSubcategory]
and a follow-up test case is constructed by removing the following parameters [raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged, designSubcategory, following, goal, location, projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR312 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, raised, category, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, raised]
and a follow-up test case is constructed by removing the following parameters [location]
and a follow-up test case is constructed by removing the following parameters [theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [goal]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1717 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following:showProjectsIFollow, recommendedForMe, filterProjects, category, fashionSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [following:showProjectsIDoNotFollow]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1063 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, raised, category, musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, musicSubcategory, raised]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR984 (COMPLETE_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, category, journalismSubcategory]
and a follow-up test case is constructed by adding the following parameters [amountPledged:<$1,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$10,000 to $100,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$100,000 to $1,000,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:>$1,000,000 pledged]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1254 (SHUFFLING_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy:NearMe, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, category, artSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Magic]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Popularity]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Newest]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:EndDate]
then the source and the follow-up output(s) should have the same items, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR888 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, filterProjects, raised, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [location, raised]
and a follow-up test case is constructed by removing the following parameters [filterProjects, savedProjects]
and a follow-up test case is constructed by removing the following parameters [publishingSubcategory, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1885 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, category]
and a follow-up test case is constructed by removing the following parameters [filterProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged, location]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2015 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [location, projectsIHaveBacked, raised]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, following, goal, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1396 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, category, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, searchQuery, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1482 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, foodSubcategory]
and a follow-up test case is constructed by adding the following parameters [savedProjects:showProjectsIHaveSaved]
and a follow-up test case is constructed by changing the value of the following parameters [savedProjects:showProjectsIHaveNotSaved]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR262 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, artSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, artSubcategory, location, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [filterProjects, goal]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR368 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, goal, category, designSubcategory]
and a follow-up test case is constructed by removing the following parameters [designSubcategory, savedProjects]
and a follow-up test case is constructed by removing the following parameters [amountPledged, goal]
and a follow-up test case is constructed by removing the following parameters [location, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1256 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects:showProjectsIHaveSaved, following, recommendedForMe, filterProjects, category, artSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [savedProjects:showProjectsIHaveNotSaved]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR927 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised:<75% raised, category, publishingSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [raised:75% to 100% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:>100% raised]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1502 (SHUFFLING_EXTEND):
if a source test case is run with the inputs [location, sortBy:Popularity, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, raised, category, theaterSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Magic]
then the source and the follow-up output(s) should have the same items, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1366 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, raised, category, designSubcategory]
and a follow-up test case is constructed by removing the following parameters [designSubcategory, raised]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR434 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, goal, category, comicsSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, comicsSubcategory, filterProjects, goal, location, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR987 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category, artSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, projectsIHaveBacked, savedProjects]
and a follow-up test case is constructed by removing the following parameters [artSubcategory, raised, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1594 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, photographySubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, projectsIHaveBacked, raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [location, photographySubcategory, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1157 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, category, gamesSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
and a follow-up test case is constructed by removing the following parameters [following, gamesSubcategory, location, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1642 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [location, projectsIHaveBacked, publishingSubcategory, searchQuery]
and a follow-up test case is constructed by removing the following parameters [following, goal, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR961 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following:showProjectsIDoNotFollow, projectsIHaveBacked, recommendedForMe, raised, category, comicsSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [following:showProjectsIFollow]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR952 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category, comicsSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, savedProjects]
and a follow-up test case is constructed by removing the following parameters [comicsSubcategory, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1323 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, artSubcategory]
and a follow-up test case is constructed by removing the following parameters [location, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [artSubcategory, filterProjects, following, savedProjects]
and a follow-up test case is constructed by removing the following parameters [raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR825 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, goal, category, foodSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [foodSubcategory, location, savedProjects]
and a follow-up test case is constructed by removing the following parameters [goal]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1677 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
and a follow-up test case is constructed by removing the following parameters [filmAndVideoSubcategory, filterProjects, location, projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1515 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, category, danceSubcategory]
and a follow-up test case is constructed by removing the following parameters [danceSubcategory, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
and a follow-up test case is constructed by removing the following parameters [following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1208 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category, musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, location, musicSubcategory, projectsIHaveBacked, raised, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR223 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, recommendedForMe, filterProjects, amountPledged, category, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, following, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR899 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, filterProjects, raised, category, publishingSubcategory]
and a follow-up test case is constructed by adding the following parameters [following:showProjectsIFollow]
and a follow-up test case is constructed by changing the value of the following parameters [following:showProjectsIDoNotFollow]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1597 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, photographySubcategory]
and a follow-up test case is constructed by removing the following parameters [location, photographySubcategory, projectsIHaveBacked, raised, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
and a follow-up test case is constructed by removing the following parameters [following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1028 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, goal, category, gamesSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [gamesSubcategory, goal]
and a follow-up test case is constructed by removing the following parameters [location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR963 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category, comicsSubcategory]
and a follow-up test case is constructed by adding the following parameters [goal:<$1,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$1,000 to $10,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$10,000 to $100,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$100,000 to $1,000,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:>$1,000,000 goal]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR308 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, raised, category, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [goal, location, raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [following, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR610 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, recommendedForMe, filterProjects, amountPledged, category, journalismSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [following, journalismSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR932 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, publishingSubcategory]
and a follow-up test case is constructed by adding the following parameters [goal:<$1,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$1,000 to $10,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$10,000 to $100,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$100,000 to $1,000,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:>$1,000,000 goal]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1573 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, publishingSubcategory]
and a follow-up test case is constructed by adding the following parameters [raised:<75% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:75% to 100% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:>100% raised]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR116 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, location, searchQuery]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2079 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, raised, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, projectsIHaveBacked, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects, location, raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1769 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, category, photographySubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, photographySubcategory, searchQuery]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2148 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, raised, category]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following]
and a follow-up test case is constructed by removing the following parameters [raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR737 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category, danceSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, location, projectsIHaveBacked, raised]
and a follow-up test case is constructed by removing the following parameters [danceSubcategory, savedProjects]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1540 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, category, danceSubcategory]
and a follow-up test case is constructed by adding the following parameters [raised:<75% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:75% to 100% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:>100% raised]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1263 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, raised, category, fashionSubcategory]
and a follow-up test case is constructed by removing the following parameters [fashionSubcategory, location, raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2131 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, goal]
and a follow-up test case is constructed by removing the following parameters [following, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [location, projectsIHaveBacked, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1427 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, recommendedForMe, filterProjects, amountPledged, goal, raised, category, fashionSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, fashionSubcategory, filterProjects, following, location, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [goal]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR608 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, recommendedForMe, filterProjects, amountPledged, category, journalismSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, journalismSubcategory, searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR32 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filmAndVideoSubcategory, searchQuery]
and a follow-up test case is constructed by removing the following parameters [following, goal, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR227 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, recommendedForMe, filterProjects, amountPledged, category, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
and a follow-up test case is constructed by removing the following parameters [amountPledged, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
and a follow-up test case is constructed by removing the following parameters [following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR757 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, raised, category, foodSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, foodSubcategory, location]
and a follow-up test case is constructed by removing the following parameters [amountPledged, raised, savedProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR215 (DISJOINT_EXTEND):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, category, craftsSubcategory:Candles]
and a follow-up test case is constructed by changing the value of the following parameters [craftsSubcategory:Crochet]
and a follow-up test case is constructed by changing the value of the following parameters [craftsSubcategory:DIY]
and a follow-up test case is constructed by changing the value of the following parameters [craftsSubcategory:Embroidery]
and a follow-up test case is constructed by changing the value of the following parameters [craftsSubcategory:Glass]
and a follow-up test case is constructed by changing the value of the following parameters [craftsSubcategory:Knitting]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1124 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, category, danceSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, location]
and a follow-up test case is constructed by removing the following parameters [danceSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, goal, projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR347 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, raised, category, journalismSubcategory]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, savedProjects]
and a follow-up test case is constructed by removing the following parameters [following, goal, journalismSubcategory, location, raised, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR55 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged:<$1,000 pledged, goal, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$10,000 to $100,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$100,000 to $1,000,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:>$1,000,000 pledged]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1910 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, category]
and a follow-up test case is constructed by adding the following parameters [savedProjects:showProjectsIHaveSaved]
and a follow-up test case is constructed by changing the value of the following parameters [savedProjects:showProjectsIHaveNotSaved]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR591 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category, musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
and a follow-up test case is constructed by removing the following parameters [following, raised]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [amountPledged, goal, musicSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1931 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [filterProjects, goal, projectsIHaveBacked, raised, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
and a follow-up test case is constructed by removing the following parameters [following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1610 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, raised, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, publishingSubcategory, raised, savedProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR854 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
and a follow-up test case is constructed by removing the following parameters [following, goal, location, raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1270 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, raised, category, fashionSubcategory]
and a follow-up test case is constructed by removing the following parameters [location, projectsIHaveBacked, raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [fashionSubcategory]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1987 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category]
and a follow-up test case is constructed by removing the following parameters [filterProjects, goal, searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1417 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, recommendedForMe, filterProjects, amountPledged, goal, raised, category, fashionSubcategory]
and a follow-up test case is constructed by removing the following parameters [fashionSubcategory, filterProjects, following, goal, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
and a follow-up test case is constructed by removing the following parameters [location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1865 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, category:Dance]
and a follow-up test case is constructed by changing the value of the following parameters [category:All categories]
and a follow-up test case is constructed by changing the value of the following parameters [category:Art]
and a follow-up test case is constructed by changing the value of the following parameters [category:Comics]
and a follow-up test case is constructed by changing the value of the following parameters [category:Crafts]
and a follow-up test case is constructed by changing the value of the following parameters [category:Design]
and a follow-up test case is constructed by changing the value of the following parameters [category:Fashion]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR809 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, category, theaterSubcategory]
and a follow-up test case is constructed by adding the following parameters [raised:<75% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:75% to 100% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:>100% raised]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR469 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, goal, category, comicsSubcategory:Graphic Novels]
and a follow-up test case is constructed by changing the value of the following parameters [comicsSubcategory:Anthologies]
and a follow-up test case is constructed by changing the value of the following parameters [comicsSubcategory:Comic Books]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1513 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, category, danceSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, danceSubcategory, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1889 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, location, projectsIHaveBacked, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR996 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category, artSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, projectsIHaveBacked, searchQuery]
and a follow-up test case is constructed by removing the following parameters [artSubcategory, raised]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR354 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, raised, category, journalismSubcategory]
and a follow-up test case is constructed by removing the following parameters [goal, location, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [following, projectsIHaveBacked, savedProjects]
and a follow-up test case is constructed by removing the following parameters [journalismSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR547 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, fashionSubcategory]
and a follow-up test case is constructed by removing the following parameters [fashionSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, goal, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [amountPledged, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1890 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, category]
and a follow-up test case is constructed by removing the following parameters [location, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1068 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, raised, category, musicSubcategory:Jazz]
and a follow-up test case is constructed by changing the value of the following parameters [musicSubcategory:Blues]
and a follow-up test case is constructed by changing the value of the following parameters [musicSubcategory:Chiptune]
and a follow-up test case is constructed by changing the value of the following parameters [musicSubcategory:Classical Music]
and a follow-up test case is constructed by changing the value of the following parameters [musicSubcategory:Comedy]
and a follow-up test case is constructed by changing the value of the following parameters [musicSubcategory:Country & Folk]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1927 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, goal, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects, raised]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1566 (SHUFFLING_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy:NearMe, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, publishingSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Magic]
then the source and the follow-up output(s) should have the same items, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1834 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR840 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, goal, location]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1649 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, goal, location, projectsIHaveBacked, publishingSubcategory, searchQuery]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR208 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, category, craftsSubcategory]
and a follow-up test case is constructed by removing the following parameters [craftsSubcategory, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR125 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects:showProjectsIHaveNotSaved, recommendedForMe, amountPledged, category]
and a follow-up test case is constructed by changing the value of the following parameters [savedProjects:showProjectsIHaveSaved]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1103 (COMPLETE_EXTEND):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, goal, category, photographySubcategory]
and a follow-up test case is constructed by adding the following parameters [projectsIHaveBacked:showProjectsIHaveBacked]
and a follow-up test case is constructed by changing the value of the following parameters [projectsIHaveBacked:showProjectsIHaveNotBacked]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1400 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, category, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, projectsIHaveBacked, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [technologySubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1075 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, goal, category, photographySubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, goal, photographySubcategory, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1043 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged:<$1,000 pledged, goal, category, gamesSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$10,000 to $100,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$100,000 to $1,000,000 pledged]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR385 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, goal, category, designSubcategory]
and a follow-up test case is constructed by removing the following parameters [designSubcategory, goal, location, savedProjects]
and a follow-up test case is constructed by removing the following parameters [amountPledged, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR75 (SHUFFLING_EXTEND):
if a source test case is run with the inputs [location, sortBy:Popularity, projectsWeLove, savedProjects, following, recommendedForMe, goal, raised, category]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Magic]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Newest]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:EndDate]
then the source and the follow-up output(s) should have the same items, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR522 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, recommendedForMe, goal, raised, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by removing the following parameters [location]
and a follow-up test case is constructed by removing the following parameters [raised]
and a follow-up test case is constructed by removing the following parameters [filmAndVideoSubcategory]
and a follow-up test case is constructed by removing the following parameters [goal, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1284 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, raised, category, fashionSubcategory]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
and a follow-up test case is constructed by removing the following parameters [fashionSubcategory, location, projectsIHaveBacked, savedProjects]
and a follow-up test case is constructed by removing the following parameters [raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1433 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, recommendedForMe, filterProjects, amountPledged, goal, raised, category, fashionSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, fashionSubcategory, following, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects, goal, location, raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1111 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, category, danceSubcategory]
and a follow-up test case is constructed by removing the following parameters [danceSubcategory, goal, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following]
and a follow-up test case is constructed by removing the following parameters [location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1701 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, recommendedForMe, filterProjects, category, fashionSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [fashionSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR301 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, category, musicSubcategory:Jazz]
and a follow-up test case is constructed by changing the value of the following parameters [musicSubcategory:Blues]
and a follow-up test case is constructed by changing the value of the following parameters [musicSubcategory:Chiptune]
and a follow-up test case is constructed by changing the value of the following parameters [musicSubcategory:Classical Music]
and a follow-up test case is constructed by changing the value of the following parameters [musicSubcategory:Comedy]
and a follow-up test case is constructed by changing the value of the following parameters [musicSubcategory:Country & Folk]
and a follow-up test case is constructed by changing the value of the following parameters [musicSubcategory:Electronic Music]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2067 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked:showProjectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category]
and a follow-up test case is constructed by changing the value of the following parameters [projectsIHaveBacked:showProjectsIHaveNotBacked]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1511 (COMPLETE_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, raised, category, theaterSubcategory]
and a follow-up test case is constructed by adding the following parameters [goal:<$1,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$1,000 to $10,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$10,000 to $100,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$100,000 to $1,000,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:>$1,000,000 goal]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1128 (DISJOINT_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, following:showProjectsIFollow, projectsIHaveBacked, recommendedForMe, filterProjects, goal, category, danceSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [following:showProjectsIDoNotFollow]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2007 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [following, goal, location, searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, projectsIHaveBacked, raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR625 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, recommendedForMe, filterProjects, amountPledged, category, journalismSubcategory:Video]
and a follow-up test case is constructed by changing the value of the following parameters [journalismSubcategory:Audio]
and a follow-up test case is constructed by changing the value of the following parameters [journalismSubcategory:Photo]
and a follow-up test case is constructed by changing the value of the following parameters [journalismSubcategory:Print]
and a follow-up test case is constructed by changing the value of the following parameters [journalismSubcategory:Web]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1345 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, projectsIHaveBacked, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1285 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, raised, category, fashionSubcategory]
and a follow-up test case is constructed by removing the following parameters [location, projectsIHaveBacked, raised, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [fashionSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR396 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, goal, category, designSubcategory]
and a follow-up test case is constructed by adding the following parameters [following:showProjectsIFollow]
and a follow-up test case is constructed by changing the value of the following parameters [following:showProjectsIDoNotFollow]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR65 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [goal]
and a follow-up test case is constructed by removing the following parameters [location, savedProjects]
and a follow-up test case is constructed by removing the following parameters [raised]
and a follow-up test case is constructed by removing the following parameters [following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2004 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal:<$1,000 goal, category]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$1,000 to $10,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$10,000 to $100,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$100,000 to $1,000,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:>$1,000,000 goal]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1229 (DISJOINT_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects:showProjectsIHaveNotSaved, following, projectsIHaveBacked, recommendedForMe, raised, category, musicSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [savedProjects:showProjectsIHaveSaved]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1126 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, category, danceSubcategory]
and a follow-up test case is constructed by adding the following parameters [raised]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR400 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, raised, category, designSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, designSubcategory, following, goal, projectsIHaveBacked, raised]
and a follow-up test case is constructed by removing the following parameters [location, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR791 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, category, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [filterProjects, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [theaterSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR597 (DISJOINT_EXTEND):
if a source test case is run with the inputs [sortBy, projectsWeLove, following:showProjectsIDoNotFollow, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category, musicSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [following:showProjectsIFollow]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1391 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, category, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, savedProjects, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [following, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR52 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal:<$1,000 goal, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$1,000 to $10,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$10,000 to $100,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$100,000 to $1,000,000 goal]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1645 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [location, publishingSubcategory, savedProjects]
and a follow-up test case is constructed by removing the following parameters [following, goal, projectsIHaveBacked, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2098 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, raised, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [following, location, searchQuery]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2064 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, projectsIHaveBacked, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, goal]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR728 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category, danceSubcategory]
and a follow-up test case is constructed by removing the following parameters [danceSubcategory, location, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
and a follow-up test case is constructed by removing the following parameters [raised, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR743 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category, danceSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, savedProjects]
and a follow-up test case is constructed by removing the following parameters [location, raised]
and a follow-up test case is constructed by removing the following parameters [danceSubcategory, projectsIHaveBacked, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1134 (DISJOINT_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, category, danceSubcategory:Performance]
and a follow-up test case is constructed by changing the value of the following parameters [danceSubcategory:Residencies]
and a follow-up test case is constructed by changing the value of the following parameters [danceSubcategory:Spaces]
and a follow-up test case is constructed by changing the value of the following parameters [danceSubcategory:Workshops]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1252 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, category, artSubcategory]
and a follow-up test case is constructed by adding the following parameters [projectsIHaveBacked, raised]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR241 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, recommendedForMe, filterProjects, amountPledged, category, theaterSubcategory:Musical]
and a follow-up test case is constructed by changing the value of the following parameters [theaterSubcategory:Comedy]
and a follow-up test case is constructed by changing the value of the following parameters [theaterSubcategory:Experimental]
and a follow-up test case is constructed by changing the value of the following parameters [theaterSubcategory:Festivals]
and a follow-up test case is constructed by changing the value of the following parameters [theaterSubcategory:Immersive]
and a follow-up test case is constructed by changing the value of the following parameters [theaterSubcategory:Plays]
and a follow-up test case is constructed by changing the value of the following parameters [theaterSubcategory:Spaces]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR746 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked:showProjectsIHaveNotBacked, recommendedForMe, amountPledged, raised, category, danceSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [projectsIHaveBacked:showProjectsIHaveBacked]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1836 (SHUFFLING_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy:NearMe, projectsWeLove, savedProjects, recommendedForMe, amountPledged, category]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Magic]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Popularity]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Newest]
then the source and the follow-up output(s) should have the same items, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR513 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, recommendedForMe, goal, raised, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by removing the following parameters [raised]
and a follow-up test case is constructed by removing the following parameters [goal, location]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
and a follow-up test case is constructed by removing the following parameters [filmAndVideoSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1278 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, raised, category, fashionSubcategory]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [fashionSubcategory, location, raised, savedProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2137 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following:showProjectsIFollow, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, publishingSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [following:showProjectsIDoNotFollow]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR317 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, raised, category, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, location, projectsIHaveBacked, raised, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [goal]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1266 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, raised, category, fashionSubcategory]
and a follow-up test case is constructed by removing the following parameters [fashionSubcategory]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
and a follow-up test case is constructed by removing the following parameters [location, raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1456 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, foodSubcategory]
and a follow-up test case is constructed by removing the following parameters [foodSubcategory, goal]
and a follow-up test case is constructed by removing the following parameters [amountPledged, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [following, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1067 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects:showProjectsIHaveSaved, recommendedForMe, amountPledged, raised, category, musicSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [savedProjects:showProjectsIHaveNotSaved]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR922 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, location, projectsIHaveBacked, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [publishingSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1261 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, category, artSubcategory]
and a follow-up test case is constructed by adding the following parameters [raised:<75% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:75% to 100% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:>100% raised]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR537 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, fashionSubcategory]
and a follow-up test case is constructed by removing the following parameters [fashionSubcategory, filterProjects, following, goal, projectsIHaveBacked, savedProjects]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1489 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, raised, category, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, location, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [raised]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1695 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked:showProjectsIHaveBacked, recommendedForMe, filterProjects, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [projectsIHaveBacked:showProjectsIHaveNotBacked]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR776 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, raised, category, foodSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, location, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [foodSubcategory, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR560 (SHUFFLING_EXTEND):
if a source test case is run with the inputs [sortBy:Popularity, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, fashionSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Magic]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Newest]
then the source and the follow-up output(s) should have the same items, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2143 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged:<$1,000 pledged, goal, category, publishingSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$10,000 to $100,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$100,000 to $1,000,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:>$1,000,000 pledged]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1977 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category]
and a follow-up test case is constructed by removing the following parameters [filterProjects, goal]
and a follow-up test case is constructed by removing the following parameters [amountPledged, projectsIHaveBacked, searchQuery]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR873 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, filterProjects, raised, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [location, publishingSubcategory, raised, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR184 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, designSubcategory]
and a follow-up test case is constructed by removing the following parameters [designSubcategory, filterProjects, following, projectsIHaveBacked, raised, savedProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR441 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, goal, category, comicsSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, goal, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [location]
and a follow-up test case is constructed by removing the following parameters [comicsSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR236 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, recommendedForMe, filterProjects, amountPledged, category, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1419 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, recommendedForMe, filterProjects, amountPledged, goal, raised, category, fashionSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, following, goal, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [fashionSubcategory, location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1243 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, category, artSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
and a follow-up test case is constructed by removing the following parameters [artSubcategory, following, savedProjects]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1986 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [filterProjects, goal, savedProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1565 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, goal, projectsIHaveBacked, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [publishingSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR769 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, raised, category, foodSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, foodSubcategory, location, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1932 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, goal, projectsIHaveBacked, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR572 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category, musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, goal, musicSubcategory, projectsIHaveBacked, raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1467 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, foodSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [foodSubcategory, goal]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1676 (COMPLETE_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, category, comicsSubcategory]
and a follow-up test case is constructed by adding the following parameters [amountPledged:<$1,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$10,000 to $100,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$100,000 to $1,000,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:>$1,000,000 pledged]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1423 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, recommendedForMe, filterProjects, amountPledged, goal, raised, category, fashionSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, location]
and a follow-up test case is constructed by removing the following parameters [amountPledged, fashionSubcategory, searchQuery]
and a follow-up test case is constructed by removing the following parameters [raised]
and a follow-up test case is constructed by removing the following parameters [filterProjects, goal]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2002 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged:<$1,000 pledged, goal, category]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$10,000 to $100,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$100,000 to $1,000,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:>$1,000,000 pledged]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1941 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following:showProjectsIFollow, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category]
and a follow-up test case is constructed by changing the value of the following parameters [following:showProjectsIDoNotFollow]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR834 (DISJOINT_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects:liveProjects, goal, category, foodSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [filterProjects:successfulProjects]
and a follow-up test case is constructed by changing the value of the following parameters [filterProjects:upcomingProjects]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1024 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, goal, category, gamesSubcategory]
and a follow-up test case is constructed by removing the following parameters [gamesSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, goal, location, savedProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2068 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category:Theater]
and a follow-up test case is constructed by changing the value of the following parameters [category:All categories]
and a follow-up test case is constructed by changing the value of the following parameters [category:Art]
and a follow-up test case is constructed by changing the value of the following parameters [category:Comics]
and a follow-up test case is constructed by changing the value of the following parameters [category:Crafts]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1450 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, foodSubcategory]
and a follow-up test case is constructed by removing the following parameters [goal]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, foodSubcategory, projectsIHaveBacked, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1692 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects:liveProjects, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [filterProjects:successfulProjects]
and a follow-up test case is constructed by changing the value of the following parameters [filterProjects:upcomingProjects]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR315 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, raised, category, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, goal, location, raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, theaterSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR564 (DISJOINT_EXTEND):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following:showProjectsIDoNotFollow, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, fashionSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [following:showProjectsIFollow]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR484 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, goal, raised, category, craftsSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, craftsSubcategory, goal, location]
and a follow-up test case is constructed by removing the following parameters [filterProjects, savedProjects]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [raised]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1163 (DISJOINT_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following:showProjectsIFollow, projectsIHaveBacked, recommendedForMe, amountPledged, category, gamesSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [following:showProjectsIDoNotFollow]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR615 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, recommendedForMe, filterProjects, amountPledged, category, journalismSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, following, searchQuery]
and a follow-up test case is constructed by removing the following parameters [journalismSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR865 (COMPLETE_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category]
and a follow-up test case is constructed by adding the following parameters [savedProjects:showProjectsIHaveSaved]
and a follow-up test case is constructed by changing the value of the following parameters [savedProjects:showProjectsIHaveNotSaved]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1382 (DISJOINT_EXTEND):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, raised, category, designSubcategory:Architecture]
and a follow-up test case is constructed by changing the value of the following parameters [designSubcategory:Civic Design]
and a follow-up test case is constructed by changing the value of the following parameters [designSubcategory:Graphic Design]
and a follow-up test case is constructed by changing the value of the following parameters [designSubcategory:Interactive Design]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1666 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, category, comicsSubcategory]
and a follow-up test case is constructed by removing the following parameters [comicsSubcategory]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR175 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, designSubcategory]
and a follow-up test case is constructed by removing the following parameters [designSubcategory, filterProjects, projectsIHaveBacked, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR452 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, goal, category, comicsSubcategory]
and a follow-up test case is constructed by removing the following parameters [comicsSubcategory, filterProjects, following, goal, location, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR883 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, filterProjects, raised, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [raised, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects, location, publishingSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR824 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, goal, category, foodSubcategory]
and a follow-up test case is constructed by removing the following parameters [goal, projectsIHaveBacked, savedProjects]
and a follow-up test case is constructed by removing the following parameters [filterProjects, location]
and a follow-up test case is constructed by removing the following parameters [foodSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR538 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, fashionSubcategory]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following]
and a follow-up test case is constructed by removing the following parameters [fashionSubcategory, filterProjects, goal, projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1633 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [following, goal, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR416 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, raised, category, designSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, designSubcategory, following, location, projectsIHaveBacked, searchQuery]
and a follow-up test case is constructed by removing the following parameters [goal]
and a follow-up test case is constructed by removing the following parameters [raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR532 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, recommendedForMe, goal, raised, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by adding the following parameters [projectsIHaveBacked:showProjectsIHaveBacked]
and a follow-up test case is constructed by changing the value of the following parameters [projectsIHaveBacked:showProjectsIHaveNotBacked]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1084 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, goal, category, photographySubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, photographySubcategory, savedProjects]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [goal]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1385 (COMPLETE_EXTEND):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, raised, category, designSubcategory]
and a follow-up test case is constructed by adding the following parameters [goal:<$1,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$1,000 to $10,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$10,000 to $100,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$100,000 to $1,000,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:>$1,000,000 goal]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1131 (DISJOINT_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal:<$1,000 goal, category, danceSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$1,000 to $10,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$10,000 to $100,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$100,000 to $1,000,000 goal]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR470 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, goal, category, comicsSubcategory]
and a follow-up test case is constructed by adding the following parameters [projectsIHaveBacked:showProjectsIHaveBacked]
and a follow-up test case is constructed by changing the value of the following parameters [projectsIHaveBacked:showProjectsIHaveNotBacked]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1543 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, projectsIHaveBacked, publishingSubcategory, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [goal]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1748 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, raised]
and a follow-up test case is constructed by removing the following parameters [following, goal]
and a follow-up test case is constructed by removing the following parameters [filterProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR643 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, location, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [goal]
and a follow-up test case is constructed by removing the following parameters [technologySubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR18 (SHUFFLING_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy:Popularity, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Magic]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Newest]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:EndDate]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:MostFunded]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:MostBacked]
then the source and the follow-up output(s) should have the same items, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR679 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, savedProjects]
and a follow-up test case is constructed by removing the following parameters [goal]
and a follow-up test case is constructed by removing the following parameters [publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
and a follow-up test case is constructed by removing the following parameters [following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2128 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, goal, publishingSubcategory, searchQuery]
and a follow-up test case is constructed by removing the following parameters [following, location, projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1390 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, category, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, projectsIHaveBacked, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [savedProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1959 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, goal, raised]
and a follow-up test case is constructed by removing the following parameters [following, location, projectsIHaveBacked, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1734 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, category]
and a follow-up test case is constructed by adding the following parameters [amountPledged:<$1,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$10,000 to $100,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$100,000 to $1,000,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:>$1,000,000 pledged]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR677 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, goal, projectsIHaveBacked, savedProjects]
and a follow-up test case is constructed by removing the following parameters [publishingSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR561 (DISJOINT_EXTEND):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects:showProjectsIHaveSaved, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, fashionSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [savedProjects:showProjectsIHaveNotSaved]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1723 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, category]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1871 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, savedProjects]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1008 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category, artSubcategory]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, raised]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
and a follow-up test case is constructed by removing the following parameters [artSubcategory]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1202 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category, musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [location, savedProjects]
and a follow-up test case is constructed by removing the following parameters [musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1619 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, raised, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR414 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, raised, category, designSubcategory]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, raised]
and a follow-up test case is constructed by removing the following parameters [amountPledged, designSubcategory, following, goal, location]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1942 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category:Technology]
and a follow-up test case is constructed by changing the value of the following parameters [category:All categories]
and a follow-up test case is constructed by changing the value of the following parameters [category:Art]
and a follow-up test case is constructed by changing the value of the following parameters [category:Comics]
and a follow-up test case is constructed by changing the value of the following parameters [category:Crafts]
and a follow-up test case is constructed by changing the value of the following parameters [category:Dance]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR393 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects:showProjectsIHaveNotSaved, recommendedForMe, amountPledged, goal, category, designSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [savedProjects:showProjectsIHaveSaved]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR251 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, artSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
and a follow-up test case is constructed by removing the following parameters [amountPledged, artSubcategory, goal, location, projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1182 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, raised, category, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [raised]
and a follow-up test case is constructed by removing the following parameters [following, searchQuery, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR670 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, projectsIHaveBacked, savedProjects]
and a follow-up test case is constructed by removing the following parameters [goal, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1505 (DISJOINT_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following:showProjectsIFollow, recommendedForMe, amountPledged, raised, category, theaterSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [following:showProjectsIDoNotFollow]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1630 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, raised, category, publishingSubcategory]
and a follow-up test case is constructed by adding the following parameters [following:showProjectsIFollow]
and a follow-up test case is constructed by changing the value of the following parameters [following:showProjectsIDoNotFollow]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1544 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [goal, projectsIHaveBacked, searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
and a follow-up test case is constructed by removing the following parameters [publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR645 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [location, projectsIHaveBacked, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, goal]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1430 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, recommendedForMe, filterProjects, amountPledged, goal, raised, category, fashionSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, fashionSubcategory, following, goal, location, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1639 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, goal, projectsIHaveBacked, publishingSubcategory, savedProjects]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
and a follow-up test case is constructed by removing the following parameters [location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1843 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged:<$1,000 pledged, category]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$10,000 to $100,000 pledged]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR155 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category, craftsSubcategory]
and a follow-up test case is constructed by removing the following parameters [craftsSubcategory, filterProjects, following, location, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged, goal, projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1464 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, foodSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, foodSubcategory, goal, projectsIHaveBacked, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR810 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, category, theaterSubcategory]
and a follow-up test case is constructed by adding the following parameters [amountPledged:<$1,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$10,000 to $100,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$100,000 to $1,000,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:>$1,000,000 pledged]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1606 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, photographySubcategory:Nature]
and a follow-up test case is constructed by changing the value of the following parameters [photographySubcategory:Animals]
and a follow-up test case is constructed by changing the value of the following parameters [photographySubcategory:Fine Art]
and a follow-up test case is constructed by changing the value of the following parameters [photographySubcategory:People]
and a follow-up test case is constructed by changing the value of the following parameters [photographySubcategory:Photobooks]
and a follow-up test case is constructed by changing the value of the following parameters [photographySubcategory:Places]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR620 (SHUFFLING_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy:NearMe, projectsWeLove, following, recommendedForMe, filterProjects, amountPledged, category, journalismSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Magic]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Popularity]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Newest]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:EndDate]
then the source and the follow-up output(s) should have the same items, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR864 (DISJOINT_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category:All categories]
and a follow-up test case is constructed by changing the value of the following parameters [category:Art]
and a follow-up test case is constructed by changing the value of the following parameters [category:Comics]
and a follow-up test case is constructed by changing the value of the following parameters [category:Crafts]
and a follow-up test case is constructed by changing the value of the following parameters [category:Dance]
and a follow-up test case is constructed by changing the value of the following parameters [category:Design]
and a follow-up test case is constructed by changing the value of the following parameters [category:Fashion]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR110 (DISJOINT_EXTEND):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked:showProjectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [projectsIHaveBacked:showProjectsIHaveNotBacked]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR539 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, fashionSubcategory]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [fashionSubcategory, following]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, goal, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1404 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, category, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, searchQuery, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1774 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, category, photographySubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, photographySubcategory, projectsIHaveBacked, searchQuery]
and a follow-up test case is constructed by removing the following parameters [location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR439 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, goal, category, comicsSubcategory]
and a follow-up test case is constructed by removing the following parameters [comicsSubcategory, following, searchQuery]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, goal]
and a follow-up test case is constructed by removing the following parameters [location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2031 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [location, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [filterProjects, goal]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR775 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, raised, category, foodSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, foodSubcategory]
and a follow-up test case is constructed by removing the following parameters [location, raised, savedProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1061 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, raised, category, musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
and a follow-up test case is constructed by removing the following parameters [raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [musicSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1909 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects:liveProjects, amountPledged, category]
and a follow-up test case is constructed by changing the value of the following parameters [filterProjects:successfulProjects]
and a follow-up test case is constructed by changing the value of the following parameters [filterProjects:upcomingProjects]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1643 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
and a follow-up test case is constructed by removing the following parameters [goal, projectsIHaveBacked, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1089 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, goal, category, photographySubcategory]
and a follow-up test case is constructed by removing the following parameters [photographySubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
and a follow-up test case is constructed by removing the following parameters [following, savedProjects]
and a follow-up test case is constructed by removing the following parameters [goal]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR736 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category, danceSubcategory]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, raised]
and a follow-up test case is constructed by removing the following parameters [danceSubcategory]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [amountPledged, location, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2100 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, raised, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [following, location]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2121 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [goal]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, following, publishingSubcategory, searchQuery]
and a follow-up test case is constructed by removing the following parameters [location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1265 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, raised, category, fashionSubcategory]
and a follow-up test case is constructed by removing the following parameters [location, projectsIHaveBacked, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [fashionSubcategory, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1516 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, category, danceSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
and a follow-up test case is constructed by removing the following parameters [danceSubcategory, following, savedProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR904 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [filterProjects, location, projectsIHaveBacked, publishingSubcategory, raised, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1784 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, category, photographySubcategory]
and a follow-up test case is constructed by removing the following parameters [location, projectsIHaveBacked, searchQuery]
and a follow-up test case is constructed by removing the following parameters [photographySubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR908 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, location, projectsIHaveBacked, raised]
and a follow-up test case is constructed by removing the following parameters [following, publishingSubcategory, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR997 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category, artSubcategory]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [artSubcategory, raised, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR42 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filmAndVideoSubcategory, following, goal, projectsIHaveBacked, searchQuery]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR612 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, recommendedForMe, filterProjects, amountPledged, category, journalismSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects]
and a follow-up test case is constructed by removing the following parameters [journalismSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR795 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, category, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR687 (DISJOINT_EXTEND):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked:showProjectsIHaveNotBacked, recommendedForMe, amountPledged, goal, category, publishingSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [projectsIHaveBacked:showProjectsIHaveBacked]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR607 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, recommendedForMe, filterProjects, amountPledged, category, journalismSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, following, journalismSubcategory, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1059 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, raised, category, musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, raised, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [musicSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1495 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, raised, category, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [location, theaterSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1697 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by adding the following parameters [following:showProjectsIFollow]
and a follow-up test case is constructed by changing the value of the following parameters [following:showProjectsIDoNotFollow]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2054 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, goal, projectsIHaveBacked, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR51 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, filmAndVideoSubcategory:Action]
and a follow-up test case is constructed by changing the value of the following parameters [filmAndVideoSubcategory:Animation]
and a follow-up test case is constructed by changing the value of the following parameters [filmAndVideoSubcategory:Comedy]
and a follow-up test case is constructed by changing the value of the following parameters [filmAndVideoSubcategory:Documentary]
and a follow-up test case is constructed by changing the value of the following parameters [filmAndVideoSubcategory:Drama]
and a follow-up test case is constructed by changing the value of the following parameters [filmAndVideoSubcategory:Experimental]
and a follow-up test case is constructed by changing the value of the following parameters [filmAndVideoSubcategory:Family]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1787 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, category, photographySubcategory]
and a follow-up test case is constructed by adding the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR277 (COMPLETE_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, artSubcategory]
and a follow-up test case is constructed by adding the following parameters [following:showProjectsIFollow]
and a follow-up test case is constructed by changing the value of the following parameters [following:showProjectsIDoNotFollow]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR723 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category, danceSubcategory]
and a follow-up test case is constructed by removing the following parameters [danceSubcategory, location]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [raised]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1962 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [raised]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
and a follow-up test case is constructed by removing the following parameters [following, location, savedProjects]
and a follow-up test case is constructed by removing the following parameters [goal, projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR146 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category, craftsSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, goal, location, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [filterProjects, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [craftsSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1311 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, artSubcategory]
and a follow-up test case is constructed by removing the following parameters [artSubcategory, raised]
and a follow-up test case is constructed by removing the following parameters [filterProjects, location]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1339 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [following, raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1412 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects:showProjectsIHaveSaved, following, projectsIHaveBacked, recommendedForMe, amountPledged, category, technologySubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [savedProjects:showProjectsIHaveNotSaved]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1055 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, raised, category, musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [amountPledged, musicSubcategory, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1156 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, category, gamesSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, location]
and a follow-up test case is constructed by removing the following parameters [following, gamesSubcategory]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR846 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
and a follow-up test case is constructed by removing the following parameters [following, goal, location, projectsIHaveBacked, raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1259 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, category, artSubcategory:Ceramics]
and a follow-up test case is constructed by changing the value of the following parameters [artSubcategory:Conceptual Art]
and a follow-up test case is constructed by changing the value of the following parameters [artSubcategory:Digital Art]
and a follow-up test case is constructed by changing the value of the following parameters [artSubcategory:Illustration]
and a follow-up test case is constructed by changing the value of the following parameters [artSubcategory:Installations]
and a follow-up test case is constructed by changing the value of the following parameters [artSubcategory:Mixed Media]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1902 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
and a follow-up test case is constructed by removing the following parameters [location, projectsIHaveBacked, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1088 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, goal, category, photographySubcategory]
and a follow-up test case is constructed by removing the following parameters [following, goal, savedProjects]
and a follow-up test case is constructed by removing the following parameters [amountPledged, photographySubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2138 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal:<$1,000 goal, category, publishingSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$1,000 to $10,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$10,000 to $100,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$100,000 to $1,000,000 goal]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR911 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1922 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, projectsIHaveBacked, raised, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged, goal]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1468 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, foodSubcategory]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, searchQuery]
and a follow-up test case is constructed by removing the following parameters [following, foodSubcategory]
and a follow-up test case is constructed by removing the following parameters [goal]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1984 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [amountPledged, savedProjects]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
and a follow-up test case is constructed by removing the following parameters [goal]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1337 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, projectsIHaveBacked, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR502 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged:<$1,000 pledged, goal, raised, category, craftsSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR970 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, category, journalismSubcategory]
and a follow-up test case is constructed by removing the following parameters [journalismSubcategory, location]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR363 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal:<$1,000 goal, raised, category, journalismSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$1,000 to $10,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$10,000 to $100,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$100,000 to $1,000,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:>$1,000,000 goal]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR707 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, gamesSubcategory]
and a follow-up test case is constructed by removing the following parameters [raised]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, gamesSubcategory, searchQuery]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1455 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, foodSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, goal, projectsIHaveBacked, searchQuery]
and a follow-up test case is constructed by removing the following parameters [foodSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR758 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, raised, category, foodSubcategory]
and a follow-up test case is constructed by removing the following parameters [foodSubcategory, location, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1497 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, raised, category, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [savedProjects, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, location, raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1172 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, raised, category, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [following, location, raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [filterProjects, searchQuery, technologySubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1449 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, recommendedForMe, filterProjects, amountPledged, goal, raised, category, fashionSubcategory]
and a follow-up test case is constructed by adding the following parameters [savedProjects:showProjectsIHaveSaved]
and a follow-up test case is constructed by changing the value of the following parameters [savedProjects:showProjectsIHaveNotSaved]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2073 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal:<$1,000 goal, raised, category]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$1,000 to $10,000 goal]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1917 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [raised]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, following, goal, projectsIHaveBacked, savedProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR752 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category, danceSubcategory]
and a follow-up test case is constructed by adding the following parameters [following:showProjectsIFollow]
and a follow-up test case is constructed by changing the value of the following parameters [following:showProjectsIDoNotFollow]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1778 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, category, photographySubcategory]
and a follow-up test case is constructed by removing the following parameters [location, photographySubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, projectsIHaveBacked, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1451 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, foodSubcategory]
and a follow-up test case is constructed by removing the following parameters [goal]
and a follow-up test case is constructed by removing the following parameters [following, foodSubcategory, projectsIHaveBacked, searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1038 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, goal, category, gamesSubcategory]
and a follow-up test case is constructed by removing the following parameters [goal]
and a follow-up test case is constructed by removing the following parameters [amountPledged, gamesSubcategory, location, savedProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR487 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, goal, raised, category, craftsSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, craftsSubcategory, filterProjects, following, goal, location, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1110 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, category, danceSubcategory]
and a follow-up test case is constructed by removing the following parameters [danceSubcategory, filterProjects, following, location, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [goal]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1434 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, recommendedForMe, filterProjects, amountPledged, goal, raised, category, fashionSubcategory]
and a follow-up test case is constructed by removing the following parameters [goal, location]
and a follow-up test case is constructed by removing the following parameters [amountPledged, fashionSubcategory, filterProjects, following, raised, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1418 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, recommendedForMe, filterProjects, amountPledged, goal, raised, category, fashionSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, fashionSubcategory, filterProjects, following, goal, location, searchQuery]
and a follow-up test case is constructed by removing the following parameters [raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR921 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
and a follow-up test case is constructed by removing the following parameters [following, projectsIHaveBacked, publishingSubcategory, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1994 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, goal]
and a follow-up test case is constructed by removing the following parameters [savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR794 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, category, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [searchQuery, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, projectsIHaveBacked, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1920 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, following, goal, raised, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR362 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects:showProjectsIHaveNotSaved, following, projectsIHaveBacked, recommendedForMe, goal, raised, category, journalismSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [savedProjects:showProjectsIHaveSaved]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR711 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects:liveProjects, raised, category, gamesSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [filterProjects:successfulProjects]
and a follow-up test case is constructed by changing the value of the following parameters [filterProjects:upcomingProjects]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR507 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, recommendedForMe, goal, raised, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by removing the following parameters [filmAndVideoSubcategory, location, searchQuery]
and a follow-up test case is constructed by removing the following parameters [goal]
and a follow-up test case is constructed by removing the following parameters [raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2160 (DISJOINT_EXTEND):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, raised:<75% raised, category]
and a follow-up test case is constructed by changing the value of the following parameters [raised:75% to 100% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:>100% raised]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR876 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, filterProjects, raised, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [location, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects, raised]
and a follow-up test case is constructed by removing the following parameters [publishingSubcategory, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1903 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, location, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR432 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, amountPledged:<$1,000 pledged, goal, raised, category, designSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$10,000 to $100,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$100,000 to $1,000,000 pledged]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1899 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, location]
and a follow-up test case is constructed by removing the following parameters [filterProjects, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1882 (DISJOINT_EXTEND):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged:<$1,000 pledged, category]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$10,000 to $100,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$100,000 to $1,000,000 pledged]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1897 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
and a follow-up test case is constructed by removing the following parameters [filterProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [location, projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1745 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, goal]
and a follow-up test case is constructed by removing the following parameters [raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1985 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [filterProjects, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [goal]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR401 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, raised, category, designSubcategory]
and a follow-up test case is constructed by removing the following parameters [designSubcategory, projectsIHaveBacked, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [location]
and a follow-up test case is constructed by removing the following parameters [goal]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1894 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [location, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR26 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category]
and a follow-up test case is constructed by adding the following parameters [goal:<$1,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$1,000 to $10,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$10,000 to $100,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$100,000 to $1,000,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:>$1,000,000 goal]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR596 (DISJOINT_EXTEND):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked:showProjectsIHaveNotBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category, musicSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [projectsIHaveBacked:showProjectsIHaveBacked]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2154 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, raised, category]
and a follow-up test case is constructed by removing the following parameters [following, savedProjects]
and a follow-up test case is constructed by removing the following parameters [raised]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR336 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, raised, category, journalismSubcategory]
and a follow-up test case is constructed by removing the following parameters [goal, journalismSubcategory, location, projectsIHaveBacked, raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
and a follow-up test case is constructed by removing the following parameters [following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR916 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, projectsIHaveBacked, publishingSubcategory, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [following, location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2134 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, following, goal, projectsIHaveBacked, publishingSubcategory, searchQuery]
and a follow-up test case is constructed by removing the following parameters [location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR220 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, recommendedForMe, filterProjects, amountPledged, category, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following]
and a follow-up test case is constructed by removing the following parameters [filterProjects, searchQuery, theaterSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR721 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category, danceSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, danceSubcategory, location, projectsIHaveBacked, raised, savedProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR694 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, gamesSubcategory]
and a follow-up test case is constructed by removing the following parameters [raised]
and a follow-up test case is constructed by removing the following parameters [gamesSubcategory, searchQuery]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [filterProjects, projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1241 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, category, artSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [artSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1797 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, category, photographySubcategory]
and a follow-up test case is constructed by adding the following parameters [amountPledged:<$1,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$10,000 to $100,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$100,000 to $1,000,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:>$1,000,000 pledged]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR300 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked:showProjectsIHaveBacked, recommendedForMe, category, musicSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [projectsIHaveBacked:showProjectsIHaveNotBacked]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR796 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, category, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1827 (DISJOINT_EXTEND):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category, publishingSubcategory:Academic]
and a follow-up test case is constructed by changing the value of the following parameters [publishingSubcategory:Anthologies]
and a follow-up test case is constructed by changing the value of the following parameters [publishingSubcategory:Art Books]
and a follow-up test case is constructed by changing the value of the following parameters [publishingSubcategory:Calendars]
and a follow-up test case is constructed by changing the value of the following parameters [publishingSubcategory:Children's Books]
and a follow-up test case is constructed by changing the value of the following parameters [publishingSubcategory:Comedy]
and a follow-up test case is constructed by changing the value of the following parameters [publishingSubcategory:Fiction]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR142 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category, craftsSubcategory]
and a follow-up test case is constructed by removing the following parameters [goal, searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged, craftsSubcategory, filterProjects, following, location, projectsIHaveBacked, raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1688 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by removing the following parameters [filmAndVideoSubcategory, filterProjects, location, searchQuery]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2036 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged:<$1,000 pledged, goal, raised, category]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$10,000 to $100,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$100,000 to $1,000,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:>$1,000,000 pledged]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2009 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, following, location, searchQuery]
and a follow-up test case is constructed by removing the following parameters [goal, projectsIHaveBacked, raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR419 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, raised, category, designSubcategory]
and a follow-up test case is constructed by removing the following parameters [designSubcategory, goal, projectsIHaveBacked, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR435 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, goal, category, comicsSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, comicsSubcategory, filterProjects, following, goal, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1737 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [goal, raised]
and a follow-up test case is constructed by removing the following parameters [following, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1181 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, raised, category, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [following, location, raised, savedProjects, searchQuery, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR179 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, designSubcategory]
and a follow-up test case is constructed by removing the following parameters [designSubcategory, filterProjects, following, savedProjects]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
and a follow-up test case is constructed by removing the following parameters [raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR359 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked:showProjectsIHaveNotBacked, recommendedForMe, goal, raised, category, journalismSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [projectsIHaveBacked:showProjectsIHaveBacked]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1859 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, category]
and a follow-up test case is constructed by adding the following parameters [danceSubcategory, raised]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR34 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [filmAndVideoSubcategory, following, goal, savedProjects]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR258 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, artSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, location, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [artSubcategory, goal]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1512 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, category, danceSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, danceSubcategory, following, savedProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR467 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, goal:<$1,000 goal, category, comicsSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$1,000 to $10,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$10,000 to $100,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$100,000 to $1,000,000 goal]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR511 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, recommendedForMe, goal, raised, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by removing the following parameters [location, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filmAndVideoSubcategory, goal]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1204 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category, musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, location, musicSubcategory, projectsIHaveBacked, savedProjects]
and a follow-up test case is constructed by removing the following parameters [raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR681 (SHUFFLING_EXTEND):
if a source test case is run with the inputs [sortBy:NearMe, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, publishingSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Magic]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Popularity]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Newest]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:EndDate]
then the source and the follow-up output(s) should have the same items, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2017 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, goal, location, projectsIHaveBacked, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR212 (DISJOINT_EXTEND):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects:showProjectsIHaveSaved, projectsIHaveBacked, recommendedForMe, category, craftsSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [savedProjects:showProjectsIHaveNotSaved]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1562 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, goal, projectsIHaveBacked, publishingSubcategory, savedProjects]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR919 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, location, searchQuery]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, publishingSubcategory, raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1314 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, artSubcategory]
and a follow-up test case is constructed by removing the following parameters [artSubcategory, filterProjects, location, projectsIHaveBacked, raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1833 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, category]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [amountPledged, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR120 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, category]
and a follow-up test case is constructed by removing the following parameters [savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged, location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR242 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, recommendedForMe, filterProjects:liveProjects, amountPledged, category, theaterSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [filterProjects:successfulProjects]
and a follow-up test case is constructed by changing the value of the following parameters [filterProjects:upcomingProjects]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1924 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, goal, savedProjects]
and a follow-up test case is constructed by removing the following parameters [amountPledged, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR101 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [following, savedProjects]
and a follow-up test case is constructed by removing the following parameters [filmAndVideoSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR325 (DISJOINT_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, raised, category, theaterSubcategory:Musical]
and a follow-up test case is constructed by changing the value of the following parameters [theaterSubcategory:Comedy]
and a follow-up test case is constructed by changing the value of the following parameters [theaterSubcategory:Experimental]
and a follow-up test case is constructed by changing the value of the following parameters [theaterSubcategory:Festivals]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR403 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, raised, category, designSubcategory]
and a follow-up test case is constructed by removing the following parameters [goal, location]
and a follow-up test case is constructed by removing the following parameters [following, projectsIHaveBacked, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged, designSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1187 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, raised, category, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
and a follow-up test case is constructed by removing the following parameters [location, raised, savedProjects, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [following, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1429 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, recommendedForMe, filterProjects, amountPledged, goal, raised, category, fashionSubcategory]
and a follow-up test case is constructed by removing the following parameters [fashionSubcategory, raised]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, goal]
and a follow-up test case is constructed by removing the following parameters [following, searchQuery]
and a follow-up test case is constructed by removing the following parameters [location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR100 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by removing the following parameters [filmAndVideoSubcategory, savedProjects]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, following, projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR157 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category, craftsSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, projectsIHaveBacked, searchQuery]
and a follow-up test case is constructed by removing the following parameters [craftsSubcategory, following, goal]
and a follow-up test case is constructed by removing the following parameters [amountPledged, location, raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1609 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, raised, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, publishingSubcategory, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1835 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
and a follow-up test case is constructed by removing the following parameters [savedProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1735 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, goal, projectsIHaveBacked, searchQuery]
and a follow-up test case is constructed by removing the following parameters [raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1809 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [goal, projectsIHaveBacked, publishingSubcategory, raised]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR473 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, goal, raised, category, craftsSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [craftsSubcategory, following, goal, location, searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1372 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, raised, category, designSubcategory]
and a follow-up test case is constructed by removing the following parameters [designSubcategory, following, raised]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1761 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised:<75% raised, category]
and a follow-up test case is constructed by changing the value of the following parameters [raised:75% to 100% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:>100% raised]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1296 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, raised, category, fashionSubcategory]
and a follow-up test case is constructed by adding the following parameters [goal:<$1,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$1,000 to $10,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$10,000 to $100,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$100,000 to $1,000,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:>$1,000,000 goal]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1818 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, goal, publishingSubcategory, raised]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1140 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, category, gamesSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, gamesSubcategory, location, savedProjects]
and a follow-up test case is constructed by removing the following parameters [amountPledged, projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR975 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, category, journalismSubcategory]
and a follow-up test case is constructed by removing the following parameters [journalismSubcategory, location, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR535 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, fashionSubcategory]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [filterProjects, goal]
and a follow-up test case is constructed by removing the following parameters [fashionSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR22 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, raised:<75% raised, category]
and a follow-up test case is constructed by changing the value of the following parameters [raised:75% to 100% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:>100% raised]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR647 (SHUFFLING_EXTEND):
if a source test case is run with the inputs [location, sortBy:Popularity, projectsWeLove, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, technologySubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Magic]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Newest]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:EndDate]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:MostFunded]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:MostBacked]
then the source and the follow-up output(s) should have the same items, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2046 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, goal, raised]
and a follow-up test case is constructed by removing the following parameters [amountPledged, projectsIHaveBacked, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR483 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, goal, raised, category, craftsSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, craftsSubcategory, following, goal]
and a follow-up test case is constructed by removing the following parameters [filterProjects, location, raised, savedProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1681 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by removing the following parameters [location, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
and a follow-up test case is constructed by removing the following parameters [filmAndVideoSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR842 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [goal, location, projectsIHaveBacked, raised]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2114 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, goal, location, projectsIHaveBacked, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR388 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, goal, category, designSubcategory]
and a follow-up test case is constructed by removing the following parameters [goal, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [location]
and a follow-up test case is constructed by removing the following parameters [amountPledged, designSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1522 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, category, danceSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
and a follow-up test case is constructed by removing the following parameters [danceSubcategory, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR377 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, goal, category, designSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [goal, location]
and a follow-up test case is constructed by removing the following parameters [designSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1710 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, recommendedForMe, filterProjects, category, fashionSubcategory]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [fashionSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1823 (DISJOINT_EXTEND):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects:liveProjects, goal, raised, category, publishingSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [filterProjects:successfulProjects]
and a follow-up test case is constructed by changing the value of the following parameters [filterProjects:upcomingProjects]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1058 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, raised, category, musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [musicSubcategory, savedProjects]
and a follow-up test case is constructed by removing the following parameters [amountPledged, raised, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR945 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category, comicsSubcategory]
and a follow-up test case is constructed by removing the following parameters [comicsSubcategory, following, raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1373 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, raised, category, designSubcategory]
and a follow-up test case is constructed by removing the following parameters [designSubcategory, following, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR944 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category, comicsSubcategory]
and a follow-up test case is constructed by removing the following parameters [comicsSubcategory, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [following, projectsIHaveBacked, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1130 (DISJOINT_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, following, projectsIHaveBacked:showProjectsIHaveBacked, recommendedForMe, filterProjects, goal, category, danceSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [projectsIHaveBacked:showProjectsIHaveNotBacked]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR884 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, filterProjects, raised, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [location, raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1589 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, photographySubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, location, savedProjects]
and a follow-up test case is constructed by removing the following parameters [photographySubcategory, projectsIHaveBacked, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2045 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
and a follow-up test case is constructed by removing the following parameters [amountPledged, projectsIHaveBacked, searchQuery]
and a follow-up test case is constructed by removing the following parameters [goal, raised]
and a follow-up test case is constructed by removing the following parameters [following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR655 (COMPLETE_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, technologySubcategory]
and a follow-up test case is constructed by adding the following parameters [raised:<75% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:75% to 100% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:>100% raised]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1200 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, raised, category, technologySubcategory]
and a follow-up test case is constructed by adding the following parameters [goal:<$1,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$1,000 to $10,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$10,000 to $100,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$100,000 to $1,000,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:>$1,000,000 goal]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR992 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category, artSubcategory]
and a follow-up test case is constructed by removing the following parameters [artSubcategory, following, projectsIHaveBacked, raised, savedProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1517 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, category, danceSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, danceSubcategory, following, savedProjects]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR964 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category, comicsSubcategory]
and a follow-up test case is constructed by adding the following parameters [amountPledged:<$1,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$10,000 to $100,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$100,000 to $1,000,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:>$1,000,000 pledged]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR792 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, category, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, savedProjects, theaterSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1328 (DISJOINT_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised:<75% raised, category, artSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [raised:75% to 100% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:>100% raised]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR955 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category, comicsSubcategory]
and a follow-up test case is constructed by removing the following parameters [savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [comicsSubcategory, following, projectsIHaveBacked, raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1662 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, category, publishingSubcategory]
and a follow-up test case is constructed by adding the following parameters [raised:<75% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:75% to 100% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:>100% raised]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR485 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, goal, raised, category, craftsSubcategory]
and a follow-up test case is constructed by removing the following parameters [location]
and a follow-up test case is constructed by removing the following parameters [amountPledged, craftsSubcategory, filterProjects, following, goal, raised, savedProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1232 (DISJOINT_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category, musicSubcategory:Jazz]
and a follow-up test case is constructed by changing the value of the following parameters [musicSubcategory:Blues]
and a follow-up test case is constructed by changing the value of the following parameters [musicSubcategory:Chiptune]
and a follow-up test case is constructed by changing the value of the following parameters [musicSubcategory:Classical Music]
and a follow-up test case is constructed by changing the value of the following parameters [musicSubcategory:Comedy]
and a follow-up test case is constructed by changing the value of the following parameters [musicSubcategory:Country & Folk]
and a follow-up test case is constructed by changing the value of the following parameters [musicSubcategory:Electronic Music]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR405 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, raised, category, designSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, designSubcategory, following, projectsIHaveBacked, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [location]
and a follow-up test case is constructed by removing the following parameters [goal]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR28 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filmAndVideoSubcategory, following, goal, projectsIHaveBacked, savedProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR329 (DISJOINT_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects:showProjectsIHaveSaved, following, projectsIHaveBacked, recommendedForMe, goal, raised, category, theaterSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [savedProjects:showProjectsIHaveNotSaved]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1361 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked:showProjectsIHaveNotBacked, recommendedForMe, amountPledged, raised, category]
and a follow-up test case is constructed by changing the value of the following parameters [projectsIHaveBacked:showProjectsIHaveBacked]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR370 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, goal, category, designSubcategory]
and a follow-up test case is constructed by removing the following parameters [designSubcategory, savedProjects]
and a follow-up test case is constructed by removing the following parameters [amountPledged, goal, searchQuery]
and a follow-up test case is constructed by removing the following parameters [location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR702 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, gamesSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, gamesSubcategory, projectsIHaveBacked, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2115 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, location]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [goal, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1480 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following:showProjectsIFollow, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, foodSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [following:showProjectsIDoNotFollow]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1304 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, artSubcategory]
and a follow-up test case is constructed by removing the following parameters [artSubcategory, filterProjects, projectsIHaveBacked, raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [following, location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1341 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [amountPledged, raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1486 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, raised, category, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, location, raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [following, theaterSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR871 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, filterProjects, raised, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, location, publishingSubcategory, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR353 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, raised, category, journalismSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, goal]
and a follow-up test case is constructed by removing the following parameters [journalismSubcategory, projectsIHaveBacked, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [location, raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR218 (COMPLETE_EXTEND):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, category, craftsSubcategory]
and a follow-up test case is constructed by adding the following parameters [amountPledged:<$1,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$10,000 to $100,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$100,000 to $1,000,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:>$1,000,000 pledged]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR859 (DISJOINT_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, following:showProjectsIFollow, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category]
and a follow-up test case is constructed by changing the value of the following parameters [following:showProjectsIDoNotFollow]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1945 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, goal, location, raised, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR221 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, recommendedForMe, filterProjects, amountPledged, category, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following]
and a follow-up test case is constructed by removing the following parameters [filterProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [theaterSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1554 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [goal, publishingSubcategory, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1042 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects:showProjectsIHaveSaved, recommendedForMe, amountPledged, goal, category, gamesSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [savedProjects:showProjectsIHaveNotSaved]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR666 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, goal, projectsIHaveBacked, publishingSubcategory, savedProjects]
and a follow-up test case is constructed by removing the following parameters [following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR762 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, raised, category, foodSubcategory]
and a follow-up test case is constructed by removing the following parameters [location]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, foodSubcategory, raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1380 (DISJOINT_EXTEND):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, raised:<75% raised, category, designSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [raised:75% to 100% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:>100% raised]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1755 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [filterProjects, goal, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR123 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, location]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR695 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, gamesSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, gamesSubcategory, projectsIHaveBacked, raised]
and a follow-up test case is constructed by removing the following parameters [filterProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR503 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, goal, raised:<75% raised, category, craftsSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [raised:75% to 100% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:>100% raised]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1120 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, category, danceSubcategory]
and a follow-up test case is constructed by removing the following parameters [danceSubcategory, filterProjects, goal, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [following, location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1496 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, raised, category, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, location, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [raised]
and a follow-up test case is constructed by removing the following parameters [following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR291 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, category, musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, location, projectsIHaveBacked, savedProjects]
and a follow-up test case is constructed by removing the following parameters [musicSubcategory, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR306 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, raised, category, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [goal, savedProjects]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, raised]
and a follow-up test case is constructed by removing the following parameters [following, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1703 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, recommendedForMe, filterProjects, category, fashionSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, searchQuery]
and a follow-up test case is constructed by removing the following parameters [fashionSubcategory, filterProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1274 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, raised, category, fashionSubcategory]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [raised]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
and a follow-up test case is constructed by removing the following parameters [location]
and a follow-up test case is constructed by removing the following parameters [fashionSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR409 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, raised, category, designSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, raised]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [designSubcategory, location]
and a follow-up test case is constructed by removing the following parameters [goal]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR307 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, raised, category, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, goal, raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [location, projectsIHaveBacked, theaterSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1086 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, goal, category, photographySubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, savedProjects]
and a follow-up test case is constructed by removing the following parameters [following, goal]
and a follow-up test case is constructed by removing the following parameters [photographySubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR345 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, raised, category, journalismSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, raised]
and a follow-up test case is constructed by removing the following parameters [journalismSubcategory, location, projectsIHaveBacked, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [goal]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR399 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, raised, category, designSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, designSubcategory, following, projectsIHaveBacked, raised]
and a follow-up test case is constructed by removing the following parameters [location, searchQuery]
and a follow-up test case is constructed by removing the following parameters [goal]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1143 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, category, gamesSubcategory]
and a follow-up test case is constructed by removing the following parameters [gamesSubcategory]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, location, projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR995 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category, artSubcategory]
and a follow-up test case is constructed by removing the following parameters [artSubcategory]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [following, projectsIHaveBacked, raised, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1595 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, photographySubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, location, projectsIHaveBacked, raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
and a follow-up test case is constructed by removing the following parameters [photographySubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1397 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, category, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, searchQuery]
and a follow-up test case is constructed by removing the following parameters [savedProjects, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [following, projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1653 (SHUFFLING_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy:Popularity, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, category, publishingSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Magic]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Newest]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:EndDate]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:MostFunded]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:MostBacked]
then the source and the follow-up output(s) should have the same items, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1485 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, raised, category, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, location]
and a follow-up test case is constructed by removing the following parameters [raised, savedProjects, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR137 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category, craftsSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, searchQuery]
and a follow-up test case is constructed by removing the following parameters [craftsSubcategory, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [goal, raised]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
and a follow-up test case is constructed by removing the following parameters [location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1651 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, goal, projectsIHaveBacked, publishingSubcategory, searchQuery]
and a follow-up test case is constructed by removing the following parameters [location]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1443 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, recommendedForMe, filterProjects, amountPledged, goal:<$1,000 goal, raised, category, fashionSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$1,000 to $10,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$10,000 to $100,000 goal]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1079 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, goal, category, photographySubcategory]
and a follow-up test case is constructed by removing the following parameters [goal]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, photographySubcategory]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2012 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, following, goal, projectsIHaveBacked, raised]
and a follow-up test case is constructed by removing the following parameters [location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1905 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged:<$1,000 pledged, category]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$10,000 to $100,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$100,000 to $1,000,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:>$1,000,000 pledged]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR68 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [following, goal, location, raised]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1518 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, category, danceSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, danceSubcategory, following]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1918 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [goal, searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
and a follow-up test case is constructed by removing the following parameters [raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1384 (COMPLETE_EXTEND):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, raised, category, designSubcategory]
and a follow-up test case is constructed by adding the following parameters [amountPledged:<$1,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$10,000 to $100,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$100,000 to $1,000,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:>$1,000,000 pledged]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1334 (COMPLETE_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, artSubcategory]
and a follow-up test case is constructed by adding the following parameters [amountPledged:<$1,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$10,000 to $100,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$100,000 to $1,000,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:>$1,000,000 pledged]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR284 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, category, musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [following, location, musicSubcategory, searchQuery]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1445 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, recommendedForMe, filterProjects:liveProjects, amountPledged, goal, raised, category, fashionSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [filterProjects:successfulProjects]
and a follow-up test case is constructed by changing the value of the following parameters [filterProjects:upcomingProjects]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1901 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, category]
and a follow-up test case is constructed by removing the following parameters [location, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR265 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, artSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, artSubcategory, filterProjects, location, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [goal]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1816 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, publishingSubcategory, raised]
and a follow-up test case is constructed by removing the following parameters [goal]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1145 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, category, gamesSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
and a follow-up test case is constructed by removing the following parameters [following, gamesSubcategory, projectsIHaveBacked, savedProjects]
and a follow-up test case is constructed by removing the following parameters [location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1851 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, category]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1668 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, category, comicsSubcategory]
and a follow-up test case is constructed by removing the following parameters [location]
and a follow-up test case is constructed by removing the following parameters [comicsSubcategory, projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1955 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
and a follow-up test case is constructed by removing the following parameters [following, raised]
and a follow-up test case is constructed by removing the following parameters [goal, location, savedProjects]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR173 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category, craftsSubcategory]
and a follow-up test case is constructed by adding the following parameters [savedProjects:showProjectsIHaveSaved]
and a follow-up test case is constructed by changing the value of the following parameters [savedProjects:showProjectsIHaveNotSaved]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1294 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, raised, category, fashionSubcategory]
and a follow-up test case is constructed by adding the following parameters [following:showProjectsIFollow]
and a follow-up test case is constructed by changing the value of the following parameters [following:showProjectsIDoNotFollow]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1132 (DISJOINT_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects:liveProjects, goal, category, danceSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [filterProjects:successfulProjects]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1780 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, category, photographySubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [location, photographySubcategory, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR181 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, designSubcategory]
and a follow-up test case is constructed by removing the following parameters [designSubcategory, following, projectsIHaveBacked, raised, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1954 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [goal, raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [following, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [location]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1047 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, goal, category, gamesSubcategory]
and a follow-up test case is constructed by adding the following parameters [following:showProjectsIFollow]
and a follow-up test case is constructed by changing the value of the following parameters [following:showProjectsIDoNotFollow]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR534 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, fashionSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following]
and a follow-up test case is constructed by removing the following parameters [amountPledged, fashionSubcategory, goal, projectsIHaveBacked, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1162 (DISJOINT_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects:showProjectsIHaveNotSaved, following, projectsIHaveBacked, recommendedForMe, amountPledged, category, gamesSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [savedProjects:showProjectsIHaveSaved]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR660 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, publishingSubcategory, savedProjects]
and a follow-up test case is constructed by removing the following parameters [amountPledged, goal, projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1881 (DISJOINT_EXTEND):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following:showProjectsIFollow, projectsIHaveBacked, recommendedForMe, amountPledged, category]
and a follow-up test case is constructed by changing the value of the following parameters [following:showProjectsIDoNotFollow]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1730 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked:showProjectsIHaveNotBacked, recommendedForMe, category]
and a follow-up test case is constructed by changing the value of the following parameters [projectsIHaveBacked:showProjectsIHaveBacked]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1821 (DISJOINT_EXTEND):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked:showProjectsIHaveNotBacked, recommendedForMe, filterProjects, goal, raised, category, publishingSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [projectsIHaveBacked:showProjectsIHaveBacked]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR25 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category]
and a follow-up test case is constructed by adding the following parameters [following:showProjectsIFollow]
and a follow-up test case is constructed by changing the value of the following parameters [following:showProjectsIDoNotFollow]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1663 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, category, publishingSubcategory]
and a follow-up test case is constructed by adding the following parameters [amountPledged:<$1,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$10,000 to $100,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$100,000 to $1,000,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:>$1,000,000 pledged]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2119 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, following, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [location, publishingSubcategory, searchQuery]
and a follow-up test case is constructed by removing the following parameters [goal]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2037 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal:<$1,000 goal, raised, category]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$1,000 to $10,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$10,000 to $100,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$100,000 to $1,000,000 goal]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR167 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following:showProjectsIFollow, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category, craftsSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [following:showProjectsIDoNotFollow]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR886 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, filterProjects, raised, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [location, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR254 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, artSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, location]
and a follow-up test case is constructed by removing the following parameters [goal]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [artSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1756 (SHUFFLING_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy:NearMe, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Magic]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Popularity]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Newest]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:EndDate]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:MostFunded]
then the source and the follow-up output(s) should have the same items, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR380 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, goal, category, designSubcategory]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
and a follow-up test case is constructed by removing the following parameters [designSubcategory, savedProjects]
and a follow-up test case is constructed by removing the following parameters [goal, location]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1509 (DISJOINT_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged:<$1,000 pledged, raised, category, theaterSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$10,000 to $100,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$100,000 to $1,000,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:>$1,000,000 pledged]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR111 (DISJOINT_EXTEND):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following:showProjectsIDoNotFollow, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [following:showProjectsIFollow]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR147 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category, craftsSubcategory]
and a follow-up test case is constructed by removing the following parameters [craftsSubcategory, filterProjects, following, projectsIHaveBacked, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
and a follow-up test case is constructed by removing the following parameters [goal, location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR247 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, recommendedForMe, filterProjects, amountPledged, category, theaterSubcategory]
and a follow-up test case is constructed by adding the following parameters [goal:<$1,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$1,000 to $10,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$10,000 to $100,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$100,000 to $1,000,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:>$1,000,000 goal]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR880 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, filterProjects, raised, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, location, raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1032 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, goal, category, gamesSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, location, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [gamesSubcategory]
and a follow-up test case is constructed by removing the following parameters [goal]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR700 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, gamesSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, gamesSubcategory, projectsIHaveBacked, raised]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1226 (DISJOINT_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following:showProjectsIDoNotFollow, projectsIHaveBacked, recommendedForMe, raised, category, musicSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [following:showProjectsIFollow]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR571 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category, musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, goal, musicSubcategory, projectsIHaveBacked, raised]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR207 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, category, craftsSubcategory]
and a follow-up test case is constructed by removing the following parameters [craftsSubcategory]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1197 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects:liveProjects, raised, category, technologySubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [filterProjects:successfulProjects]
and a follow-up test case is constructed by changing the value of the following parameters [filterProjects:upcomingProjects]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR185 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, designSubcategory]
and a follow-up test case is constructed by removing the following parameters [designSubcategory, projectsIHaveBacked, raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1206 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category, musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, location, savedProjects]
and a follow-up test case is constructed by removing the following parameters [musicSubcategory, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1892 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, location, projectsIHaveBacked, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1426 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, recommendedForMe, filterProjects, amountPledged, goal, raised, category, fashionSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, fashionSubcategory, filterProjects, following, goal, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1608 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, photographySubcategory]
and a follow-up test case is constructed by adding the following parameters [goal:<$1,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$1,000 to $10,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$10,000 to $100,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$100,000 to $1,000,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:>$1,000,000 goal]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1786 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, category, photographySubcategory]
and a follow-up test case is constructed by adding the following parameters [goal]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR395 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged:<$1,000 pledged, goal, category, designSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$10,000 to $100,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$100,000 to $1,000,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:>$1,000,000 pledged]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1447 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, recommendedForMe, filterProjects, amountPledged, goal, raised, category, fashionSubcategory:Accessories]
and a follow-up test case is constructed by changing the value of the following parameters [fashionSubcategory:Apparel]
and a follow-up test case is constructed by changing the value of the following parameters [fashionSubcategory:Childrenswear]
and a follow-up test case is constructed by changing the value of the following parameters [fashionSubcategory:Couture]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1877 (SHUFFLING_EXTEND):
if a source test case is run with the inputs [sortBy:NearMe, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, category]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Magic]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Popularity]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Newest]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:EndDate]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:MostFunded]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:MostBacked]
then the source and the follow-up output(s) should have the same items, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR104 (SHUFFLING_EXTEND):
if a source test case is run with the inputs [sortBy:NearMe, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Magic]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Popularity]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Newest]
then the source and the follow-up output(s) should have the same items, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1260 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, category, artSubcategory]
and a follow-up test case is constructed by adding the following parameters [projectsIHaveBacked:showProjectsIHaveBacked]
and a follow-up test case is constructed by changing the value of the following parameters [projectsIHaveBacked:showProjectsIHaveNotBacked]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR136 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category, craftsSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, craftsSubcategory, following, goal, location, projectsIHaveBacked, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1813 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, goal, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1081 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, goal, category, photographySubcategory]
and a follow-up test case is constructed by removing the following parameters [goal, photographySubcategory, savedProjects]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2053 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [goal, projectsIHaveBacked, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
and a follow-up test case is constructed by removing the following parameters [following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR438 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, goal, category, comicsSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, comicsSubcategory, filterProjects, following, goal, location, savedProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1839 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects:showProjectsIHaveNotSaved, recommendedForMe, amountPledged, category]
and a follow-up test case is constructed by changing the value of the following parameters [savedProjects:showProjectsIHaveSaved]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1057 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, raised, category, musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, musicSubcategory, raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1298 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, artSubcategory]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [artSubcategory, following, location]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR725 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category, danceSubcategory]
and a follow-up test case is constructed by removing the following parameters [location]
and a follow-up test case is constructed by removing the following parameters [raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [danceSubcategory]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1414 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following:showProjectsIDoNotFollow, projectsIHaveBacked, recommendedForMe, amountPledged, category, technologySubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [following:showProjectsIFollow]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1846 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, category]
and a follow-up test case is constructed by adding the following parameters [raised:<75% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:75% to 100% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:>100% raised]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR777 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, raised, category, foodSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, foodSubcategory, location, searchQuery]
and a follow-up test case is constructed by removing the following parameters [following, raised, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR187 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, designSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, raised, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [designSubcategory, filterProjects]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1037 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, goal, category, gamesSubcategory]
and a follow-up test case is constructed by removing the following parameters [location, savedProjects]
and a follow-up test case is constructed by removing the following parameters [goal]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
and a follow-up test case is constructed by removing the following parameters [gamesSubcategory]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1830 (COMPLETE_EXTEND):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category, publishingSubcategory]
and a follow-up test case is constructed by adding the following parameters [amountPledged:<$1,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$10,000 to $100,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$100,000 to $1,000,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:>$1,000,000 pledged]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1982 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [goal]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1626 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, raised:<75% raised, category, publishingSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [raised:75% to 100% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:>100% raised]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR529 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, recommendedForMe, goal, raised, category, filmAndVideoSubcategory:Action]
and a follow-up test case is constructed by changing the value of the following parameters [filmAndVideoSubcategory:Animation]
and a follow-up test case is constructed by changing the value of the following parameters [filmAndVideoSubcategory:Comedy]
and a follow-up test case is constructed by changing the value of the following parameters [filmAndVideoSubcategory:Documentary]
and a follow-up test case is constructed by changing the value of the following parameters [filmAndVideoSubcategory:Drama]
and a follow-up test case is constructed by changing the value of the following parameters [filmAndVideoSubcategory:Experimental]
and a follow-up test case is constructed by changing the value of the following parameters [filmAndVideoSubcategory:Family]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2088 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, raised, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, location, projectsIHaveBacked, raised, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1476 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked:showProjectsIHaveBacked, recommendedForMe, amountPledged, goal, category, foodSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [projectsIHaveBacked:showProjectsIHaveNotBacked]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR287 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, category, musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, musicSubcategory, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1752 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [filterProjects, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [following, goal, projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2016 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, location, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [following, goal, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1849 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, category]
and a follow-up test case is constructed by removing the following parameters [savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR696 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, gamesSubcategory]
and a follow-up test case is constructed by removing the following parameters [gamesSubcategory, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1535 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects:showProjectsIHaveNotSaved, following, recommendedForMe, amountPledged, category, danceSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [savedProjects:showProjectsIHaveSaved]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR939 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category, comicsSubcategory]
and a follow-up test case is constructed by removing the following parameters [comicsSubcategory, following, projectsIHaveBacked, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2129 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, following, goal, location, projectsIHaveBacked, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR726 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category, danceSubcategory]
and a follow-up test case is constructed by removing the following parameters [danceSubcategory, location, raised, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1742 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [goal, projectsIHaveBacked, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
and a follow-up test case is constructed by removing the following parameters [following, raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR70 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [following, goal]
and a follow-up test case is constructed by removing the following parameters [location, raised, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1963 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, projectsIHaveBacked, raised]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [goal, location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1102 (COMPLETE_EXTEND):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, goal, category, photographySubcategory]
and a follow-up test case is constructed by adding the following parameters [raised:<75% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:75% to 100% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:>100% raised]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1071 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, raised:<75% raised, category, musicSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [raised:75% to 100% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:>100% raised]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR974 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, category, journalismSubcategory]
and a follow-up test case is constructed by removing the following parameters [journalismSubcategory, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1913 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, goal, projectsIHaveBacked, raised]
and a follow-up test case is constructed by removing the following parameters [filterProjects, savedProjects]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1673 (DISJOINT_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, category, comicsSubcategory:Graphic Novels]
and a follow-up test case is constructed by changing the value of the following parameters [comicsSubcategory:Anthologies]
and a follow-up test case is constructed by changing the value of the following parameters [comicsSubcategory:Comic Books]
and a follow-up test case is constructed by changing the value of the following parameters [comicsSubcategory:Events]
and a follow-up test case is constructed by changing the value of the following parameters [comicsSubcategory:Webcomics]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR768 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, raised, category, foodSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, location, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
and a follow-up test case is constructed by removing the following parameters [foodSubcategory]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR957 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised:<75% raised, category, comicsSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [raised:75% to 100% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:>100% raised]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR665 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [goal]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, publishingSubcategory, savedProjects]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1399 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, category, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [following, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged, projectsIHaveBacked, technologySubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1814 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, goal, publishingSubcategory, raised]
and a follow-up test case is constructed by removing the following parameters [filterProjects, projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2066 (SHUFFLING_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy:NearMe, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Magic]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Popularity]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Newest]
then the source and the follow-up output(s) should have the same items, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR937 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category, comicsSubcategory]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [comicsSubcategory, projectsIHaveBacked, raised, savedProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR998 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category, artSubcategory]
and a follow-up test case is constructed by removing the following parameters [artSubcategory, projectsIHaveBacked, raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
and a follow-up test case is constructed by removing the following parameters [following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR253 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, artSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, goal, location]
and a follow-up test case is constructed by removing the following parameters [artSubcategory, projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2082 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, raised, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, location, projectsIHaveBacked, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR450 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, goal, category, comicsSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects]
and a follow-up test case is constructed by removing the following parameters [comicsSubcategory, following, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [goal]
and a follow-up test case is constructed by removing the following parameters [location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1359 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following:showProjectsIDoNotFollow, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category]
and a follow-up test case is constructed by changing the value of the following parameters [following:showProjectsIFollow]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1706 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, recommendedForMe, filterProjects, category, fashionSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, searchQuery]
and a follow-up test case is constructed by removing the following parameters [fashionSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1002 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category, artSubcategory]
and a follow-up test case is constructed by removing the following parameters [raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, savedProjects]
and a follow-up test case is constructed by removing the following parameters [artSubcategory]
and a follow-up test case is constructed by removing the following parameters [following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1457 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, foodSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, foodSubcategory, goal]
and a follow-up test case is constructed by removing the following parameters [amountPledged, projectsIHaveBacked, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1601 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects:showProjectsIHaveSaved, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, photographySubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [savedProjects:showProjectsIHaveNotSaved]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR760 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, raised, category, foodSubcategory]
and a follow-up test case is constructed by removing the following parameters [raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, foodSubcategory, location, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1272 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, raised, category, fashionSubcategory]
and a follow-up test case is constructed by removing the following parameters [fashionSubcategory, projectsIHaveBacked, searchQuery]
and a follow-up test case is constructed by removing the following parameters [location, raised]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR575 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category, musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, musicSubcategory, projectsIHaveBacked, raised]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
and a follow-up test case is constructed by removing the following parameters [goal]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1957 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, projectsIHaveBacked, raised]
and a follow-up test case is constructed by removing the following parameters [goal, location]
and a follow-up test case is constructed by removing the following parameters [following, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1471 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, foodSubcategory]
and a follow-up test case is constructed by removing the following parameters [foodSubcategory, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, goal, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1679 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by removing the following parameters [location]
and a follow-up test case is constructed by removing the following parameters [filterProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filmAndVideoSubcategory, projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR898 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, filterProjects, raised, category, publishingSubcategory]
and a follow-up test case is constructed by adding the following parameters [projectsIHaveBacked:showProjectsIHaveBacked]
and a follow-up test case is constructed by changing the value of the following parameters [projectsIHaveBacked:showProjectsIHaveNotBacked]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR418 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, raised, category, designSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, designSubcategory, following, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [goal, location, projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1324 (SHUFFLING_EXTEND):
if a source test case is run with the inputs [location, sortBy:Popularity, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, artSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Magic]
then the source and the follow-up output(s) should have the same items, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR191 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, designSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, projectsIHaveBacked, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [designSubcategory, raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2117 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, goal, location, projectsIHaveBacked, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
and a follow-up test case is constructed by removing the following parameters [amountPledged, publishingSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1312 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, artSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, location, projectsIHaveBacked, raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [artSubcategory, following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR245 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, recommendedForMe, filterProjects, amountPledged:<$1,000 pledged, category, theaterSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$10,000 to $100,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$100,000 to $1,000,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:>$1,000,000 pledged]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1463 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, foodSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, goal, searchQuery]
and a follow-up test case is constructed by removing the following parameters [foodSubcategory]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1350 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, projectsIHaveBacked, savedProjects]
and a follow-up test case is constructed by removing the following parameters [raised, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR423 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, raised, category, designSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, designSubcategory, goal, projectsIHaveBacked, raised]
and a follow-up test case is constructed by removing the following parameters [following, searchQuery]
and a follow-up test case is constructed by removing the following parameters [location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1173 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, raised, category, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, location, raised, savedProjects, searchQuery, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1222 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category, musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, location, projectsIHaveBacked, savedProjects]
and a follow-up test case is constructed by removing the following parameters [musicSubcategory, raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR154 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category, craftsSubcategory]
and a follow-up test case is constructed by removing the following parameters [craftsSubcategory, following, goal, location, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR554 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, fashionSubcategory]
and a follow-up test case is constructed by removing the following parameters [fashionSubcategory, projectsIHaveBacked, savedProjects]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, following, goal]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR841 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [location, raised]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [filterProjects, goal]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1625 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, raised, category, publishingSubcategory:Poetry]
and a follow-up test case is constructed by changing the value of the following parameters [publishingSubcategory:Academic]
and a follow-up test case is constructed by changing the value of the following parameters [publishingSubcategory:Anthologies]
and a follow-up test case is constructed by changing the value of the following parameters [publishingSubcategory:Art Books]
and a follow-up test case is constructed by changing the value of the following parameters [publishingSubcategory:Calendars]
and a follow-up test case is constructed by changing the value of the following parameters [publishingSubcategory:Children's Books]
and a follow-up test case is constructed by changing the value of the following parameters [publishingSubcategory:Comedy]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1648 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, location, projectsIHaveBacked, publishingSubcategory, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [goal]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1596 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, photographySubcategory]
and a follow-up test case is constructed by removing the following parameters [photographySubcategory, projectsIHaveBacked, raised]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, location, savedProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR88 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, savedProjects]
and a follow-up test case is constructed by removing the following parameters [filmAndVideoSubcategory, filterProjects]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1342 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR590 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category, musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, goal, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [raised]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [filterProjects, musicSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR753 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, raised, category, foodSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, foodSubcategory, location, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged, raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR7 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category]
and a follow-up test case is constructed by removing the following parameters [location, raised]
and a follow-up test case is constructed by removing the following parameters [filterProjects, projectsIHaveBacked, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2057 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [raised]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, goal, searchQuery]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR217 (COMPLETE_EXTEND):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, category, craftsSubcategory]
and a follow-up test case is constructed by adding the following parameters [goal:<$1,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$1,000 to $10,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$10,000 to $100,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$100,000 to $1,000,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:>$1,000,000 goal]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR622 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following:showProjectsIFollow, recommendedForMe, filterProjects, amountPledged, category, journalismSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [following:showProjectsIDoNotFollow]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR619 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, recommendedForMe, filterProjects, amountPledged, category, journalismSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, journalismSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1406 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, category, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [searchQuery, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, projectsIHaveBacked, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1801 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, goal, projectsIHaveBacked, publishingSubcategory, raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR93 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by removing the following parameters [filmAndVideoSubcategory, savedProjects]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR229 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, recommendedForMe, filterProjects, amountPledged, category, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, searchQuery, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR334 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, raised, category, journalismSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, goal, journalismSubcategory, location, projectsIHaveBacked, raised, savedProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1477 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, amountPledged:<$1,000 pledged, goal, category, foodSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$10,000 to $100,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$100,000 to $1,000,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:>$1,000,000 pledged]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1238 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, category, artSubcategory]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
and a follow-up test case is constructed by removing the following parameters [artSubcategory, filterProjects]
and a follow-up test case is constructed by removing the following parameters [following, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR228 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, recommendedForMe, filterProjects, amountPledged, category, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, following, searchQuery, theaterSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR372 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, goal, category, designSubcategory]
and a follow-up test case is constructed by removing the following parameters [goal, savedProjects]
and a follow-up test case is constructed by removing the following parameters [amountPledged, designSubcategory]
and a follow-up test case is constructed by removing the following parameters [location, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR813 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, goal, category, foodSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
and a follow-up test case is constructed by removing the following parameters [foodSubcategory, goal, location, projectsIHaveBacked, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1393 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, category, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [following, projectsIHaveBacked, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1072 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, raised, category, musicSubcategory]
and a follow-up test case is constructed by adding the following parameters [following:showProjectsIFollow]
and a follow-up test case is constructed by changing the value of the following parameters [following:showProjectsIDoNotFollow]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1119 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, category, danceSubcategory]
and a follow-up test case is constructed by removing the following parameters [danceSubcategory, filterProjects, following]
and a follow-up test case is constructed by removing the following parameters [goal, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1623 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects:showProjectsIHaveNotSaved, recommendedForMe, amountPledged, raised, category, publishingSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [savedProjects:showProjectsIHaveSaved]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1271 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, raised, category, fashionSubcategory]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [fashionSubcategory, location, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR421 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, raised, category, designSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, designSubcategory, following, location, searchQuery]
and a follow-up test case is constructed by removing the following parameters [raised]
and a follow-up test case is constructed by removing the following parameters [goal, projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR706 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, gamesSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, gamesSubcategory, projectsIHaveBacked, searchQuery]
and a follow-up test case is constructed by removing the following parameters [raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR750 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category, danceSubcategory:Performance]
and a follow-up test case is constructed by changing the value of the following parameters [danceSubcategory:Residencies]
and a follow-up test case is constructed by changing the value of the following parameters [danceSubcategory:Spaces]
and a follow-up test case is constructed by changing the value of the following parameters [danceSubcategory:Workshops]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR835 (DISJOINT_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, goal, category, foodSubcategory:Bacon]
and a follow-up test case is constructed by changing the value of the following parameters [foodSubcategory:Community Gardens]
and a follow-up test case is constructed by changing the value of the following parameters [foodSubcategory:Cookbooks]
and a follow-up test case is constructed by changing the value of the following parameters [foodSubcategory:Drinks]
and a follow-up test case is constructed by changing the value of the following parameters [foodSubcategory:Events]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR96 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filmAndVideoSubcategory, filterProjects, following, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1810 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, goal]
and a follow-up test case is constructed by removing the following parameters [following, projectsIHaveBacked, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1240 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, category, artSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
and a follow-up test case is constructed by removing the following parameters [following, savedProjects]
and a follow-up test case is constructed by removing the following parameters [artSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR568 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category, musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [goal, musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, raised]
and a follow-up test case is constructed by removing the following parameters [amountPledged, projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1975 (DISJOINT_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged:<$1,000 pledged, goal, raised, category]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$10,000 to $100,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$100,000 to $1,000,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:>$1,000,000 pledged]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1001 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category, artSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, raised]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, searchQuery]
and a follow-up test case is constructed by removing the following parameters [artSubcategory, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1958 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, goal, location, projectsIHaveBacked, raised]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR140 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category, craftsSubcategory]
and a follow-up test case is constructed by removing the following parameters [craftsSubcategory, location, searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, following, goal, projectsIHaveBacked, raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR197 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects:liveProjects, raised, category, designSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [filterProjects:successfulProjects]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1188 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, raised, category, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, raised, searchQuery, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [following, location]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR271 (DISJOINT_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, projectsIHaveBacked:showProjectsIHaveNotBacked, recommendedForMe, filterProjects, amountPledged, goal, category, artSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [projectsIHaveBacked:showProjectsIHaveBacked]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2020 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, goal, location, projectsIHaveBacked, raised]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1900 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, category]
and a follow-up test case is constructed by removing the following parameters [location]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, projectsIHaveBacked, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR40 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by removing the following parameters [filmAndVideoSubcategory, goal, projectsIHaveBacked, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1125 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, category, danceSubcategory]
and a follow-up test case is constructed by removing the following parameters [danceSubcategory, filterProjects, following, goal, location]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1123 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, category, danceSubcategory]
and a follow-up test case is constructed by removing the following parameters [location]
and a follow-up test case is constructed by removing the following parameters [goal]
and a follow-up test case is constructed by removing the following parameters [danceSubcategory]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1044 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, goal, category, gamesSubcategory:Mobile Games]
and a follow-up test case is constructed by changing the value of the following parameters [gamesSubcategory:Gaming Hardware]
and a follow-up test case is constructed by changing the value of the following parameters [gamesSubcategory:Live Games]
and a follow-up test case is constructed by changing the value of the following parameters [gamesSubcategory:Playing Cards]
and a follow-up test case is constructed by changing the value of the following parameters [gamesSubcategory:Puzzles]
and a follow-up test case is constructed by changing the value of the following parameters [gamesSubcategory:Tabletop Games]
and a follow-up test case is constructed by changing the value of the following parameters [gamesSubcategory:Video Games]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR394 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, goal, category, designSubcategory:Architecture]
and a follow-up test case is constructed by changing the value of the following parameters [designSubcategory:Civic Design]
and a follow-up test case is constructed by changing the value of the following parameters [designSubcategory:Graphic Design]
and a follow-up test case is constructed by changing the value of the following parameters [designSubcategory:Interactive Design]
and a follow-up test case is constructed by changing the value of the following parameters [designSubcategory:Product Design]
and a follow-up test case is constructed by changing the value of the following parameters [designSubcategory:Toys]
and a follow-up test case is constructed by changing the value of the following parameters [designSubcategory:Typography]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1586 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, photographySubcategory]
and a follow-up test case is constructed by removing the following parameters [following, photographySubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, location, projectsIHaveBacked, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1527 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, category, danceSubcategory]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [amountPledged, danceSubcategory]
and a follow-up test case is constructed by removing the following parameters [savedProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1306 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, artSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, projectsIHaveBacked, savedProjects]
and a follow-up test case is constructed by removing the following parameters [artSubcategory, filterProjects, location, raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1989 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects, goal, projectsIHaveBacked, savedProjects]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1460 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, foodSubcategory]
and a follow-up test case is constructed by removing the following parameters [foodSubcategory, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, searchQuery]
and a follow-up test case is constructed by removing the following parameters [goal]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR521 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, recommendedForMe, goal, raised, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by removing the following parameters [filmAndVideoSubcategory]
and a follow-up test case is constructed by removing the following parameters [goal]
and a follow-up test case is constructed by removing the following parameters [raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1344 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, projectsIHaveBacked, raised, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1239 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, category, artSubcategory]
and a follow-up test case is constructed by removing the following parameters [artSubcategory, following, savedProjects]
and a follow-up test case is constructed by removing the following parameters [filterProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1888 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, location, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects, projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR525 (SHUFFLING_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy:Popularity, projectsWeLove, recommendedForMe, goal, raised, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Magic]
then the source and the follow-up output(s) should have the same items, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR122 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, category]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
and a follow-up test case is constructed by removing the following parameters [location, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1684 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
and a follow-up test case is constructed by removing the following parameters [filmAndVideoSubcategory, location, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR616 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, recommendedForMe, filterProjects, amountPledged, category, journalismSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, journalismSubcategory, searchQuery]
and a follow-up test case is constructed by removing the following parameters [following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1348 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, projectsIHaveBacked, raised, savedProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR770 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, raised, category, foodSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, foodSubcategory, location, raised, savedProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1149 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, category, gamesSubcategory]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [amountPledged, gamesSubcategory, location, savedProjects]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1483 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, foodSubcategory]
and a follow-up test case is constructed by adding the following parameters [raised:<75% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:75% to 100% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:>100% raised]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1154 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, category, gamesSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, location, savedProjects]
and a follow-up test case is constructed by removing the following parameters [amountPledged, gamesSubcategory, projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1096 (DISJOINT_EXTEND):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, goal, category, photographySubcategory:Nature]
and a follow-up test case is constructed by changing the value of the following parameters [photographySubcategory:Animals]
and a follow-up test case is constructed by changing the value of the following parameters [photographySubcategory:Fine Art]
and a follow-up test case is constructed by changing the value of the following parameters [photographySubcategory:People]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2078 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, raised, category]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, projectsIHaveBacked, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [location]
and a follow-up test case is constructed by removing the following parameters [amountPledged, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1506 (DISJOINT_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, raised:<75% raised, category, theaterSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [raised:75% to 100% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:>100% raised]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR606 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, recommendedForMe, filterProjects, amountPledged, category, journalismSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, following, journalismSubcategory]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1108 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, category, danceSubcategory]
and a follow-up test case is constructed by removing the following parameters [danceSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
and a follow-up test case is constructed by removing the following parameters [following, goal, location, projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1354 (SHUFFLING_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy:NearMe, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Magic]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Popularity]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Newest]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:EndDate]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:MostFunded]
then the source and the follow-up output(s) should have the same items, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR942 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category, comicsSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, searchQuery]
and a follow-up test case is constructed by removing the following parameters [comicsSubcategory, projectsIHaveBacked, raised, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR669 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [goal, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [following, publishingSubcategory, savedProjects]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR92 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
and a follow-up test case is constructed by removing the following parameters [filmAndVideoSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, projectsIHaveBacked, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR342 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, raised, category, journalismSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, goal, journalismSubcategory, location, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1546 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following]
and a follow-up test case is constructed by removing the following parameters [goal, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR206 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, category, craftsSubcategory]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [craftsSubcategory, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR23 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category:Photography]
and a follow-up test case is constructed by changing the value of the following parameters [category:All categories]
and a follow-up test case is constructed by changing the value of the following parameters [category:Art]
and a follow-up test case is constructed by changing the value of the following parameters [category:Comics]
and a follow-up test case is constructed by changing the value of the following parameters [category:Crafts]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR827 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, goal, category, foodSubcategory]
and a follow-up test case is constructed by removing the following parameters [goal, savedProjects]
and a follow-up test case is constructed by removing the following parameters [foodSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, location, projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1351 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, projectsIHaveBacked, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1848 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, category]
and a follow-up test case is constructed by removing the following parameters [following, projectsIHaveBacked, savedProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1621 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, raised, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, publishingSubcategory, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR882 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, filterProjects, raised, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [location, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, raised, savedProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2096 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, raised, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, following, location, projectsIHaveBacked, raised, savedProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1590 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, photographySubcategory]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [filterProjects, location]
and a follow-up test case is constructed by removing the following parameters [raised]
and a follow-up test case is constructed by removing the following parameters [photographySubcategory, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [savedProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1988 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, goal, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [savedProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1532 (SHUFFLING_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy:NearMe, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, category, danceSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Magic]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Popularity]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Newest]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:EndDate]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:MostFunded]
then the source and the follow-up output(s) should have the same items, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR709 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked:showProjectsIHaveBacked, recommendedForMe, filterProjects, raised, category, gamesSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [projectsIHaveBacked:showProjectsIHaveNotBacked]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2113 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, raised, category]
and a follow-up test case is constructed by adding the following parameters [goal:<$1,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$1,000 to $10,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$10,000 to $100,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$100,000 to $1,000,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:>$1,000,000 goal]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR94 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
and a follow-up test case is constructed by removing the following parameters [filmAndVideoSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, projectsIHaveBacked, savedProjects]
and a follow-up test case is constructed by removing the following parameters [following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1440 (SHUFFLING_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy:Popularity, projectsWeLove, following, recommendedForMe, filterProjects, amountPledged, goal, raised, category, fashionSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Magic]
then the source and the follow-up output(s) should have the same items, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR456 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, goal, category, comicsSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, location, searchQuery]
and a follow-up test case is constructed by removing the following parameters [comicsSubcategory, goal]
and a follow-up test case is constructed by removing the following parameters [amountPledged, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1115 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, category, danceSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
and a follow-up test case is constructed by removing the following parameters [location]
and a follow-up test case is constructed by removing the following parameters [danceSubcategory, following, goal, projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR806 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects:liveProjects, category, theaterSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [filterProjects:successfulProjects]
and a follow-up test case is constructed by changing the value of the following parameters [filterProjects:upcomingProjects]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1806 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, goal, projectsIHaveBacked, raised]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [publishingSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2105 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, raised:<75% raised, category]
and a follow-up test case is constructed by changing the value of the following parameters [raised:75% to 100% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:>100% raised]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1295 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, raised, category, fashionSubcategory]
and a follow-up test case is constructed by adding the following parameters [amountPledged:<$1,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$10,000 to $100,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$100,000 to $1,000,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:>$1,000,000 pledged]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR10 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category]
and a follow-up test case is constructed by removing the following parameters [raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects, location, projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1083 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, goal, category, photographySubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, photographySubcategory, savedProjects]
and a follow-up test case is constructed by removing the following parameters [goal]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR8 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category]
and a follow-up test case is constructed by removing the following parameters [filterProjects, location]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [raised, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR599 (DISJOINT_EXTEND):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised:<75% raised, category, musicSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [raised:75% to 100% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:>100% raised]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR862 (DISJOINT_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised:<75% raised, category]
and a follow-up test case is constructed by changing the value of the following parameters [raised:75% to 100% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:>100% raised]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR641 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [goal, location]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR540 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, fashionSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, fashionSubcategory, following, savedProjects]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [filterProjects, goal]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR326 (DISJOINT_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked:showProjectsIHaveBacked, recommendedForMe, goal, raised, category, theaterSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [projectsIHaveBacked:showProjectsIHaveNotBacked]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR828 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, goal, category, foodSubcategory]
and a follow-up test case is constructed by adding the following parameters [raised]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1845 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, category]
and a follow-up test case is constructed by adding the following parameters [following:showProjectsIFollow]
and a follow-up test case is constructed by changing the value of the following parameters [following:showProjectsIDoNotFollow]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1949 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [goal]
and a follow-up test case is constructed by removing the following parameters [following, projectsIHaveBacked, raised]
and a follow-up test case is constructed by removing the following parameters [location]
and a follow-up test case is constructed by removing the following parameters [amountPledged, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR749 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects:showProjectsIHaveSaved, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category, danceSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [savedProjects:showProjectsIHaveNotSaved]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2139 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, publishingSubcategory:Academic]
and a follow-up test case is constructed by changing the value of the following parameters [publishingSubcategory:Anthologies]
and a follow-up test case is constructed by changing the value of the following parameters [publishingSubcategory:Art Books]
and a follow-up test case is constructed by changing the value of the following parameters [publishingSubcategory:Calendars]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR793 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, category, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, searchQuery]
and a follow-up test case is constructed by removing the following parameters [theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR960 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked:showProjectsIHaveBacked, recommendedForMe, raised, category, comicsSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [projectsIHaveBacked:showProjectsIHaveNotBacked]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1369 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, raised, category, designSubcategory]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [raised]
and a follow-up test case is constructed by removing the following parameters [designSubcategory, projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR691 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, gamesSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, gamesSubcategory, projectsIHaveBacked, raised]
and a follow-up test case is constructed by removing the following parameters [following, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR281 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, category, musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [location, musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, projectsIHaveBacked, savedProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1413 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged:<$1,000 pledged, category, technologySubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$10,000 to $100,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$100,000 to $1,000,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:>$1,000,000 pledged]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1632 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [goal]
and a follow-up test case is constructed by removing the following parameters [location, projectsIHaveBacked, publishingSubcategory, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR91 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, projectsIHaveBacked, savedProjects]
and a follow-up test case is constructed by removing the following parameters [filmAndVideoSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2011 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, location, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [filterProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [goal, raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1267 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, raised, category, fashionSubcategory]
and a follow-up test case is constructed by removing the following parameters [fashionSubcategory, projectsIHaveBacked, searchQuery]
and a follow-up test case is constructed by removing the following parameters [raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR476 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, goal, raised, category, craftsSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, following, goal, location, raised, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [craftsSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1472 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, foodSubcategory]
and a follow-up test case is constructed by removing the following parameters [foodSubcategory, searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged, goal]
and a follow-up test case is constructed by removing the following parameters [following, projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1107 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, category, danceSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, location, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [filterProjects, goal]
and a follow-up test case is constructed by removing the following parameters [danceSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1898 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, category]
and a follow-up test case is constructed by removing the following parameters [location, projectsIHaveBacked, searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2120 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, following, goal, location, projectsIHaveBacked, publishingSubcategory, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1541 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, category, danceSubcategory]
and a follow-up test case is constructed by adding the following parameters [goal:<$1,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$1,000 to $10,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$10,000 to $100,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$100,000 to $1,000,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:>$1,000,000 goal]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR186 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, designSubcategory]
and a follow-up test case is constructed by removing the following parameters [designSubcategory, filterProjects, following, projectsIHaveBacked, savedProjects]
and a follow-up test case is constructed by removing the following parameters [raised, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR11 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category]
and a follow-up test case is constructed by removing the following parameters [filterProjects, location, raised]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR288 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, category, musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, location, savedProjects]
and a follow-up test case is constructed by removing the following parameters [musicSubcategory, searchQuery]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1599 (SHUFFLING_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy:Popularity, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, photographySubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Magic]
then the source and the follow-up output(s) should have the same items, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR701 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, gamesSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, gamesSubcategory, projectsIHaveBacked, raised]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1251 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, category, artSubcategory]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
and a follow-up test case is constructed by removing the following parameters [artSubcategory, savedProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2110 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects:liveProjects, amountPledged, raised, category]
and a follow-up test case is constructed by changing the value of the following parameters [filterProjects:successfulProjects]
and a follow-up test case is constructed by changing the value of the following parameters [filterProjects:upcomingProjects]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR751 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category, danceSubcategory]
and a follow-up test case is constructed by adding the following parameters [goal:<$1,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$1,000 to $10,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$10,000 to $100,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$100,000 to $1,000,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:>$1,000,000 goal]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1912 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, category]
and a follow-up test case is constructed by adding the following parameters [raised:<75% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:75% to 100% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:>100% raised]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1017 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category, artSubcategory:Ceramics]
and a follow-up test case is constructed by changing the value of the following parameters [artSubcategory:Conceptual Art]
and a follow-up test case is constructed by changing the value of the following parameters [artSubcategory:Digital Art]
and a follow-up test case is constructed by changing the value of the following parameters [artSubcategory:Illustration]
and a follow-up test case is constructed by changing the value of the following parameters [artSubcategory:Installations]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR675 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, publishingSubcategory, savedProjects]
and a follow-up test case is constructed by removing the following parameters [goal, projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR811 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, category, theaterSubcategory]
and a follow-up test case is constructed by adding the following parameters [goal:<$1,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$1,000 to $10,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$10,000 to $100,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$100,000 to $1,000,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:>$1,000,000 goal]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1320 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, artSubcategory]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [filterProjects, location, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [artSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2112 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, raised, category:Art]
and a follow-up test case is constructed by changing the value of the following parameters [category:All categories]
and a follow-up test case is constructed by changing the value of the following parameters [category:Comics]
and a follow-up test case is constructed by changing the value of the following parameters [category:Crafts]
and a follow-up test case is constructed by changing the value of the following parameters [category:Dance]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1269 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, raised, category, fashionSubcategory]
and a follow-up test case is constructed by removing the following parameters [fashionSubcategory, raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [location, projectsIHaveBacked, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR331 (DISJOINT_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following:showProjectsIFollow, projectsIHaveBacked, recommendedForMe, goal, raised, category, theaterSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [following:showProjectsIDoNotFollow]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR144 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category, craftsSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, craftsSubcategory, filterProjects, goal, location, projectsIHaveBacked, searchQuery]
and a follow-up test case is constructed by removing the following parameters [following, raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2151 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, raised, category]
and a follow-up test case is constructed by removing the following parameters [following, raised]
and a follow-up test case is constructed by removing the following parameters [filterProjects, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2081 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, raised, category]
and a follow-up test case is constructed by removing the following parameters [filterProjects, location, projectsIHaveBacked, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR724 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category, danceSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, location, projectsIHaveBacked, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [danceSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR801 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, category, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, savedProjects]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
and a follow-up test case is constructed by removing the following parameters [searchQuery, theaterSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1034 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, goal, category, gamesSubcategory]
and a follow-up test case is constructed by removing the following parameters [goal, location]
and a follow-up test case is constructed by removing the following parameters [amountPledged, gamesSubcategory, searchQuery]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR972 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, category, journalismSubcategory]
and a follow-up test case is constructed by removing the following parameters [location]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, savedProjects]
and a follow-up test case is constructed by removing the following parameters [journalismSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR877 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, filterProjects, raised, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, raised]
and a follow-up test case is constructed by removing the following parameters [location, publishingSubcategory, savedProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR273 (DISJOINT_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal:<$1,000 goal, category, artSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$1,000 to $10,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$10,000 to $100,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$100,000 to $1,000,000 goal]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR850 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [goal, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [following, raised]
and a follow-up test case is constructed by removing the following parameters [location]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1104 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, category, danceSubcategory]
and a follow-up test case is constructed by removing the following parameters [danceSubcategory, following, goal, location, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1828 (DISJOINT_EXTEND):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised:<75% raised, category, publishingSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [raised:75% to 100% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:>100% raised]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR19 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked:showProjectsIHaveBacked, recommendedForMe, filterProjects, raised, category]
and a follow-up test case is constructed by changing the value of the following parameters [projectsIHaveBacked:showProjectsIHaveNotBacked]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1708 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, recommendedForMe, filterProjects, category, fashionSubcategory]
and a follow-up test case is constructed by removing the following parameters [fashionSubcategory, filterProjects, following]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1936 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised:<75% raised, category]
and a follow-up test case is constructed by changing the value of the following parameters [raised:75% to 100% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:>100% raised]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR822 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, goal, category, foodSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, foodSubcategory, location, projectsIHaveBacked, savedProjects]
and a follow-up test case is constructed by removing the following parameters [goal]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1733 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, category]
and a follow-up test case is constructed by adding the following parameters [goal:<$1,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$1,000 to $10,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$10,000 to $100,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$100,000 to $1,000,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:>$1,000,000 goal]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1100 (DISJOINT_EXTEND):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects:showProjectsIHaveNotSaved, following, recommendedForMe, amountPledged, goal, category, photographySubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [savedProjects:showProjectsIHaveSaved]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR574 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category, musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [following, raised]
and a follow-up test case is constructed by removing the following parameters [goal]
and a follow-up test case is constructed by removing the following parameters [musicSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR584 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category, musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, following, projectsIHaveBacked, raised]
and a follow-up test case is constructed by removing the following parameters [goal, musicSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1854 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, category]
and a follow-up test case is constructed by removing the following parameters [following, projectsIHaveBacked, savedProjects]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1347 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, projectsIHaveBacked, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1990 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, projectsIHaveBacked, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [goal]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1799 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, goal, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR115 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, location, savedProjects]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1030 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, goal, category, gamesSubcategory]
and a follow-up test case is constructed by removing the following parameters [gamesSubcategory, goal, location, savedProjects]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR238 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, recommendedForMe, filterProjects, amountPledged, category, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, following]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
and a follow-up test case is constructed by removing the following parameters [theaterSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1929 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, projectsIHaveBacked, searchQuery]
and a follow-up test case is constructed by removing the following parameters [goal]
and a follow-up test case is constructed by removing the following parameters [following, raised]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR171 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category, craftsSubcategory:Candles]
and a follow-up test case is constructed by changing the value of the following parameters [craftsSubcategory:Crochet]
and a follow-up test case is constructed by changing the value of the following parameters [craftsSubcategory:DIY]
and a follow-up test case is constructed by changing the value of the following parameters [craftsSubcategory:Embroidery]
and a follow-up test case is constructed by changing the value of the following parameters [craftsSubcategory:Glass]
and a follow-up test case is constructed by changing the value of the following parameters [craftsSubcategory:Knitting]
and a follow-up test case is constructed by changing the value of the following parameters [craftsSubcategory:Pottery]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1193 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, raised, category, technologySubcategory:Hardware]
and a follow-up test case is constructed by changing the value of the following parameters [technologySubcategory:3D Printing]
and a follow-up test case is constructed by changing the value of the following parameters [technologySubcategory:Apps]
and a follow-up test case is constructed by changing the value of the following parameters [technologySubcategory:Camera Equipment]
and a follow-up test case is constructed by changing the value of the following parameters [technologySubcategory:DIY Electronics]
and a follow-up test case is constructed by changing the value of the following parameters [technologySubcategory:Fabrication Tools]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1332 (DISJOINT_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, artSubcategory:Ceramics]
and a follow-up test case is constructed by changing the value of the following parameters [artSubcategory:Conceptual Art]
and a follow-up test case is constructed by changing the value of the following parameters [artSubcategory:Digital Art]
and a follow-up test case is constructed by changing the value of the following parameters [artSubcategory:Illustration]
and a follow-up test case is constructed by changing the value of the following parameters [artSubcategory:Installations]
and a follow-up test case is constructed by changing the value of the following parameters [artSubcategory:Mixed Media]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR349 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, raised, category, journalismSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, journalismSubcategory, location, raised, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [goal, projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1519 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, category, danceSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
and a follow-up test case is constructed by removing the following parameters [danceSubcategory, following, savedProjects]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1293 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects:showProjectsIHaveNotSaved, projectsIHaveBacked, recommendedForMe, raised, category, fashionSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [savedProjects:showProjectsIHaveSaved]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1940 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged:<$1,000 pledged, goal, raised, category]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$10,000 to $100,000 pledged]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1548 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, goal, projectsIHaveBacked, publishingSubcategory, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR907 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [publishingSubcategory, raised]
and a follow-up test case is constructed by removing the following parameters [following, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects, location]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2027 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [following, goal, raised]
and a follow-up test case is constructed by removing the following parameters [amountPledged, location, projectsIHaveBacked, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1934 (SHUFFLING_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy:NearMe, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Magic]
then the source and the follow-up output(s) should have the same items, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR586 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category, musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [raised]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
and a follow-up test case is constructed by removing the following parameters [musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, goal, projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1378 (DISJOINT_EXTEND):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked:showProjectsIHaveNotBacked, recommendedForMe, raised, category, designSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [projectsIHaveBacked:showProjectsIHaveBacked]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1409 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, category, technologySubcategory:Hardware]
and a follow-up test case is constructed by changing the value of the following parameters [technologySubcategory:3D Printing]
and a follow-up test case is constructed by changing the value of the following parameters [technologySubcategory:Apps]
and a follow-up test case is constructed by changing the value of the following parameters [technologySubcategory:Camera Equipment]
and a follow-up test case is constructed by changing the value of the following parameters [technologySubcategory:DIY Electronics]
and a follow-up test case is constructed by changing the value of the following parameters [technologySubcategory:Fabrication Tools]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR161 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category, craftsSubcategory]
and a follow-up test case is constructed by adding the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR492 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, goal, raised, category, craftsSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged, craftsSubcategory, filterProjects, location, savedProjects]
and a follow-up test case is constructed by removing the following parameters [goal]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR780 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged:<$1,000 pledged, raised, category, foodSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$10,000 to $100,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$100,000 to $1,000,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:>$1,000,000 pledged]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1572 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects:showProjectsIHaveSaved, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, publishingSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [savedProjects:showProjectsIHaveNotSaved]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR240 (SHUFFLING_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy:NearMe, projectsWeLove, following, recommendedForMe, filterProjects, amountPledged, category, theaterSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Magic]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Popularity]
then the source and the follow-up output(s) should have the same items, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR759 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, raised, category, foodSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, foodSubcategory, location, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1114 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, category, danceSubcategory]
and a follow-up test case is constructed by removing the following parameters [location, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [danceSubcategory, filterProjects, goal]
and a follow-up test case is constructed by removing the following parameters [following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR536 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, fashionSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, fashionSubcategory, filterProjects, following, goal, projectsIHaveBacked, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1762 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects:liveProjects, goal, raised, category]
and a follow-up test case is constructed by changing the value of the following parameters [filterProjects:successfulProjects]
and a follow-up test case is constructed by changing the value of the following parameters [filterProjects:upcomingProjects]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1499 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, raised, category, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, location, raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [theaterSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1167 (DISJOINT_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, category, gamesSubcategory:Mobile Games]
and a follow-up test case is constructed by changing the value of the following parameters [gamesSubcategory:Gaming Hardware]
and a follow-up test case is constructed by changing the value of the following parameters [gamesSubcategory:Live Games]
and a follow-up test case is constructed by changing the value of the following parameters [gamesSubcategory:Playing Cards]
and a follow-up test case is constructed by changing the value of the following parameters [gamesSubcategory:Puzzles]
and a follow-up test case is constructed by changing the value of the following parameters [gamesSubcategory:Tabletop Games]
and a follow-up test case is constructed by changing the value of the following parameters [gamesSubcategory:Video Games]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1281 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, raised, category, fashionSubcategory]
and a follow-up test case is constructed by removing the following parameters [location, searchQuery]
and a follow-up test case is constructed by removing the following parameters [fashionSubcategory, projectsIHaveBacked, raised, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2125 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [goal, location]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, projectsIHaveBacked, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR109 (DISJOINT_EXTEND):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged:<$1,000 pledged, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$10,000 to $100,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$100,000 to $1,000,000 pledged]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR849 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, projectsIHaveBacked, raised]
and a follow-up test case is constructed by removing the following parameters [goal, location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR224 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, recommendedForMe, filterProjects, amountPledged, category, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following]
and a follow-up test case is constructed by removing the following parameters [theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1031 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, goal, category, gamesSubcategory]
and a follow-up test case is constructed by removing the following parameters [gamesSubcategory, goal]
and a follow-up test case is constructed by removing the following parameters [amountPledged, location, savedProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR176 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, designSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, projectsIHaveBacked, raised, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
and a follow-up test case is constructed by removing the following parameters [designSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR201 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects:showProjectsIHaveSaved, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, designSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [savedProjects:showProjectsIHaveNotSaved]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1612 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, raised, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, publishingSubcategory, raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR105 (DISJOINT_EXTEND):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects:liveProjects, amountPledged, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [filterProjects:successfulProjects]
and a follow-up test case is constructed by changing the value of the following parameters [filterProjects:upcomingProjects]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR86 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filmAndVideoSubcategory, filterProjects, following, projectsIHaveBacked, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR454 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, goal, category, comicsSubcategory]
and a follow-up test case is constructed by removing the following parameters [goal]
and a follow-up test case is constructed by removing the following parameters [amountPledged, comicsSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, location, savedProjects]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1377 (SHUFFLING_EXTEND):
if a source test case is run with the inputs [sortBy:NearMe, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, raised, category, designSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Magic]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Popularity]
then the source and the follow-up output(s) should have the same items, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1793 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, category, photographySubcategory:Nature]
and a follow-up test case is constructed by changing the value of the following parameters [photographySubcategory:Animals]
and a follow-up test case is constructed by changing the value of the following parameters [photographySubcategory:Fine Art]
and a follow-up test case is constructed by changing the value of the following parameters [photographySubcategory:People]
and a follow-up test case is constructed by changing the value of the following parameters [photographySubcategory:Photobooks]
and a follow-up test case is constructed by changing the value of the following parameters [photographySubcategory:Places]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1420 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, recommendedForMe, filterProjects, amountPledged, goal, raised, category, fashionSubcategory]
and a follow-up test case is constructed by removing the following parameters [fashionSubcategory, location, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following]
and a follow-up test case is constructed by removing the following parameters [amountPledged, goal]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR790 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, category, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, savedProjects, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR516 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, recommendedForMe, goal, raised, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by removing the following parameters [filmAndVideoSubcategory, goal, searchQuery]
and a follow-up test case is constructed by removing the following parameters [location, raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1179 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, raised, category, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, location, raised]
and a follow-up test case is constructed by removing the following parameters [savedProjects, searchQuery, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1010 (SHUFFLING_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy:NearMe, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category, artSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Magic]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Popularity]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Newest]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:EndDate]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:MostFunded]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:MostBacked]
then the source and the follow-up output(s) should have the same items, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1221 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category, musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, musicSubcategory, raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [location]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR611 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, recommendedForMe, filterProjects, amountPledged, category, journalismSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
and a follow-up test case is constructed by removing the following parameters [following, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects, journalismSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR767 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, raised, category, foodSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, foodSubcategory, raised, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR204 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, designSubcategory]
and a follow-up test case is constructed by adding the following parameters [amountPledged:<$1,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$10,000 to $100,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$100,000 to $1,000,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:>$1,000,000 pledged]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1491 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, raised, category, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, raised]
and a follow-up test case is constructed by removing the following parameters [following, location, savedProjects]
and a follow-up test case is constructed by removing the following parameters [theaterSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR650 (DISJOINT_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, amountPledged:<$1,000 pledged, goal, category, technologySubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$10,000 to $100,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$100,000 to $1,000,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:>$1,000,000 pledged]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1978 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, goal, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1387 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, category, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, searchQuery]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1453 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, foodSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, goal, projectsIHaveBacked, searchQuery]
and a follow-up test case is constructed by removing the following parameters [foodSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR729 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category, danceSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [danceSubcategory, location, raised]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1349 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category]
and a follow-up test case is constructed by removing the following parameters [following, projectsIHaveBacked, searchQuery]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [amountPledged, raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR585 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category, musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, musicSubcategory, projectsIHaveBacked, raised]
and a follow-up test case is constructed by removing the following parameters [goal]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR512 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, recommendedForMe, goal, raised, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by removing the following parameters [goal, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filmAndVideoSubcategory, location, raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1520 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, category, danceSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following]
and a follow-up test case is constructed by removing the following parameters [danceSubcategory, searchQuery]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR166 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked:showProjectsIHaveNotBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category, craftsSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [projectsIHaveBacked:showProjectsIHaveBacked]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR979 (SHUFFLING_EXTEND):
if a source test case is run with the inputs [location, sortBy:Popularity, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, category, journalismSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Magic]
then the source and the follow-up output(s) should have the same items, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1538 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, category, danceSubcategory:Performance]
and a follow-up test case is constructed by changing the value of the following parameters [danceSubcategory:Residencies]
and a follow-up test case is constructed by changing the value of the following parameters [danceSubcategory:Spaces]
and a follow-up test case is constructed by changing the value of the following parameters [danceSubcategory:Workshops]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2162 (DISJOINT_EXTEND):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, raised, category:Food]
and a follow-up test case is constructed by changing the value of the following parameters [category:All categories]
and a follow-up test case is constructed by changing the value of the following parameters [category:Art]
and a follow-up test case is constructed by changing the value of the following parameters [category:Comics]
and a follow-up test case is constructed by changing the value of the following parameters [category:Crafts]
and a follow-up test case is constructed by changing the value of the following parameters [category:Dance]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR82 (DISJOINT_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following:showProjectsIDoNotFollow, recommendedForMe, goal, raised, category]
and a follow-up test case is constructed by changing the value of the following parameters [following:showProjectsIFollow]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1875 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR455 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, goal, category, comicsSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, goal, searchQuery]
and a follow-up test case is constructed by removing the following parameters [comicsSubcategory, following, location, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1620 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, raised, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, publishingSubcategory, searchQuery]
and a follow-up test case is constructed by removing the following parameters [raised, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1534 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged:<$1,000 pledged, category, danceSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$10,000 to $100,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$100,000 to $1,000,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:>$1,000,000 pledged]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR465 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged:<$1,000 pledged, goal, category, comicsSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$10,000 to $100,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$100,000 to $1,000,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:>$1,000,000 pledged]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1878 (DISJOINT_EXTEND):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked:showProjectsIHaveNotBacked, recommendedForMe, amountPledged, category]
and a follow-up test case is constructed by changing the value of the following parameters [projectsIHaveBacked:showProjectsIHaveBacked]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR159 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category, craftsSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, raised]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, goal, location, projectsIHaveBacked, searchQuery]
and a follow-up test case is constructed by removing the following parameters [craftsSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1374 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, raised, category, designSubcategory]
and a follow-up test case is constructed by removing the following parameters [designSubcategory, raised]
and a follow-up test case is constructed by removing the following parameters [following, projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1283 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, raised, category, fashionSubcategory]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, raised, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [location]
and a follow-up test case is constructed by removing the following parameters [fashionSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1004 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category, artSubcategory]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
and a follow-up test case is constructed by removing the following parameters [following, projectsIHaveBacked, raised]
and a follow-up test case is constructed by removing the following parameters [artSubcategory, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR879 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, filterProjects, raised, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [location, raised, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects, publishingSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR870 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, filterProjects, raised, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, location, publishingSubcategory, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR858 (SHUFFLING_EXTEND):
if a source test case is run with the inputs [location, sortBy:Popularity, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Magic]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Newest]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:EndDate]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:MostFunded]
then the source and the follow-up output(s) should have the same items, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1545 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, goal, projectsIHaveBacked, publishingSubcategory, savedProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1227 (DISJOINT_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked:showProjectsIHaveBacked, recommendedForMe, raised, category, musicSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [projectsIHaveBacked:showProjectsIHaveNotBacked]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR900 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, filterProjects, raised, category, publishingSubcategory]
and a follow-up test case is constructed by adding the following parameters [amountPledged:<$1,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$10,000 to $100,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$100,000 to $1,000,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:>$1,000,000 pledged]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR663 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [goal, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [amountPledged, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2123 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, following, location, searchQuery]
and a follow-up test case is constructed by removing the following parameters [publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [goal]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1641 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, goal, location, projectsIHaveBacked, publishingSubcategory, savedProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1479 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, foodSubcategory:Bacon]
and a follow-up test case is constructed by changing the value of the following parameters [foodSubcategory:Community Gardens]
and a follow-up test case is constructed by changing the value of the following parameters [foodSubcategory:Cookbooks]
and a follow-up test case is constructed by changing the value of the following parameters [foodSubcategory:Drinks]
and a follow-up test case is constructed by changing the value of the following parameters [foodSubcategory:Events]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR651 (DISJOINT_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, amountPledged, goal:<$1,000 goal, category, technologySubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$1,000 to $10,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$10,000 to $100,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$100,000 to $1,000,000 goal]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR170 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised:<75% raised, category, craftsSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [raised:75% to 100% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:>100% raised]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR786 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, raised, category, foodSubcategory]
and a follow-up test case is constructed by adding the following parameters [goal:<$1,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$1,000 to $10,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$10,000 to $100,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$100,000 to $1,000,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:>$1,000,000 goal]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR861 (DISJOINT_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects:liveProjects, goal, raised, category]
and a follow-up test case is constructed by changing the value of the following parameters [filterProjects:successfulProjects]
and a follow-up test case is constructed by changing the value of the following parameters [filterProjects:upcomingProjects]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1244 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, category, artSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
and a follow-up test case is constructed by removing the following parameters [artSubcategory, following, savedProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR433 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, raised, category, designSubcategory]
and a follow-up test case is constructed by adding the following parameters [savedProjects:showProjectsIHaveSaved]
and a follow-up test case is constructed by changing the value of the following parameters [savedProjects:showProjectsIHaveNotSaved]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1159 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, category, gamesSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [gamesSubcategory, location, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2101 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, raised, category]
and a follow-up test case is constructed by removing the following parameters [following, location, projectsIHaveBacked, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
and a follow-up test case is constructed by removing the following parameters [filterProjects, raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR216 (COMPLETE_EXTEND):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, category, craftsSubcategory]
and a follow-up test case is constructed by adding the following parameters [raised:<75% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:75% to 100% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:>100% raised]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1316 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, artSubcategory]
and a follow-up test case is constructed by removing the following parameters [artSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, location, projectsIHaveBacked, savedProjects]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
and a follow-up test case is constructed by removing the following parameters [raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1967 (DISJOINT_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects:showProjectsIHaveNotSaved, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, raised, category]
and a follow-up test case is constructed by changing the value of the following parameters [savedProjects:showProjectsIHaveSaved]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR976 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, category, journalismSubcategory]
and a follow-up test case is constructed by removing the following parameters [journalismSubcategory, projectsIHaveBacked, savedProjects]
and a follow-up test case is constructed by removing the following parameters [location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2040 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category:Games]
and a follow-up test case is constructed by changing the value of the following parameters [category:All categories]
and a follow-up test case is constructed by changing the value of the following parameters [category:Art]
and a follow-up test case is constructed by changing the value of the following parameters [category:Comics]
and a follow-up test case is constructed by changing the value of the following parameters [category:Crafts]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1343 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged, raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1529 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, category, danceSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, danceSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, savedProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2000 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category:Comics]
and a follow-up test case is constructed by changing the value of the following parameters [category:All categories]
and a follow-up test case is constructed by changing the value of the following parameters [category:Art]
and a follow-up test case is constructed by changing the value of the following parameters [category:Crafts]
and a follow-up test case is constructed by changing the value of the following parameters [category:Dance]
and a follow-up test case is constructed by changing the value of the following parameters [category:Design]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1439 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, recommendedForMe, filterProjects, amountPledged, goal, raised, category, fashionSubcategory]
and a follow-up test case is constructed by adding the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR717 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category, danceSubcategory]
and a follow-up test case is constructed by removing the following parameters [danceSubcategory, location, projectsIHaveBacked, raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [amountPledged, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1866 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, category]
and a follow-up test case is constructed by adding the following parameters [raised:<75% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:75% to 100% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:>100% raised]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR36 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filmAndVideoSubcategory, goal, projectsIHaveBacked, searchQuery]
and a follow-up test case is constructed by removing the following parameters [following, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR60 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [goal, savedProjects]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [location, raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR160 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category, craftsSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, projectsIHaveBacked, raised]
and a follow-up test case is constructed by removing the following parameters [filterProjects, location]
and a follow-up test case is constructed by removing the following parameters [amountPledged, craftsSubcategory, searchQuery]
and a follow-up test case is constructed by removing the following parameters [goal]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR303 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, category, musicSubcategory]
and a follow-up test case is constructed by adding the following parameters [amountPledged:<$1,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$10,000 to $100,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$100,000 to $1,000,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:>$1,000,000 pledged]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2093 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, raised, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, location, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1077 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, goal, category, photographySubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, photographySubcategory, savedProjects]
and a follow-up test case is constructed by removing the following parameters [following, goal]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1085 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, goal, category, photographySubcategory]
and a follow-up test case is constructed by removing the following parameters [goal, savedProjects]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, photographySubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2106 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following:showProjectsIDoNotFollow, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, raised, category]
and a follow-up test case is constructed by changing the value of the following parameters [following:showProjectsIFollow]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR742 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category, danceSubcategory]
and a follow-up test case is constructed by removing the following parameters [danceSubcategory, projectsIHaveBacked, raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [amountPledged, location, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR589 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category, musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, goal, musicSubcategory, raised]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1724 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, category]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, searchQuery]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR316 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, raised, category, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, location, projectsIHaveBacked, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [goal, raised, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1214 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category, musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [musicSubcategory, raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [location, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR48 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by removing the following parameters [filmAndVideoSubcategory, following, projectsIHaveBacked, searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged, goal, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR830 (DISJOINT_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects:showProjectsIHaveSaved, projectsIHaveBacked, recommendedForMe, filterProjects, goal, category, foodSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [savedProjects:showProjectsIHaveNotSaved]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1292 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, raised, category, fashionSubcategory:Accessories]
and a follow-up test case is constructed by changing the value of the following parameters [fashionSubcategory:Apparel]
and a follow-up test case is constructed by changing the value of the following parameters [fashionSubcategory:Childrenswear]
and a follow-up test case is constructed by changing the value of the following parameters [fashionSubcategory:Couture]
and a follow-up test case is constructed by changing the value of the following parameters [fashionSubcategory:Footwear]
and a follow-up test case is constructed by changing the value of the following parameters [fashionSubcategory:Jewelry]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2126 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [location]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, following, goal, searchQuery]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, publishingSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR131 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged:<$1,000 pledged, category]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$10,000 to $100,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$100,000 to $1,000,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:>$1,000,000 pledged]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2061 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [following, raised]
and a follow-up test case is constructed by removing the following parameters [goal]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR920 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, location, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, publishingSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR292 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, category, musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, location, musicSubcategory, projectsIHaveBacked, savedProjects]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1300 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, artSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [artSubcategory, location, raised, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1906 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, category:Design]
and a follow-up test case is constructed by changing the value of the following parameters [category:All categories]
and a follow-up test case is constructed by changing the value of the following parameters [category:Art]
and a follow-up test case is constructed by changing the value of the following parameters [category:Comics]
and a follow-up test case is constructed by changing the value of the following parameters [category:Crafts]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1262 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, category, artSubcategory]
and a follow-up test case is constructed by adding the following parameters [amountPledged:<$1,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$10,000 to $100,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$100,000 to $1,000,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:>$1,000,000 pledged]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR152 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category, craftsSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, craftsSubcategory, filterProjects, following, goal, location, projectsIHaveBacked, raised, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR658 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [amountPledged, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [goal]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR805 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects:showProjectsIHaveNotSaved, projectsIHaveBacked, recommendedForMe, filterProjects, category, theaterSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [savedProjects:showProjectsIHaveSaved]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1020 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, goal, category, gamesSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, location, savedProjects]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
and a follow-up test case is constructed by removing the following parameters [gamesSubcategory, goal]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR286 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, category, musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [location, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [musicSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR234 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, recommendedForMe, filterProjects, amountPledged, category, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, searchQuery, theaterSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR369 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, goal, category, designSubcategory]
and a follow-up test case is constructed by removing the following parameters [designSubcategory, location, savedProjects]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
and a follow-up test case is constructed by removing the following parameters [goal, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR150 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category, craftsSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, craftsSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, location, projectsIHaveBacked, searchQuery]
and a follow-up test case is constructed by removing the following parameters [goal, raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1144 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, category, gamesSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, gamesSubcategory, location, savedProjects]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR949 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category, comicsSubcategory]
and a follow-up test case is constructed by removing the following parameters [comicsSubcategory, searchQuery]
and a follow-up test case is constructed by removing the following parameters [following, raised]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR410 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, raised, category, designSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, designSubcategory, following, goal, projectsIHaveBacked, raised]
and a follow-up test case is constructed by removing the following parameters [location]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR428 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked:showProjectsIHaveBacked, recommendedForMe, amountPledged, goal, raised, category, designSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [projectsIHaveBacked:showProjectsIHaveNotBacked]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR771 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, raised, category, foodSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, location, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged, foodSubcategory, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1744 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, goal, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR398 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, goal, category, designSubcategory]
and a follow-up test case is constructed by adding the following parameters [raised:<75% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:75% to 100% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:>100% raised]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR192 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, designSubcategory]
and a follow-up test case is constructed by removing the following parameters [designSubcategory, filterProjects, projectsIHaveBacked, searchQuery]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [following, raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR321 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, raised, category, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [location, raised]
and a follow-up test case is constructed by removing the following parameters [goal, projectsIHaveBacked, savedProjects]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [theaterSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2063 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, goal, raised]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1613 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, raised, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, publishingSubcategory, raised]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR13 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category]
and a follow-up test case is constructed by removing the following parameters [filterProjects, location, searchQuery]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR581 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category, musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, goal, musicSubcategory, raised]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2166 (COMPLETE_EXTEND):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, raised, category]
and a follow-up test case is constructed by adding the following parameters [projectsIHaveBacked:showProjectsIHaveBacked]
and a follow-up test case is constructed by changing the value of the following parameters [projectsIHaveBacked:showProjectsIHaveNotBacked]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1754 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [filterProjects, goal, projectsIHaveBacked, searchQuery]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1211 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category, musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [musicSubcategory, savedProjects]
and a follow-up test case is constructed by removing the following parameters [following, location, projectsIHaveBacked, raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR889 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, filterProjects, raised, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, publishingSubcategory, raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
and a follow-up test case is constructed by removing the following parameters [location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR475 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, goal, raised, category, craftsSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, goal, searchQuery]
and a follow-up test case is constructed by removing the following parameters [craftsSubcategory, filterProjects, location, raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR739 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category, danceSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, danceSubcategory, projectsIHaveBacked, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [location]
and a follow-up test case is constructed by removing the following parameters [raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1290 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked:showProjectsIHaveBacked, recommendedForMe, raised, category, fashionSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [projectsIHaveBacked:showProjectsIHaveNotBacked]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1247 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, category, artSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects, savedProjects]
and a follow-up test case is constructed by removing the following parameters [artSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR340 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, raised, category, journalismSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, goal, location, projectsIHaveBacked, raised, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [journalismSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1747 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [following, raised]
and a follow-up test case is constructed by removing the following parameters [filterProjects, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [goal]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1245 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, category, artSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, savedProjects]
and a follow-up test case is constructed by removing the following parameters [artSubcategory, following, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1424 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, recommendedForMe, filterProjects, amountPledged, goal, raised, category, fashionSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, fashionSubcategory, following, goal, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [location]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1401 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, category, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [savedProjects, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [following, projectsIHaveBacked, searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1617 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, raised, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [raised, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged, publishingSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR320 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, raised, category, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [location]
and a follow-up test case is constructed by removing the following parameters [goal]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2091 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, raised, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, location, projectsIHaveBacked, raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR600 (DISJOINT_EXTEND):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category, musicSubcategory:Jazz]
and a follow-up test case is constructed by changing the value of the following parameters [musicSubcategory:Blues]
and a follow-up test case is constructed by changing the value of the following parameters [musicSubcategory:Chiptune]
and a follow-up test case is constructed by changing the value of the following parameters [musicSubcategory:Classical Music]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1000 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category, artSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, projectsIHaveBacked, raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [artSubcategory, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR182 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, designSubcategory]
and a follow-up test case is constructed by removing the following parameters [designSubcategory, projectsIHaveBacked, raised, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR950 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category, comicsSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, projectsIHaveBacked, raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [comicsSubcategory, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR988 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category, artSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, projectsIHaveBacked, searchQuery]
and a follow-up test case is constructed by removing the following parameters [artSubcategory, raised, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2092 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, raised, category]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, location, projectsIHaveBacked, raised, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1570 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following:showProjectsIFollow, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, publishingSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [following:showProjectsIDoNotFollow]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1106 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, category, danceSubcategory]
and a follow-up test case is constructed by removing the following parameters [danceSubcategory, goal, location, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
and a follow-up test case is constructed by removing the following parameters [following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1607 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, photographySubcategory]
and a follow-up test case is constructed by adding the following parameters [amountPledged:<$1,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$10,000 to $100,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$100,000 to $1,000,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:>$1,000,000 pledged]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR195 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, designSubcategory]
and a follow-up test case is constructed by removing the following parameters [designSubcategory, raised]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, projectsIHaveBacked, searchQuery]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR784 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, raised, category, foodSubcategory:Bacon]
and a follow-up test case is constructed by changing the value of the following parameters [foodSubcategory:Community Gardens]
and a follow-up test case is constructed by changing the value of the following parameters [foodSubcategory:Cookbooks]
and a follow-up test case is constructed by changing the value of the following parameters [foodSubcategory:Drinks]
and a follow-up test case is constructed by changing the value of the following parameters [foodSubcategory:Events]
and a follow-up test case is constructed by changing the value of the following parameters [foodSubcategory:Farmer's Markets]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1591 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, photographySubcategory]
and a follow-up test case is constructed by removing the following parameters [raised]
and a follow-up test case is constructed by removing the following parameters [following, location]
and a follow-up test case is constructed by removing the following parameters [filterProjects, photographySubcategory, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR881 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, filterProjects, raised, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, location]
and a follow-up test case is constructed by removing the following parameters [publishingSubcategory, raised, savedProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1582 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, photographySubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, location, projectsIHaveBacked, searchQuery]
and a follow-up test case is constructed by removing the following parameters [photographySubcategory, raised, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR732 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category, danceSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, danceSubcategory, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [location, projectsIHaveBacked, raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1525 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, category, danceSubcategory]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
and a follow-up test case is constructed by removing the following parameters [danceSubcategory, following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1315 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, artSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, location, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [artSubcategory, raised]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1768 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, category, photographySubcategory]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [filterProjects, location, searchQuery]
and a follow-up test case is constructed by removing the following parameters [photographySubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1815 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, goal]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, publishingSubcategory, raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR629 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, recommendedForMe, filterProjects, amountPledged, category, journalismSubcategory]
and a follow-up test case is constructed by adding the following parameters [goal:<$1,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$1,000 to $10,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$10,000 to $100,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$100,000 to $1,000,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:>$1,000,000 goal]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1487 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, raised, category, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, raised, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [location]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR528 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, recommendedForMe, goal:<$1,000 goal, raised, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$1,000 to $10,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$10,000 to $100,000 goal]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR901 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, filterProjects, raised, category, publishingSubcategory]
and a follow-up test case is constructed by adding the following parameters [goal:<$1,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$1,000 to $10,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$10,000 to $100,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$100,000 to $1,000,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:>$1,000,000 goal]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR165 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal:<$1,000 goal, raised, category, craftsSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$1,000 to $10,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$10,000 to $100,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$100,000 to $1,000,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:>$1,000,000 goal]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR472 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, goal, raised, category, craftsSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
and a follow-up test case is constructed by removing the following parameters [raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [amountPledged, craftsSubcategory, following, goal, location]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR278 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, category, musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, location, projectsIHaveBacked, searchQuery]
and a follow-up test case is constructed by removing the following parameters [musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1307 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, artSubcategory]
and a follow-up test case is constructed by removing the following parameters [artSubcategory, location, projectsIHaveBacked, raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
and a follow-up test case is constructed by removing the following parameters [following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1930 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, goal, projectsIHaveBacked, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [following, raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR81 (DISJOINT_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, goal, raised, category:FilmAndVideo]
and a follow-up test case is constructed by changing the value of the following parameters [category:All categories]
and a follow-up test case is constructed by changing the value of the following parameters [category:Art]
and a follow-up test case is constructed by changing the value of the following parameters [category:Comics]
and a follow-up test case is constructed by changing the value of the following parameters [category:Crafts]
and a follow-up test case is constructed by changing the value of the following parameters [category:Dance]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1171 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, raised, category, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [following, raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [filterProjects, location, searchQuery, technologySubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1051 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, raised, category, musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged, raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [musicSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR872 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, filterProjects, raised, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [publishingSubcategory, savedProjects]
and a follow-up test case is constructed by removing the following parameters [location, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1326 (DISJOINT_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked:showProjectsIHaveBacked, recommendedForMe, filterProjects, raised, category, artSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [projectsIHaveBacked:showProjectsIHaveNotBacked]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR766 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, raised, category, foodSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, foodSubcategory, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [location, raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1709 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, recommendedForMe, filterProjects, category, fashionSubcategory]
and a follow-up test case is constructed by removing the following parameters [fashionSubcategory, following]
and a follow-up test case is constructed by removing the following parameters [filterProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1844 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, category]
and a follow-up test case is constructed by adding the following parameters [goal:<$1,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$1,000 to $10,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$10,000 to $100,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$100,000 to $1,000,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:>$1,000,000 goal]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR282 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, category, musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [following, location, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [musicSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR266 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, artSubcategory]
and a follow-up test case is constructed by removing the following parameters [artSubcategory, location]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, goal, projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR690 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, gamesSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, gamesSubcategory, raised]
and a follow-up test case is constructed by removing the following parameters [filterProjects, projectsIHaveBacked, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2090 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, raised, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, location]
and a follow-up test case is constructed by removing the following parameters [following, projectsIHaveBacked, raised, savedProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2029 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, goal, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged, location, projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR556 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, fashionSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, fashionSubcategory, following, projectsIHaveBacked, savedProjects]
and a follow-up test case is constructed by removing the following parameters [filterProjects, goal]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1956 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, goal, location, projectsIHaveBacked, raised, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1741 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [raised]
and a follow-up test case is constructed by removing the following parameters [following, goal, searchQuery]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1213 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category, musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [musicSubcategory, raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [location]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1746 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, projectsIHaveBacked, searchQuery]
and a follow-up test case is constructed by removing the following parameters [goal, raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1082 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, goal, category, photographySubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, goal]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [photographySubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1618 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, raised, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [publishingSubcategory, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1308 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, artSubcategory]
and a follow-up test case is constructed by removing the following parameters [location, projectsIHaveBacked, raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [artSubcategory, following]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1722 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, category]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, savedProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR264 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, artSubcategory]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [artSubcategory, filterProjects, goal]
and a follow-up test case is constructed by removing the following parameters [location]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR924 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [raised]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, searchQuery]
and a follow-up test case is constructed by removing the following parameters [location, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1800 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [goal, publishingSubcategory, raised]
and a follow-up test case is constructed by removing the following parameters [following, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1938 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal:<$1,000 goal, raised, category]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$1,000 to $10,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$10,000 to $100,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$100,000 to $1,000,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:>$1,000,000 goal]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR367 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, goal, category, designSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, designSubcategory, goal, location, searchQuery]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1738 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, goal, projectsIHaveBacked, raised, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1886 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, category]
and a follow-up test case is constructed by removing the following parameters [filterProjects, location, projectsIHaveBacked, searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR977 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, category, journalismSubcategory]
and a follow-up test case is constructed by adding the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1895 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, location, searchQuery]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1980 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged, goal, projectsIHaveBacked, savedProjects]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR797 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, category, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, projectsIHaveBacked, savedProjects, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1195 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects:showProjectsIHaveNotSaved, following, recommendedForMe, filterProjects, raised, category, technologySubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [savedProjects:showProjectsIHaveSaved]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1777 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, category, photographySubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, photographySubcategory, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
and a follow-up test case is constructed by removing the following parameters [location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2156 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, raised, category]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
and a follow-up test case is constructed by removing the following parameters [following, raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR634 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, goal, location, projectsIHaveBacked, technologySubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1798 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, category, photographySubcategory]
and a follow-up test case is constructed by adding the following parameters [following:showProjectsIFollow]
and a follow-up test case is constructed by changing the value of the following parameters [following:showProjectsIDoNotFollow]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2047 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, following, goal, projectsIHaveBacked, raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1036 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, goal, category, gamesSubcategory]
and a follow-up test case is constructed by removing the following parameters [goal, location, savedProjects]
and a follow-up test case is constructed by removing the following parameters [amountPledged, gamesSubcategory, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1578 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, photographySubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, location, photographySubcategory]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, raised, savedProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR479 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, goal, raised, category, craftsSubcategory]
and a follow-up test case is constructed by removing the following parameters [location]
and a follow-up test case is constructed by removing the following parameters [following, goal, savedProjects]
and a follow-up test case is constructed by removing the following parameters [craftsSubcategory, filterProjects]
and a follow-up test case is constructed by removing the following parameters [raised]
and a follow-up test case is constructed by removing the following parameters [amountPledged, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2102 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, raised, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following]
and a follow-up test case is constructed by removing the following parameters [raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [filterProjects, location, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2122 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, following, location, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [goal, projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR46 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by removing the following parameters [filmAndVideoSubcategory, goal, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1883 (COMPLETE_EXTEND):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, category]
and a follow-up test case is constructed by adding the following parameters [raised:<75% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:75% to 100% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:>100% raised]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1234 (COMPLETE_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category, musicSubcategory]
and a follow-up test case is constructed by adding the following parameters [goal:<$1,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$1,000 to $10,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$10,000 to $100,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$100,000 to $1,000,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:>$1,000,000 goal]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR491 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, goal, raised, category, craftsSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, goal, raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [filterProjects, location, searchQuery]
and a follow-up test case is constructed by removing the following parameters [craftsSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1694 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, category, filmAndVideoSubcategory:Action]
and a follow-up test case is constructed by changing the value of the following parameters [filmAndVideoSubcategory:Animation]
and a follow-up test case is constructed by changing the value of the following parameters [filmAndVideoSubcategory:Comedy]
and a follow-up test case is constructed by changing the value of the following parameters [filmAndVideoSubcategory:Documentary]
and a follow-up test case is constructed by changing the value of the following parameters [filmAndVideoSubcategory:Drama]
and a follow-up test case is constructed by changing the value of the following parameters [filmAndVideoSubcategory:Experimental]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1628 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, raised, category, publishingSubcategory]
and a follow-up test case is constructed by adding the following parameters [projectsIHaveBacked:showProjectsIHaveBacked]
and a follow-up test case is constructed by changing the value of the following parameters [projectsIHaveBacked:showProjectsIHaveNotBacked]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR481 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, goal, raised, category, craftsSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, craftsSubcategory, filterProjects, following, location, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [goal, raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1363 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category:All categories]
and a follow-up test case is constructed by changing the value of the following parameters [category:Art]
and a follow-up test case is constructed by changing the value of the following parameters [category:Comics]
and a follow-up test case is constructed by changing the value of the following parameters [category:Crafts]
and a follow-up test case is constructed by changing the value of the following parameters [category:Dance]
and a follow-up test case is constructed by changing the value of the following parameters [category:Design]
and a follow-up test case is constructed by changing the value of the following parameters [category:Fashion]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR740 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category, danceSubcategory]
and a follow-up test case is constructed by removing the following parameters [danceSubcategory, projectsIHaveBacked, searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged, location, raised]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1850 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, category]
and a follow-up test case is constructed by removing the following parameters [following, savedProjects]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR151 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category, craftsSubcategory]
and a follow-up test case is constructed by removing the following parameters [craftsSubcategory, filterProjects, location, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [following, goal, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR867 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, filterProjects, raised, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [location]
and a follow-up test case is constructed by removing the following parameters [filterProjects, publishingSubcategory, raised, savedProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1549 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, goal, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [following, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1817 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [goal, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR45 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filmAndVideoSubcategory, following, savedProjects]
and a follow-up test case is constructed by removing the following parameters [goal, projectsIHaveBacked, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR630 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [goal, location]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, technologySubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1510 (COMPLETE_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, raised, category, theaterSubcategory]
and a follow-up test case is constructed by adding the following parameters [projectsIHaveBacked:showProjectsIHaveBacked]
and a follow-up test case is constructed by changing the value of the following parameters [projectsIHaveBacked:showProjectsIHaveNotBacked]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR17 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category]
and a follow-up test case is constructed by adding the following parameters [goal, photographySubcategory]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1237 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, category, artSubcategory]
and a follow-up test case is constructed by removing the following parameters [artSubcategory, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR563 (DISJOINT_EXTEND):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, fashionSubcategory:Accessories]
and a follow-up test case is constructed by changing the value of the following parameters [fashionSubcategory:Apparel]
and a follow-up test case is constructed by changing the value of the following parameters [fashionSubcategory:Childrenswear]
and a follow-up test case is constructed by changing the value of the following parameters [fashionSubcategory:Couture]
and a follow-up test case is constructed by changing the value of the following parameters [fashionSubcategory:Footwear]
and a follow-up test case is constructed by changing the value of the following parameters [fashionSubcategory:Jewelry]
and a follow-up test case is constructed by changing the value of the following parameters [fashionSubcategory:Pet Fashion]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1470 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, foodSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, goal, searchQuery]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [foodSubcategory, projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1853 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, category]
and a follow-up test case is constructed by removing the following parameters [following, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [savedProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1567 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal:<$1,000 goal, category, publishingSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$1,000 to $10,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$10,000 to $100,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$100,000 to $1,000,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:>$1,000,000 goal]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR383 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, goal, category, designSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, designSubcategory, goal, location, savedProjects]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR298 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects:showProjectsIHaveNotSaved, following, projectsIHaveBacked, recommendedForMe, category, musicSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [savedProjects:showProjectsIHaveSaved]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR90 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [filmAndVideoSubcategory, savedProjects]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR847 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [filterProjects, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [goal, location, raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR78 (DISJOINT_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, goal, raised:<75% raised, category]
and a follow-up test case is constructed by changing the value of the following parameters [raised:75% to 100% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:>100% raised]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1436 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, recommendedForMe, filterProjects, amountPledged, goal, raised, category, fashionSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, location]
and a follow-up test case is constructed by removing the following parameters [amountPledged, fashionSubcategory, following, goal, searchQuery]
and a follow-up test case is constructed by removing the following parameters [raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR692 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, gamesSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, gamesSubcategory, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [raised]
and a follow-up test case is constructed by removing the following parameters [following, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR113 (COMPLETE_EXTEND):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by adding the following parameters [goal:<$1,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$1,000 to $10,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$10,000 to $100,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$100,000 to $1,000,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:>$1,000,000 goal]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1021 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, goal, category, gamesSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, gamesSubcategory, location, searchQuery]
and a follow-up test case is constructed by removing the following parameters [goal, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1860 (SHUFFLING_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy:Popularity, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, category]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Magic]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Newest]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:EndDate]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:MostFunded]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:MostBacked]
then the source and the follow-up output(s) should have the same items, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1974 (DISJOINT_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following:showProjectsIDoNotFollow, projectsIHaveBacked, recommendedForMe, amountPledged, goal, raised, category]
and a follow-up test case is constructed by changing the value of the following parameters [following:showProjectsIFollow]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR374 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, goal, category, designSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, designSubcategory, goal, location, savedProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1592 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, photographySubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, location, raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [photographySubcategory, projectsIHaveBacked, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR938 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category, comicsSubcategory]
and a follow-up test case is constructed by removing the following parameters [comicsSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, projectsIHaveBacked, raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2051 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [following, goal, raised]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR21 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects:liveProjects, raised, category]
and a follow-up test case is constructed by changing the value of the following parameters [filterProjects:successfulProjects]
and a follow-up test case is constructed by changing the value of the following parameters [filterProjects:upcomingProjects]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1147 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, category, gamesSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, gamesSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, location, projectsIHaveBacked, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1161 (DISJOINT_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked:showProjectsIHaveNotBacked, recommendedForMe, amountPledged, category, gamesSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [projectsIHaveBacked:showProjectsIHaveBacked]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1867 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, category]
and a follow-up test case is constructed by adding the following parameters [goal:<$1,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$1,000 to $10,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$10,000 to $100,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$100,000 to $1,000,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:>$1,000,000 goal]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1743 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, goal]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, raised]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR194 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, designSubcategory]
and a follow-up test case is constructed by removing the following parameters [designSubcategory, filterProjects, following, projectsIHaveBacked, searchQuery]
and a follow-up test case is constructed by removing the following parameters [raised]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR348 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, raised, category, journalismSubcategory]
and a follow-up test case is constructed by removing the following parameters [journalismSubcategory, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [following, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [goal, location, raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1277 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, raised, category, fashionSubcategory]
and a follow-up test case is constructed by removing the following parameters [location, raised]
and a follow-up test case is constructed by removing the following parameters [fashionSubcategory, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [savedProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1219 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category, musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [raised]
and a follow-up test case is constructed by removing the following parameters [location]
and a follow-up test case is constructed by removing the following parameters [following, savedProjects]
and a follow-up test case is constructed by removing the following parameters [musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1039 (SHUFFLING_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy:Popularity, projectsWeLove, savedProjects, recommendedForMe, amountPledged, goal, category, gamesSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Magic]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Newest]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:EndDate]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:MostFunded]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:MostBacked]
then the source and the follow-up output(s) should have the same items, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR64 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [following, goal, location, raised, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1490 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, raised, category, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [amountPledged, location, raised, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR741 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category, danceSubcategory]
and a follow-up test case is constructed by removing the following parameters [danceSubcategory, projectsIHaveBacked, raised, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [location]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1976 (DISJOINT_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal:<$1,000 goal, raised, category]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$1,000 to $10,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$10,000 to $100,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$100,000 to $1,000,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:>$1,000,000 goal]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1661 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, category, publishingSubcategory:Poetry]
and a follow-up test case is constructed by changing the value of the following parameters [publishingSubcategory:Academic]
and a follow-up test case is constructed by changing the value of the following parameters [publishingSubcategory:Anthologies]
and a follow-up test case is constructed by changing the value of the following parameters [publishingSubcategory:Art Books]
and a follow-up test case is constructed by changing the value of the following parameters [publishingSubcategory:Calendars]
and a follow-up test case is constructed by changing the value of the following parameters [publishingSubcategory:Children's Books]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1101 (DISJOINT_EXTEND):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, goal:<$1,000 goal, category, photographySubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$1,000 to $10,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$10,000 to $100,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$100,000 to $1,000,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:>$1,000,000 goal]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR366 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, raised, category, journalismSubcategory]
and a follow-up test case is constructed by adding the following parameters [amountPledged:<$1,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$10,000 to $100,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$100,000 to $1,000,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:>$1,000,000 pledged]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR294 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, category, musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, location, projectsIHaveBacked, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [musicSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1687 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, location, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
and a follow-up test case is constructed by removing the following parameters [filmAndVideoSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1168 (COMPLETE_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, category, gamesSubcategory]
and a follow-up test case is constructed by adding the following parameters [raised:<75% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:75% to 100% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:>100% raised]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR869 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, filterProjects, raised, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, publishingSubcategory, raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [location, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR804 (SHUFFLING_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy:NearMe, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, category, theaterSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Magic]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Popularity]
then the source and the follow-up output(s) should have the same items, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1526 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, category, danceSubcategory]
and a follow-up test case is constructed by removing the following parameters [danceSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, searchQuery]
and a follow-up test case is constructed by removing the following parameters [following, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR257 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, artSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, goal, location, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
and a follow-up test case is constructed by removing the following parameters [artSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1185 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, raised, category, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, location, savedProjects, searchQuery, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1868 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR518 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, recommendedForMe, goal, raised, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by removing the following parameters [goal, raised]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
and a follow-up test case is constructed by removing the following parameters [location]
and a follow-up test case is constructed by removing the following parameters [filmAndVideoSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1637 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, goal, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [location]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR637 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [location]
and a follow-up test case is constructed by removing the following parameters [goal]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR37 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, goal, projectsIHaveBacked, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filmAndVideoSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1442 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, recommendedForMe, filterProjects, amountPledged:<$1,000 pledged, goal, raised, category, fashionSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$10,000 to $100,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$100,000 to $1,000,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:>$1,000,000 pledged]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR965 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, category, journalismSubcategory]
and a follow-up test case is constructed by removing the following parameters [journalismSubcategory, location, projectsIHaveBacked, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1702 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, recommendedForMe, filterProjects, category, fashionSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
and a follow-up test case is constructed by removing the following parameters [fashionSubcategory, following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR344 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, raised, category, journalismSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, goal, location, raised]
and a follow-up test case is constructed by removing the following parameters [journalismSubcategory, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1995 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, goal, projectsIHaveBacked, savedProjects]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2014 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, following, goal, location, projectsIHaveBacked, raised, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1575 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, photographySubcategory]
and a follow-up test case is constructed by removing the following parameters [following, location, projectsIHaveBacked, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [photographySubcategory, raised]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2049 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, following, goal, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1428 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, recommendedForMe, filterProjects, amountPledged, goal, raised, category, fashionSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, fashionSubcategory, filterProjects, following, goal, location, raised, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR149 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category, craftsSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, goal, searchQuery]
and a follow-up test case is constructed by removing the following parameters [location, projectsIHaveBacked, raised]
and a follow-up test case is constructed by removing the following parameters [amountPledged, craftsSubcategory, following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR319 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, raised, category, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [goal, savedProjects]
and a follow-up test case is constructed by removing the following parameters [following, location, projectsIHaveBacked, raised, theaterSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1933 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, goal, raised]
and a follow-up test case is constructed by removing the following parameters [following, projectsIHaveBacked, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1392 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, category, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, savedProjects, searchQuery, technologySubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1965 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [following, goal, location, projectsIHaveBacked, raised]
and a follow-up test case is constructed by removing the following parameters [amountPledged, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR6 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category]
and a follow-up test case is constructed by removing the following parameters [filterProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [location, raised]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1054 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, raised, category, musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, savedProjects]
and a follow-up test case is constructed by removing the following parameters [raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [musicSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1961 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [following, goal, location, raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1040 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, goal:<$1,000 goal, category, gamesSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$1,000 to $10,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$10,000 to $100,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$100,000 to $1,000,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:>$1,000,000 goal]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1824 (DISJOINT_EXTEND):
if a source test case is run with the inputs [sortBy, projectsWeLove, following:showProjectsIDoNotFollow, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category, publishingSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [following:showProjectsIFollow]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR744 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category, danceSubcategory]
and a follow-up test case is constructed by adding the following parameters [filterProjects]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1602 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following:showProjectsIFollow, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, photographySubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [following:showProjectsIDoNotFollow]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1629 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, raised, category, publishingSubcategory]
and a follow-up test case is constructed by adding the following parameters [goal:<$1,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$1,000 to $10,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$10,000 to $100,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$100,000 to $1,000,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:>$1,000,000 goal]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1438 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, recommendedForMe, filterProjects, amountPledged, goal, raised, category, fashionSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, fashionSubcategory, filterProjects, following, goal, raised]
and a follow-up test case is constructed by removing the following parameters [location]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1026 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, goal, category, gamesSubcategory]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged, gamesSubcategory, location, savedProjects]
and a follow-up test case is constructed by removing the following parameters [goal]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR425 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal:<$1,000 goal, raised, category, designSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$1,000 to $10,000 goal]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR642 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [location, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, goal, projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1726 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, category]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, savedProjects]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR15 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects, location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2132 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, goal, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, location, searchQuery]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR375 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, goal, category, designSubcategory]
and a follow-up test case is constructed by removing the following parameters [goal, savedProjects]
and a follow-up test case is constructed by removing the following parameters [amountPledged, designSubcategory, location, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR843 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [location, raised]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, goal]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR162 (SHUFFLING_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy:Popularity, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category, craftsSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Magic]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Newest]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:EndDate]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:MostFunded]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:MostBacked]
then the source and the follow-up output(s) should have the same items, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2050 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, goal]
and a follow-up test case is constructed by removing the following parameters [raised]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [filterProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1065 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, raised, category, musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [musicSubcategory, searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged, raised, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1914 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, following, raised, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [goal]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1614 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, raised, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, publishingSubcategory, searchQuery]
and a follow-up test case is constructed by removing the following parameters [raised]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2080 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, raised, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, raised]
and a follow-up test case is constructed by removing the following parameters [filterProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [location, projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR731 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category, danceSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, danceSubcategory, location, projectsIHaveBacked, raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2013 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [following, raised]
and a follow-up test case is constructed by removing the following parameters [location]
and a follow-up test case is constructed by removing the following parameters [filterProjects, goal, projectsIHaveBacked, searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR551 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, fashionSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, goal, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [fashionSubcategory, savedProjects]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1887 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [location, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1564 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged, savedProjects]
and a follow-up test case is constructed by removing the following parameters [goal, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR986 (COMPLETE_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, category, journalismSubcategory]
and a follow-up test case is constructed by adding the following parameters [following:showProjectsIFollow]
and a follow-up test case is constructed by changing the value of the following parameters [following:showProjectsIDoNotFollow]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1299 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, artSubcategory]
and a follow-up test case is constructed by removing the following parameters [artSubcategory, projectsIHaveBacked, raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [location]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR918 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, publishingSubcategory, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1740 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [following, projectsIHaveBacked, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
and a follow-up test case is constructed by removing the following parameters [goal]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR490 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, goal, raised, category, craftsSubcategory]
and a follow-up test case is constructed by removing the following parameters [craftsSubcategory, filterProjects, following, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [goal, location, raised]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR420 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, raised, category, designSubcategory]
and a follow-up test case is constructed by removing the following parameters [designSubcategory, searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
and a follow-up test case is constructed by removing the following parameters [goal]
and a follow-up test case is constructed by removing the following parameters [following, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [location, raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2023 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, goal, location, raised]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, searchQuery]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR704 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, gamesSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [gamesSubcategory]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1309 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, artSubcategory]
and a follow-up test case is constructed by removing the following parameters [artSubcategory, filterProjects]
and a follow-up test case is constructed by removing the following parameters [following, projectsIHaveBacked, savedProjects]
and a follow-up test case is constructed by removing the following parameters [location, raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1580 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, photographySubcategory]
and a follow-up test case is constructed by removing the following parameters [raised, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects, location]
and a follow-up test case is constructed by removing the following parameters [photographySubcategory]
and a follow-up test case is constructed by removing the following parameters [following, projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1615 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, raised, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
and a follow-up test case is constructed by removing the following parameters [publishingSubcategory, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR193 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, designSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, projectsIHaveBacked, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [designSubcategory, following, raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2032 (SHUFFLING_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy:Popularity, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Magic]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Newest]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:EndDate]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:MostFunded]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:MostBacked]
then the source and the follow-up output(s) should have the same items, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1560 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, goal, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [amountPledged, publishingSubcategory, savedProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1160 (SHUFFLING_EXTEND):
if a source test case is run with the inputs [location, sortBy:Popularity, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, category, gamesSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Magic]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Newest]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:EndDate]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:MostFunded]
then the source and the follow-up output(s) should have the same items, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR103 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [filmAndVideoSubcategory]
and a follow-up test case is constructed by removing the following parameters [following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR543 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, fashionSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, fashionSubcategory, filterProjects, goal, projectsIHaveBacked, savedProjects]
and a follow-up test case is constructed by removing the following parameters [following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1876 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1749 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, projectsIHaveBacked, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [goal]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1993 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category]
and a follow-up test case is constructed by removing the following parameters [filterProjects, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [amountPledged, goal, searchQuery]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR640 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, goal, projectsIHaveBacked, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2164 (DISJOINT_EXTEND):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following:showProjectsIFollow, recommendedForMe, filterProjects, raised, category]
and a follow-up test case is constructed by changing the value of the following parameters [following:showProjectsIDoNotFollow]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1683 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
and a follow-up test case is constructed by removing the following parameters [filmAndVideoSubcategory, location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1340 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category]
and a follow-up test case is constructed by removing the following parameters [following, projectsIHaveBacked, savedProjects]
and a follow-up test case is constructed by removing the following parameters [amountPledged, raised]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR209 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, category, craftsSubcategory]
and a follow-up test case is constructed by removing the following parameters [craftsSubcategory]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR5 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category]
and a follow-up test case is constructed by removing the following parameters [location, projectsIHaveBacked, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
and a follow-up test case is constructed by removing the following parameters [raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1862 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects:showProjectsIHaveNotSaved, following, projectsIHaveBacked, recommendedForMe, category]
and a follow-up test case is constructed by changing the value of the following parameters [savedProjects:showProjectsIHaveSaved]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR324 (SHUFFLING_EXTEND):
if a source test case is run with the inputs [location, sortBy:Popularity, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, raised, category, theaterSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Magic]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Newest]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:EndDate]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:MostFunded]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:MostBacked]
then the source and the follow-up output(s) should have the same items, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2103 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, raised, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, following, location, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1911 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, category]
and a follow-up test case is constructed by adding the following parameters [goal:<$1,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$1,000 to $10,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$10,000 to $100,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$100,000 to $1,000,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:>$1,000,000 goal]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1336 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, projectsIHaveBacked, raised]
and a follow-up test case is constructed by removing the following parameters [savedProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR755 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, raised, category, foodSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, foodSubcategory, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged, location]
and a follow-up test case is constructed by removing the following parameters [raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR735 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category, danceSubcategory]
and a follow-up test case is constructed by removing the following parameters [danceSubcategory, location, projectsIHaveBacked, raised, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1018 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category, artSubcategory]
and a follow-up test case is constructed by adding the following parameters [goal:<$1,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$1,000 to $10,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$10,000 to $100,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$100,000 to $1,000,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:>$1,000,000 goal]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1052 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, raised, category, musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, searchQuery]
and a follow-up test case is constructed by removing the following parameters [raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [musicSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR605 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, recommendedForMe, filterProjects, amountPledged, category, journalismSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, journalismSubcategory, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR896 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, filterProjects, raised, category, publishingSubcategory:Academic]
and a follow-up test case is constructed by changing the value of the following parameters [publishingSubcategory:Anthologies]
and a follow-up test case is constructed by changing the value of the following parameters [publishingSubcategory:Art Books]
and a follow-up test case is constructed by changing the value of the following parameters [publishingSubcategory:Calendars]
and a follow-up test case is constructed by changing the value of the following parameters [publishingSubcategory:Children's Books]
and a follow-up test case is constructed by changing the value of the following parameters [publishingSubcategory:Comedy]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR72 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [following, raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [goal]
and a follow-up test case is constructed by removing the following parameters [location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR627 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, recommendedForMe, filterProjects, amountPledged, category, journalismSubcategory]
and a follow-up test case is constructed by adding the following parameters [projectsIHaveBacked:showProjectsIHaveBacked]
and a follow-up test case is constructed by changing the value of the following parameters [projectsIHaveBacked:showProjectsIHaveNotBacked]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1174 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, raised, category, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, location, raised, savedProjects, searchQuery, technologySubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1189 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, raised, category, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [location, searchQuery, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, raised, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR279 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, category, musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, location, musicSubcategory, projectsIHaveBacked, savedProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2108 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked:showProjectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, raised, category]
and a follow-up test case is constructed by changing the value of the following parameters [projectsIHaveBacked:showProjectsIHaveNotBacked]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1559 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, searchQuery]
and a follow-up test case is constructed by removing the following parameters [goal, projectsIHaveBacked, publishingSubcategory, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR404 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, raised, category, designSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, designSubcategory, following, goal, location, projectsIHaveBacked, raised, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1386 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, category, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, projectsIHaveBacked, savedProjects, searchQuery, technologySubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR226 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, recommendedForMe, filterProjects, amountPledged, category, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [searchQuery, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1996 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, goal]
and a follow-up test case is constructed by removing the following parameters [filterProjects, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR617 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, recommendedForMe, filterProjects, amountPledged, category, journalismSubcategory]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
and a follow-up test case is constructed by removing the following parameters [filterProjects, journalismSubcategory, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR138 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category, craftsSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, craftsSubcategory, filterProjects, location, searchQuery]
and a follow-up test case is constructed by removing the following parameters [goal, projectsIHaveBacked, raised]
and a follow-up test case is constructed by removing the following parameters [following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR443 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, goal, category, comicsSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, comicsSubcategory, following, goal, location, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1857 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, category]
and a follow-up test case is constructed by removing the following parameters [following, projectsIHaveBacked, searchQuery]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR747 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, amountPledged:<$1,000 pledged, raised, category, danceSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$10,000 to $100,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$100,000 to $1,000,000 pledged]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR799 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, category, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, savedProjects, searchQuery, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1056 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, raised, category, musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [musicSubcategory, raised]
and a follow-up test case is constructed by removing the following parameters [amountPledged, savedProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR63 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [goal, location, savedProjects]
and a follow-up test case is constructed by removing the following parameters [raised]
and a follow-up test case is constructed by removing the following parameters [following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1410 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked:showProjectsIHaveBacked, recommendedForMe, amountPledged, category, technologySubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [projectsIHaveBacked:showProjectsIHaveNotBacked]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2048 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [following, goal, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2085 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, raised, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [location]
and a follow-up test case is constructed by removing the following parameters [following, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR754 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, raised, category, foodSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, foodSubcategory, raised]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [location, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1634 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, goal, location, projectsIHaveBacked, searchQuery]
and a follow-up test case is constructed by removing the following parameters [publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR198 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked:showProjectsIHaveNotBacked, recommendedForMe, filterProjects, raised, category, designSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [projectsIHaveBacked:showProjectsIHaveBacked]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR463 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following:showProjectsIFollow, recommendedForMe, filterProjects, amountPledged, goal, category, comicsSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [following:showProjectsIDoNotFollow]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1474 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, foodSubcategory]
and a follow-up test case is constructed by adding the following parameters [filterProjects]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR444 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, goal, category, comicsSubcategory]
and a follow-up test case is constructed by removing the following parameters [location, savedProjects]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following]
and a follow-up test case is constructed by removing the following parameters [amountPledged, comicsSubcategory, searchQuery]
and a follow-up test case is constructed by removing the following parameters [goal]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR638 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [location, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [goal]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2006 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category]
and a follow-up test case is constructed by adding the following parameters [following:showProjectsIFollow]
and a follow-up test case is constructed by changing the value of the following parameters [following:showProjectsIDoNotFollow]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1094 (SHUFFLING_EXTEND):
if a source test case is run with the inputs [sortBy:NearMe, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, goal, category, photographySubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Magic]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Popularity]
then the source and the follow-up output(s) should have the same items, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2097 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, raised, category]
and a follow-up test case is constructed by removing the following parameters [location, raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, following, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1925 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, following, goal, projectsIHaveBacked, searchQuery]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR894 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects:showProjectsIHaveNotSaved, recommendedForMe, filterProjects, raised, category, publishingSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [savedProjects:showProjectsIHaveSaved]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2084 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, raised, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, following, projectsIHaveBacked, raised, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1223 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category, musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, location, projectsIHaveBacked, raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [musicSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1177 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, raised, category, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, location, savedProjects, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [raised]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR582 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category, musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, goal, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR635 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, goal, location]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [technologySubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1926 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [filterProjects, projectsIHaveBacked, raised, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, goal]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR295 (SHUFFLING_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy:Popularity, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, category, musicSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Magic]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Newest]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:EndDate]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:MostFunded]
then the source and the follow-up output(s) should have the same items, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1432 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, recommendedForMe, filterProjects, amountPledged, goal, raised, category, fashionSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, fashionSubcategory, filterProjects, following, goal, searchQuery]
and a follow-up test case is constructed by removing the following parameters [location, raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR391 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, goal:<$1,000 goal, category, designSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$1,000 to $10,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$10,000 to $100,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$100,000 to $1,000,000 goal]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2157 (SHUFFLING_EXTEND):
if a source test case is run with the inputs [sortBy:Popularity, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, raised, category]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Magic]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Newest]
then the source and the follow-up output(s) should have the same items, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2116 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, goal, location, projectsIHaveBacked, publishingSubcategory, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
and a follow-up test case is constructed by removing the following parameters [following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1045 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, goal, category, gamesSubcategory]
and a follow-up test case is constructed by adding the following parameters [projectsIHaveBacked:showProjectsIHaveBacked]
and a follow-up test case is constructed by changing the value of the following parameters [projectsIHaveBacked:showProjectsIHaveNotBacked]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1831 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, savedProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2052 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
and a follow-up test case is constructed by removing the following parameters [following, goal, projectsIHaveBacked, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR978 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, category, journalismSubcategory]
and a follow-up test case is constructed by adding the following parameters [filterProjects]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR139 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category, craftsSubcategory]
and a follow-up test case is constructed by removing the following parameters [craftsSubcategory, goal]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, following, location, projectsIHaveBacked, raised]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR689 (COMPLETE_EXTEND):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, publishingSubcategory]
and a follow-up test case is constructed by adding the following parameters [raised:<75% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:75% to 100% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:>100% raised]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR633 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [goal, location]
and a follow-up test case is constructed by removing the following parameters [amountPledged, projectsIHaveBacked, technologySubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR338 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, raised, category, journalismSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, goal, raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [journalismSubcategory, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [location, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1048 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, raised, category, musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [raised, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
and a follow-up test case is constructed by removing the following parameters [musicSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR275 (COMPLETE_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, artSubcategory]
and a follow-up test case is constructed by adding the following parameters [savedProjects:showProjectsIHaveSaved]
and a follow-up test case is constructed by changing the value of the following parameters [savedProjects:showProjectsIHaveNotSaved]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1012 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following:showProjectsIDoNotFollow, projectsIHaveBacked, recommendedForMe, raised, category, artSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [following:showProjectsIFollow]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2107 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects:showProjectsIHaveSaved, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, raised, category]
and a follow-up test case is constructed by changing the value of the following parameters [savedProjects:showProjectsIHaveNotSaved]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR453 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, goal, category, comicsSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, location, savedProjects]
and a follow-up test case is constructed by removing the following parameters [comicsSubcategory, filterProjects]
and a follow-up test case is constructed by removing the following parameters [goal]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR451 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, goal, category, comicsSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, goal]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [comicsSubcategory, filterProjects, location, searchQuery]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR657 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, goal, publishingSubcategory, savedProjects]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR132 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, category]
and a follow-up test case is constructed by adding the following parameters [following:showProjectsIFollow]
and a follow-up test case is constructed by changing the value of the following parameters [following:showProjectsIDoNotFollow]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR172 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged:<$1,000 pledged, goal, raised, category, craftsSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$10,000 to $100,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$100,000 to $1,000,000 pledged]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR576 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category, musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [raised]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, goal, musicSubcategory, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR761 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, raised, category, foodSubcategory]
and a follow-up test case is constructed by removing the following parameters [raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, foodSubcategory, location]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR259 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, artSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, artSubcategory, filterProjects, goal, location, projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR448 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, goal, category, comicsSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, goal, location, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [comicsSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1664 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, category, comicsSubcategory]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [comicsSubcategory, location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2111 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged:<$1,000 pledged, raised, category]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$10,000 to $100,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$100,000 to $1,000,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:>$1,000,000 pledged]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1335 (COMPLETE_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, artSubcategory]
and a follow-up test case is constructed by adding the following parameters [goal:<$1,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$1,000 to $10,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$10,000 to $100,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$100,000 to $1,000,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:>$1,000,000 goal]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1577 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, photographySubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, location, photographySubcategory, projectsIHaveBacked, raised, savedProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1571 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked:showProjectsIHaveBacked, recommendedForMe, amountPledged, goal, category, publishingSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [projectsIHaveBacked:showProjectsIHaveNotBacked]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR53 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked:showProjectsIHaveNotBacked, recommendedForMe, amountPledged, goal, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [projectsIHaveBacked:showProjectsIHaveBacked]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1268 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, raised, category, fashionSubcategory]
and a follow-up test case is constructed by removing the following parameters [fashionSubcategory, location, projectsIHaveBacked, raised, savedProjects, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR499 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects:showProjectsIHaveNotSaved, following, recommendedForMe, filterProjects, amountPledged, goal, raised, category, craftsSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [savedProjects:showProjectsIHaveSaved]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR183 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, designSubcategory]
and a follow-up test case is constructed by removing the following parameters [designSubcategory, filterProjects, following, raised, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR708 (SHUFFLING_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy:NearMe, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, gamesSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Magic]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Popularity]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Newest]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:EndDate]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:MostFunded]
then the source and the follow-up output(s) should have the same items, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1280 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, raised, category, fashionSubcategory]
and a follow-up test case is constructed by removing the following parameters [fashionSubcategory, location, projectsIHaveBacked, raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR449 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, goal, category, comicsSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, goal, location, savedProjects]
and a follow-up test case is constructed by removing the following parameters [amountPledged, comicsSubcategory, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR274 (DISJOINT_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, artSubcategory:Ceramics]
and a follow-up test case is constructed by changing the value of the following parameters [artSubcategory:Conceptual Art]
and a follow-up test case is constructed by changing the value of the following parameters [artSubcategory:Digital Art]
and a follow-up test case is constructed by changing the value of the following parameters [artSubcategory:Illustration]
and a follow-up test case is constructed by changing the value of the following parameters [artSubcategory:Installations]
and a follow-up test case is constructed by changing the value of the following parameters [artSubcategory:Mixed Media]
and a follow-up test case is constructed by changing the value of the following parameters [artSubcategory:Painting]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1999 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects:liveProjects, amountPledged, goal, category]
and a follow-up test case is constructed by changing the value of the following parameters [filterProjects:successfulProjects]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR112 (COMPLETE_EXTEND):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by adding the following parameters [raised:<75% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:75% to 100% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:>100% raised]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR526 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, recommendedForMe, goal, raised:<75% raised, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [raised:75% to 100% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:>100% raised]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2021 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, goal, location, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1808 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [raised]
and a follow-up test case is constructed by removing the following parameters [filterProjects, goal]
and a follow-up test case is constructed by removing the following parameters [publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1257 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects:liveProjects, category, artSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [filterProjects:successfulProjects]
and a follow-up test case is constructed by changing the value of the following parameters [filterProjects:upcomingProjects]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR210 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, category, craftsSubcategory]
and a follow-up test case is constructed by removing the following parameters [craftsSubcategory, projectsIHaveBacked, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1203 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category, musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [location, musicSubcategory, projectsIHaveBacked, raised, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR477 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, goal, raised, category, craftsSubcategory]
and a follow-up test case is constructed by removing the following parameters [goal, location, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
and a follow-up test case is constructed by removing the following parameters [following, raised]
and a follow-up test case is constructed by removing the following parameters [craftsSubcategory]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR999 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category, artSubcategory]
and a follow-up test case is constructed by removing the following parameters [artSubcategory, following, projectsIHaveBacked, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1803 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
and a follow-up test case is constructed by removing the following parameters [following, goal, projectsIHaveBacked, publishingSubcategory, raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1551 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, goal, publishingSubcategory, savedProjects]
and a follow-up test case is constructed by removing the following parameters [following, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR833 (DISJOINT_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, goal:<$1,000 goal, category, foodSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$1,000 to $10,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$10,000 to $100,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$100,000 to $1,000,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:>$1,000,000 goal]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1627 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged:<$1,000 pledged, raised, category, publishingSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$1,000 to $10,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$10,000 to $100,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:$100,000 to $1,000,000 pledged]
and a follow-up test case is constructed by changing the value of the following parameters [amountPledged:>$1,000,000 pledged]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1207 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category, musicSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, musicSubcategory, projectsIHaveBacked, raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR823 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, filterProjects, goal, category, foodSubcategory]
and a follow-up test case is constructed by removing the following parameters [location, projectsIHaveBacked, savedProjects]
and a follow-up test case is constructed by removing the following parameters [filterProjects]
and a follow-up test case is constructed by removing the following parameters [foodSubcategory, goal]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1891 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, category]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1151 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, category, gamesSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, location, projectsIHaveBacked, savedProjects]
and a follow-up test case is constructed by removing the following parameters [gamesSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1444 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following:showProjectsIFollow, recommendedForMe, filterProjects, amountPledged, goal, raised, category, fashionSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [following:showProjectsIDoNotFollow]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1025 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, goal, category, gamesSubcategory]
and a follow-up test case is constructed by removing the following parameters [gamesSubcategory, location]
and a follow-up test case is constructed by removing the following parameters [amountPledged, goal, savedProjects]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR297 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following:showProjectsIFollow, projectsIHaveBacked, recommendedForMe, category, musicSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [following:showProjectsIDoNotFollow]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR124 (SHUFFLING_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy:Popularity, projectsWeLove, savedProjects, recommendedForMe, amountPledged, category]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Magic]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Newest]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:EndDate]
then the source and the follow-up output(s) should have the same items, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR486 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, goal, raised, category, craftsSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, filterProjects, following, savedProjects]
and a follow-up test case is constructed by removing the following parameters [goal, location, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [craftsSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1465 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, foodSubcategory]
and a follow-up test case is constructed by removing the following parameters [foodSubcategory, goal, projectsIHaveBacked, searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2136 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked:showProjectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, publishingSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [projectsIHaveBacked:showProjectsIHaveNotBacked]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2089 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, raised, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, raised]
and a follow-up test case is constructed by removing the following parameters [filterProjects, projectsIHaveBacked, savedProjects]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
and a follow-up test case is constructed by removing the following parameters [location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR738 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, amountPledged, raised, category, danceSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, danceSubcategory, location, raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR322 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, goal, raised, category, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [goal]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, raised, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, location, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR903 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, location, projectsIHaveBacked, publishingSubcategory, raised, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR373 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, amountPledged, goal, category, designSubcategory]
and a follow-up test case is constructed by removing the following parameters [designSubcategory, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [amountPledged, location]
and a follow-up test case is constructed by removing the following parameters [goal]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1150 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, category, gamesSubcategory]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, savedProjects]
and a follow-up test case is constructed by removing the following parameters [following, location]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
and a follow-up test case is constructed by removing the following parameters [gamesSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1674 (COMPLETE_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, category, comicsSubcategory]
and a follow-up test case is constructed by adding the following parameters [savedProjects:showProjectsIHaveSaved]
and a follow-up test case is constructed by changing the value of the following parameters [savedProjects:showProjectsIHaveNotSaved]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR639 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, goal]
and a follow-up test case is constructed by removing the following parameters [location, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [technologySubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1180 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, raised, category, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, location, raised, searchQuery, technologySubcategory]
and a follow-up test case is constructed by removing the following parameters [following, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1276 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, raised, category, fashionSubcategory]
and a follow-up test case is constructed by removing the following parameters [fashionSubcategory, projectsIHaveBacked, raised, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR56 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by adding the following parameters [raised:<75% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:75% to 100% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:>100% raised]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1952 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [amountPledged, location, raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [goal]
and a follow-up test case is constructed by removing the following parameters [following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR177 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, designSubcategory]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
and a follow-up test case is constructed by removing the following parameters [designSubcategory, filterProjects, following, projectsIHaveBacked, raised, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1273 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, projectsIHaveBacked, recommendedForMe, raised, category, fashionSubcategory]
and a follow-up test case is constructed by removing the following parameters [location]
and a follow-up test case is constructed by removing the following parameters [fashionSubcategory, savedProjects]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked, raised, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR457 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, goal, category, comicsSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, searchQuery]
and a follow-up test case is constructed by removing the following parameters [filterProjects, goal, savedProjects]
and a follow-up test case is constructed by removing the following parameters [comicsSubcategory]
and a follow-up test case is constructed by removing the following parameters [location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR601 (DISJOINT_EXTEND):
if a source test case is run with the inputs [sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects:liveProjects, amountPledged, goal, raised, category, musicSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [filterProjects:successfulProjects]
and a follow-up test case is constructed by changing the value of the following parameters [filterProjects:upcomingProjects]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1310 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, artSubcategory]
and a follow-up test case is constructed by removing the following parameters [artSubcategory, filterProjects, projectsIHaveBacked, savedProjects]
and a follow-up test case is constructed by removing the following parameters [following, location, raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1951 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [following, goal, raised]
and a follow-up test case is constructed by removing the following parameters [location, savedProjects]
and a follow-up test case is constructed by removing the following parameters [amountPledged, projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1531 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, category, danceSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, savedProjects]
and a follow-up test case is constructed by removing the following parameters [danceSubcategory, following, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR79 (DISJOINT_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, goal:<$1,000 goal, raised, category]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$1,000 to $10,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$10,000 to $100,000 goal]
and a follow-up test case is constructed by changing the value of the following parameters [goal:$100,000 to $1,000,000 goal]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR993 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category, artSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, projectsIHaveBacked, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [artSubcategory, raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1785 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, category, photographySubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, photographySubcategory, searchQuery]
and a follow-up test case is constructed by removing the following parameters [location, projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR2043 (COMPLETE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, raised, category]
and a follow-up test case is constructed by adding the following parameters [savedProjects:showProjectsIHaveSaved]
and a follow-up test case is constructed by changing the value of the following parameters [savedProjects:showProjectsIHaveNotSaved]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1870 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, category]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, projectsIHaveBacked, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1869 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, category]
and a follow-up test case is constructed by removing the following parameters [following, projectsIHaveBacked, savedProjects]
and a follow-up test case is constructed by removing the following parameters [amountPledged]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR73 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [following, location, raised]
and a follow-up test case is constructed by removing the following parameters [goal]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR508 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, recommendedForMe, goal, raised, category, filmAndVideoSubcategory]
and a follow-up test case is constructed by removing the following parameters [filmAndVideoSubcategory, raised, searchQuery]
and a follow-up test case is constructed by removing the following parameters [goal, location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1569 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, category, publishingSubcategory:Academic]
and a follow-up test case is constructed by changing the value of the following parameters [publishingSubcategory:Anthologies]
and a follow-up test case is constructed by changing the value of the following parameters [publishingSubcategory:Art Books]
and a follow-up test case is constructed by changing the value of the following parameters [publishingSubcategory:Calendars]
and a follow-up test case is constructed by changing the value of the following parameters [publishingSubcategory:Children's Books]
and a follow-up test case is constructed by changing the value of the following parameters [publishingSubcategory:Comedy]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1153 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, amountPledged, category, gamesSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, following, gamesSubcategory, location, projectsIHaveBacked, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR263 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, amountPledged, goal, category, artSubcategory]
and a follow-up test case is constructed by removing the following parameters [artSubcategory, filterProjects]
and a follow-up test case is constructed by removing the following parameters [amountPledged, goal]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR989 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category, artSubcategory]
and a follow-up test case is constructed by removing the following parameters [artSubcategory, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [raised]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR445 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, amountPledged, goal, category, comicsSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, comicsSubcategory, filterProjects, following, searchQuery]
and a follow-up test case is constructed by removing the following parameters [goal, location, savedProjects]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR782 (DISJOINT_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, amountPledged, raised:<75% raised, category, foodSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [raised:75% to 100% raised]
and a follow-up test case is constructed by changing the value of the following parameters [raised:>100% raised]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1248 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, filterProjects, category, artSubcategory]
and a follow-up test case is constructed by removing the following parameters [savedProjects]
and a follow-up test case is constructed by removing the following parameters [artSubcategory, filterProjects, following, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR935 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category, comicsSubcategory]
and a follow-up test case is constructed by removing the following parameters [following, projectsIHaveBacked, raised, savedProjects, searchQuery]
and a follow-up test case is constructed by removing the following parameters [comicsSubcategory]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR946 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, raised, category, comicsSubcategory]
and a follow-up test case is constructed by removing the following parameters [comicsSubcategory, following, raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1330 (DISJOINT_EXTEND):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects:liveProjects, raised, category, artSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [filterProjects:successfulProjects]
and a follow-up test case is constructed by changing the value of the following parameters [filterProjects:upcomingProjects]
then the source and the follow-up output(s) should be disjoint.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR57 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, recommendedForMe, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [following, location]
and a follow-up test case is constructed by removing the following parameters [goal]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR917 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, publishingSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, projectsIHaveBacked, publishingSubcategory, raised]
and a follow-up test case is constructed by removing the following parameters [searchQuery]
and a follow-up test case is constructed by removing the following parameters [location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR890 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, savedProjects, recommendedForMe, filterProjects, raised, category, publishingSubcategory]
and a follow-up test case is constructed by adding the following parameters [amountPledged, goal]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1819 (SHUFFLING_EXTEND):
if a source test case is run with the inputs [sortBy:NearMe, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category, publishingSubcategory]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Magic]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Popularity]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:Newest]
and a follow-up test case is constructed by changing the value of the following parameters [sortBy:EndDate]
then the source and the follow-up output(s) should have the same items, regardless of their order.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1772 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, projectsIHaveBacked, recommendedForMe, filterProjects, category, photographySubcategory]
and a follow-up test case is constructed by removing the following parameters [location]
and a follow-up test case is constructed by removing the following parameters [photographySubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, projectsIHaveBacked, searchQuery]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1317 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, savedProjects, following, projectsIHaveBacked, recommendedForMe, filterProjects, raised, category, artSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following, projectsIHaveBacked, raised, savedProjects]
and a follow-up test case is constructed by removing the following parameters [artSubcategory, location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR1109 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, category, danceSubcategory]
and a follow-up test case is constructed by removing the following parameters [danceSubcategory, filterProjects, following, goal, projectsIHaveBacked]
and a follow-up test case is constructed by removing the following parameters [location]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR222 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, sortBy, projectsWeLove, following, recommendedForMe, filterProjects, amountPledged, category, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, searchQuery, theaterSubcategory]
and a follow-up test case is constructed by removing the following parameters [filterProjects, following]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR408 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [searchQuery, location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, amountPledged, goal, raised, category, designSubcategory]
and a follow-up test case is constructed by removing the following parameters [amountPledged, designSubcategory, goal, location, projectsIHaveBacked, searchQuery]
and a follow-up test case is constructed by removing the following parameters [following]
and a follow-up test case is constructed by removing the following parameters [raised]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Kickstarter (DiscoverProjects)
the following metamorphic relation should hold
MR857 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [location, sortBy, projectsWeLove, following, projectsIHaveBacked, recommendedForMe, filterProjects, goal, raised, category]
and a follow-up test case is constructed by removing the following parameters [following, raised]
and a follow-up test case is constructed by removing the following parameters [goal, location]
and a follow-up test case is constructed by removing the following parameters [filterProjects, projectsIHaveBacked]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

