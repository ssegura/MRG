In the domain of CommentsAPI (GetAllComments)
the following metamorphic relation should hold
MR12 (DISJOINT_EXTEND):
if a source test case is run with the inputs [type:Review, order, limit]
and a follow-up test case is constructed by changing the value of the following parameters [type:Request]
and a follow-up test case is constructed by changing the value of the following parameters [type:Complain]
then the source and the follow-up output(s) should be disjoint.

In the domain of CommentsAPI (GetAllComments)
the following metamorphic relation should hold
MR10 (DISJOINT_EXTEND):
if a source test case is run with the inputs [contains, type:Complain, order, offset, limit]
and a follow-up test case is constructed by changing the value of the following parameters [type:Review]
and a follow-up test case is constructed by changing the value of the following parameters [type:Request]
then the source and the follow-up output(s) should be disjoint.

In the domain of CommentsAPI (GetAllComments)
the following metamorphic relation should hold
MR19 (SHUFFLING_EXTEND):
if a source test case is run with the inputs [contains, type, order:date]
and a follow-up test case is constructed by changing the value of the following parameters [order:+date]
and a follow-up test case is constructed by changing the value of the following parameters [order:-date]
then the source and the follow-up output(s) should have the same items, regardless of their order.

In the domain of CommentsAPI (GetAllComments)
the following metamorphic relation should hold
MR4 (DISJOINT_EXTEND):
if a source test case is run with the inputs [type:Complain, offset, limit]
and a follow-up test case is constructed by changing the value of the following parameters [type:Review]
and a follow-up test case is constructed by changing the value of the following parameters [type:Request]
then the source and the follow-up output(s) should be disjoint.

In the domain of CommentsAPI (GetAllComments)
the following metamorphic relation should hold
MR13 (DISJOINT_EXTEND):
if a source test case is run with the inputs [contains, type:Review, order, offset, limit]
and a follow-up test case is constructed by changing the value of the following parameters [type:Request]
and a follow-up test case is constructed by changing the value of the following parameters [type:Complain]
then the source and the follow-up output(s) should be disjoint.

In the domain of CommentsAPI (GetAllComments)
the following metamorphic relation should hold
MR16 (DISJOINT_EXTEND):
if a source test case is run with the inputs [contains, type:Request, limit]
and a follow-up test case is constructed by changing the value of the following parameters [type:Review]
and a follow-up test case is constructed by changing the value of the following parameters [type:Complain]
then the source and the follow-up output(s) should be disjoint.

In the domain of CommentsAPI (GetAllComments)
the following metamorphic relation should hold
MR8 (DISJOINT_EXTEND):
if a source test case is run with the inputs [type:Review, order, offset]
and a follow-up test case is constructed by changing the value of the following parameters [type:Request]
and a follow-up test case is constructed by changing the value of the following parameters [type:Complain]
then the source and the follow-up output(s) should be disjoint.

In the domain of CommentsAPI (GetAllComments)
the following metamorphic relation should hold
MR11 (DISJOINT_EXTEND):
if a source test case is run with the inputs [contains, type:Request, order, offset, limit]
and a follow-up test case is constructed by changing the value of the following parameters [type:Review]
and a follow-up test case is constructed by changing the value of the following parameters [type:Complain]
then the source and the follow-up output(s) should be disjoint.

In the domain of CommentsAPI (GetAllComments)
the following metamorphic relation should hold
MR5 (EQUIVALENCE_EXTEND):
if a source test case is run with the inputs [contains, order, offset, limit]
and a follow-up test case is constructed by adding the following parameters [type:All]
then the source and the follow-up output(s) should have the same items in the same order.

In the domain of CommentsAPI (GetAllComments)
the following metamorphic relation should hold
MR9 (EQUIVALENCE_EXTEND):
if a source test case is run with the inputs [contains, offset, limit]
and a follow-up test case is constructed by adding the following parameters [type:All]
then the source and the follow-up output(s) should have the same items in the same order.

In the domain of CommentsAPI (GetAllComments)
the following metamorphic relation should hold
MR7 (DISJOINT_EXTEND):
if a source test case is run with the inputs [contains, type:Complain, order, offset, limit]
and a follow-up test case is constructed by changing the value of the following parameters [type:Review]
then the source and the follow-up output(s) should be disjoint.

In the domain of CommentsAPI (GetAllComments)
the following metamorphic relation should hold
MR15 (DISJOINT_EXTEND):
if a source test case is run with the inputs [contains, type:Review, order, offset, limit]
and a follow-up test case is constructed by changing the value of the following parameters [type:Request]
then the source and the follow-up output(s) should be disjoint.

In the domain of CommentsAPI (GetAllComments)
the following metamorphic relation should hold
MR6 (EQUIVALENCE_EXTEND):
if a source test case is run with the inputs [contains, limit]
and a follow-up test case is constructed by adding the following parameters [type:All]
then the source and the follow-up output(s) should have the same items in the same order.

In the domain of CommentsAPI (GetAllComments)
the following metamorphic relation should hold
MR17 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [contains, type, order]
and a follow-up test case is constructed by removing the following parameters [contains, type]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of CommentsAPI (GetAllComments)
the following metamorphic relation should hold
MR3 (EQUIVALENCE_EXTEND):
if a source test case is run with the inputs [contains, order, offset]
and a follow-up test case is constructed by adding the following parameters [type:All]
then the source and the follow-up output(s) should have the same items in the same order.

In the domain of CommentsAPI (GetAllComments)
the following metamorphic relation should hold
MR14 (DISJOINT_EXTEND):
if a source test case is run with the inputs [type:Request, order, offset, limit]
and a follow-up test case is constructed by changing the value of the following parameters [type:Review]
then the source and the follow-up output(s) should be disjoint.

In the domain of CommentsAPI (GetAllComments)
the following metamorphic relation should hold
MR21 (DISJOINT_EXTEND):
if a source test case is run with the inputs [contains, type:Review, offset, limit]
and a follow-up test case is constructed by changing the value of the following parameters [type:Request]
then the source and the follow-up output(s) should be disjoint.

In the domain of CommentsAPI (GetAllComments)
the following metamorphic relation should hold
MR0 (EQUIVALENCE_EXTEND):
if a source test case is run with the inputs [order, offset, limit]
and a follow-up test case is constructed by adding the following parameters [type:All]
then the source and the follow-up output(s) should have the same items in the same order.

In the domain of CommentsAPI (GetAllComments)
the following metamorphic relation should hold
MR2 (DISJOINT_EXTEND):
if a source test case is run with the inputs [contains, type:Request, order, limit]
and a follow-up test case is constructed by changing the value of the following parameters [type:Review]
then the source and the follow-up output(s) should be disjoint.

In the domain of CommentsAPI (GetAllComments)
the following metamorphic relation should hold
MR1 (DISJOINT_EXTEND):
if a source test case is run with the inputs [contains, type:Request, offset]
and a follow-up test case is constructed by changing the value of the following parameters [type:Review]
then the source and the follow-up output(s) should be disjoint.

In the domain of CommentsAPI (GetAllComments)
the following metamorphic relation should hold
MR18 (SHUFFLING_CONTRACT):
if a source test case is run with the inputs [contains, type, order]
and a follow-up test case is constructed by removing the following parameters [order]
then the source and the follow-up output(s) should have the same items, regardless of their order.

In the domain of CommentsAPI (GetAllComments)
the following metamorphic relation should hold
MR20 (DISJOINT_EXTEND):
if a source test case is run with the inputs [contains, type:Complain, order]
and a follow-up test case is constructed by changing the value of the following parameters [type:Review]
then the source and the follow-up output(s) should be disjoint.

