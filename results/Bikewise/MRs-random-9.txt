In the domain of Bikewise (GetIncidents)
the following metamorphic relation should hold
MR57 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [page, per_page, proximity, proximity_square, query]
and a follow-up test case is constructed by adding the following parameters [incident_type, occurred_after]
and a follow-up test case is constructed by adding the following parameters [occurred_before]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Bikewise (GetIncidents)
the following metamorphic relation should hold
MR26 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [per_page, occurred_after, incident_type, query]
and a follow-up test case is constructed by adding the following parameters [occurred_before, proximity]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Bikewise (GetIncidents)
the following metamorphic relation should hold
MR32 (EQUIVALENCE_EXTEND):
if a source test case is run with the inputs [page, per_page, occurred_before, occurred_after, proximity, query]
and a follow-up test case is constructed by adding the following parameters [proximity_square:100]
then the source and the follow-up output(s) should have the same items in the same order.

In the domain of Bikewise (GetIncidents)
the following metamorphic relation should hold
MR17 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [occurred_before, occurred_after, incident_type, proximity, proximity_square]
and a follow-up test case is constructed by removing the following parameters [occurred_after]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Bikewise (GetIncidents)
the following metamorphic relation should hold
MR22 (COMPLETE_EXTEND):
if a source test case is run with the inputs [page, per_page, occurred_before, proximity, proximity_square]
and a follow-up test case is constructed by adding the following parameters [incident_type:crash]
and a follow-up test case is constructed by changing the value of the following parameters [incident_type:hazard]
and a follow-up test case is constructed by changing the value of the following parameters [incident_type:theft]
and a follow-up test case is constructed by changing the value of the following parameters [incident_type:unconfirmed]
and a follow-up test case is constructed by changing the value of the following parameters [incident_type:infrastructure_issue]
and a follow-up test case is constructed by changing the value of the following parameters [incident_type:chop_shop]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Bikewise (GetIncidents)
the following metamorphic relation should hold
MR54 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [per_page, occurred_before, incident_type, proximity, proximity_square, query]
and a follow-up test case is constructed by adding the following parameters [occurred_after]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Bikewise (GetIncidents)
the following metamorphic relation should hold
MR61 (COMPLETE_EXTEND):
if a source test case is run with the inputs [page, per_page, proximity, proximity_square, query]
and a follow-up test case is constructed by adding the following parameters [incident_type:crash]
and a follow-up test case is constructed by changing the value of the following parameters [incident_type:hazard]
and a follow-up test case is constructed by changing the value of the following parameters [incident_type:theft]
and a follow-up test case is constructed by changing the value of the following parameters [incident_type:unconfirmed]
and a follow-up test case is constructed by changing the value of the following parameters [incident_type:infrastructure_issue]
and a follow-up test case is constructed by changing the value of the following parameters [incident_type:chop_shop]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Bikewise (GetIncidents)
the following metamorphic relation should hold
MR36 (DISJOINT_EXTEND):
if a source test case is run with the inputs [per_page, occurred_before, occurred_after, incident_type:hazard, proximity, proximity_square]
and a follow-up test case is constructed by changing the value of the following parameters [incident_type:crash]
and a follow-up test case is constructed by changing the value of the following parameters [incident_type:theft]
and a follow-up test case is constructed by changing the value of the following parameters [incident_type:unconfirmed]
and a follow-up test case is constructed by changing the value of the following parameters [incident_type:infrastructure_issue]
then the source and the follow-up output(s) should be disjoint.

In the domain of Bikewise (GetIncidents)
the following metamorphic relation should hold
MR15 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [page, per_page, occurred_before, occurred_after, incident_type, proximity, proximity_square, query]
and a follow-up test case is constructed by removing the following parameters [incident_type]
and a follow-up test case is constructed by removing the following parameters [occurred_after]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Bikewise (GetIncidents)
the following metamorphic relation should hold
MR60 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [page, per_page, proximity, proximity_square, query]
and a follow-up test case is constructed by adding the following parameters [occurred_before]
and a follow-up test case is constructed by adding the following parameters [incident_type]
and a follow-up test case is constructed by adding the following parameters [occurred_after]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Bikewise (GetIncidents)
the following metamorphic relation should hold
MR23 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [per_page, occurred_after, incident_type, query]
and a follow-up test case is constructed by removing the following parameters [incident_type, occurred_after]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Bikewise (GetIncidents)
the following metamorphic relation should hold
MR2 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [page, per_page, occurred_before, incident_type, proximity, query]
and a follow-up test case is constructed by removing the following parameters [occurred_before]
and a follow-up test case is constructed by removing the following parameters [incident_type, proximity]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Bikewise (GetIncidents)
the following metamorphic relation should hold
MR29 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [page, per_page, occurred_before, occurred_after, proximity, query]
and a follow-up test case is constructed by removing the following parameters [occurred_after, proximity]
and a follow-up test case is constructed by removing the following parameters [occurred_before]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Bikewise (GetIncidents)
the following metamorphic relation should hold
MR47 (DISJOINT_EXTEND):
if a source test case is run with the inputs [page, occurred_after, incident_type:hazard, proximity, proximity_square]
and a follow-up test case is constructed by changing the value of the following parameters [incident_type:crash]
and a follow-up test case is constructed by changing the value of the following parameters [incident_type:theft]
and a follow-up test case is constructed by changing the value of the following parameters [incident_type:unconfirmed]
then the source and the follow-up output(s) should be disjoint.

In the domain of Bikewise (GetIncidents)
the following metamorphic relation should hold
MR16 (DISJOINT_EXTEND):
if a source test case is run with the inputs [page, per_page, occurred_before, occurred_after, incident_type:crash, proximity, proximity_square, query]
and a follow-up test case is constructed by changing the value of the following parameters [incident_type:hazard]
and a follow-up test case is constructed by changing the value of the following parameters [incident_type:theft]
and a follow-up test case is constructed by changing the value of the following parameters [incident_type:unconfirmed]
and a follow-up test case is constructed by changing the value of the following parameters [incident_type:infrastructure_issue]
then the source and the follow-up output(s) should be disjoint.

In the domain of Bikewise (GetIncidents)
the following metamorphic relation should hold
MR41 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [page, per_page, occurred_after, proximity, proximity_square, query]
and a follow-up test case is constructed by removing the following parameters [occurred_after]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Bikewise (GetIncidents)
the following metamorphic relation should hold
MR10 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [occurred_after, proximity, proximity_square, query]
and a follow-up test case is constructed by adding the following parameters [incident_type]
and a follow-up test case is constructed by adding the following parameters [occurred_before]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Bikewise (GetIncidents)
the following metamorphic relation should hold
MR30 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [page, per_page, occurred_before, occurred_after, proximity, query]
and a follow-up test case is constructed by adding the following parameters [incident_type]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Bikewise (GetIncidents)
the following metamorphic relation should hold
MR5 (DISJOINT_EXTEND):
if a source test case is run with the inputs [page, per_page, occurred_before, incident_type:hazard, proximity, query]
and a follow-up test case is constructed by changing the value of the following parameters [incident_type:crash]
and a follow-up test case is constructed by changing the value of the following parameters [incident_type:theft]
then the source and the follow-up output(s) should be disjoint.

In the domain of Bikewise (GetIncidents)
the following metamorphic relation should hold
MR37 (EQUIVALENCE_EXTEND):
if a source test case is run with the inputs [per_page, occurred_before, occurred_after, incident_type, proximity, proximity_square]
and a follow-up test case is constructed by adding the following parameters [page:1]
then the source and the follow-up output(s) should have the same items in the same order.

In the domain of Bikewise (GetIncidents)
the following metamorphic relation should hold
MR28 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [page, per_page, occurred_before, occurred_after, proximity, query]
and a follow-up test case is constructed by removing the following parameters [occurred_after, occurred_before, proximity]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Bikewise (GetIncidents)
the following metamorphic relation should hold
MR44 (COMPLETE_EXTEND):
if a source test case is run with the inputs [page, per_page, occurred_after, proximity, proximity_square, query]
and a follow-up test case is constructed by adding the following parameters [incident_type:crash]
and a follow-up test case is constructed by changing the value of the following parameters [incident_type:hazard]
and a follow-up test case is constructed by changing the value of the following parameters [incident_type:theft]
and a follow-up test case is constructed by changing the value of the following parameters [incident_type:unconfirmed]
and a follow-up test case is constructed by changing the value of the following parameters [incident_type:infrastructure_issue]
and a follow-up test case is constructed by changing the value of the following parameters [incident_type:chop_shop]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Bikewise (GetIncidents)
the following metamorphic relation should hold
MR4 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [page, per_page, occurred_before, incident_type, proximity, query]
and a follow-up test case is constructed by adding the following parameters [occurred_after]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Bikewise (GetIncidents)
the following metamorphic relation should hold
MR48 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [page, occurred_before, incident_type]
and a follow-up test case is constructed by removing the following parameters [incident_type, occurred_before]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Bikewise (GetIncidents)
the following metamorphic relation should hold
MR35 (DISJOINT_EXTEND):
if a source test case is run with the inputs [page, per_page, occurred_after, incident_type:crash, proximity, proximity_square, query]
and a follow-up test case is constructed by changing the value of the following parameters [incident_type:hazard]
and a follow-up test case is constructed by changing the value of the following parameters [incident_type:theft]
and a follow-up test case is constructed by changing the value of the following parameters [incident_type:unconfirmed]
and a follow-up test case is constructed by changing the value of the following parameters [incident_type:infrastructure_issue]
then the source and the follow-up output(s) should be disjoint.

In the domain of Bikewise (GetIncidents)
the following metamorphic relation should hold
MR42 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [page, per_page, occurred_after, proximity, proximity_square, query]
and a follow-up test case is constructed by adding the following parameters [incident_type, occurred_before]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Bikewise (GetIncidents)
the following metamorphic relation should hold
MR14 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [page, per_page, occurred_before, occurred_after, incident_type, proximity, proximity_square, query]
and a follow-up test case is constructed by removing the following parameters [incident_type, occurred_after]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Bikewise (GetIncidents)
the following metamorphic relation should hold
MR27 (DISJOINT_EXTEND):
if a source test case is run with the inputs [per_page, occurred_after, incident_type:hazard, query]
and a follow-up test case is constructed by changing the value of the following parameters [incident_type:crash]
then the source and the follow-up output(s) should be disjoint.

In the domain of Bikewise (GetIncidents)
the following metamorphic relation should hold
MR64 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [page, per_page, proximity, proximity_square, query]
and a follow-up test case is constructed by adding the following parameters [occurred_after, occurred_before]
and a follow-up test case is constructed by adding the following parameters [incident_type]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Bikewise (GetIncidents)
the following metamorphic relation should hold
MR19 (EQUIVALENCE_EXTEND):
if a source test case is run with the inputs [occurred_before, occurred_after, incident_type, proximity, proximity_square]
and a follow-up test case is constructed by adding the following parameters [page:1]
then the source and the follow-up output(s) should have the same items in the same order.

In the domain of Bikewise (GetIncidents)
the following metamorphic relation should hold
MR49 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [page, occurred_before, incident_type]
and a follow-up test case is constructed by removing the following parameters [occurred_before]
and a follow-up test case is constructed by removing the following parameters [incident_type]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Bikewise (GetIncidents)
the following metamorphic relation should hold
MR33 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [page, per_page, occurred_after, incident_type, proximity, proximity_square, query]
and a follow-up test case is constructed by removing the following parameters [incident_type, occurred_after]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Bikewise (GetIncidents)
the following metamorphic relation should hold
MR52 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [page, occurred_before, incident_type]
and a follow-up test case is constructed by adding the following parameters [occurred_after]
and a follow-up test case is constructed by adding the following parameters [proximity]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Bikewise (GetIncidents)
the following metamorphic relation should hold
MR62 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [page, per_page, occurred_before, occurred_after, incident_type, proximity, proximity_square, query]
and a follow-up test case is constructed by removing the following parameters [incident_type]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Bikewise (GetIncidents)
the following metamorphic relation should hold
MR11 (COMPLETE_EXTEND):
if a source test case is run with the inputs [occurred_after, proximity, proximity_square, query]
and a follow-up test case is constructed by adding the following parameters [incident_type:crash]
and a follow-up test case is constructed by changing the value of the following parameters [incident_type:hazard]
and a follow-up test case is constructed by changing the value of the following parameters [incident_type:theft]
and a follow-up test case is constructed by changing the value of the following parameters [incident_type:unconfirmed]
and a follow-up test case is constructed by changing the value of the following parameters [incident_type:infrastructure_issue]
and a follow-up test case is constructed by changing the value of the following parameters [incident_type:chop_shop]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Bikewise (GetIncidents)
the following metamorphic relation should hold
MR1 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [page, per_page, occurred_before, incident_type, proximity, query]
and a follow-up test case is constructed by removing the following parameters [incident_type, proximity]
and a follow-up test case is constructed by removing the following parameters [occurred_before]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Bikewise (GetIncidents)
the following metamorphic relation should hold
MR0 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [page, per_page, occurred_before, incident_type, proximity, query]
and a follow-up test case is constructed by removing the following parameters [incident_type, occurred_before]
and a follow-up test case is constructed by removing the following parameters [proximity]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Bikewise (GetIncidents)
the following metamorphic relation should hold
MR18 (DISJOINT_EXTEND):
if a source test case is run with the inputs [occurred_before, occurred_after, incident_type:crash, proximity, proximity_square]
and a follow-up test case is constructed by changing the value of the following parameters [incident_type:hazard]
and a follow-up test case is constructed by changing the value of the following parameters [incident_type:theft]
and a follow-up test case is constructed by changing the value of the following parameters [incident_type:unconfirmed]
and a follow-up test case is constructed by changing the value of the following parameters [incident_type:infrastructure_issue]
then the source and the follow-up output(s) should be disjoint.

In the domain of Bikewise (GetIncidents)
the following metamorphic relation should hold
MR69 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [page, per_page, occurred_before, occurred_after, query]
and a follow-up test case is constructed by adding the following parameters [incident_type, proximity]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Bikewise (GetIncidents)
the following metamorphic relation should hold
MR68 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [page, per_page, occurred_before, occurred_after, query]
and a follow-up test case is constructed by adding the following parameters [proximity]
and a follow-up test case is constructed by adding the following parameters [incident_type]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Bikewise (GetIncidents)
the following metamorphic relation should hold
MR65 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [page, per_page, occurred_before, occurred_after, query]
and a follow-up test case is constructed by removing the following parameters [occurred_after, occurred_before]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Bikewise (GetIncidents)
the following metamorphic relation should hold
MR55 (DISJOINT_EXTEND):
if a source test case is run with the inputs [per_page, occurred_before, incident_type:crash, proximity, proximity_square, query]
and a follow-up test case is constructed by changing the value of the following parameters [incident_type:hazard]
and a follow-up test case is constructed by changing the value of the following parameters [incident_type:theft]
and a follow-up test case is constructed by changing the value of the following parameters [incident_type:unconfirmed]
then the source and the follow-up output(s) should be disjoint.

In the domain of Bikewise (GetIncidents)
the following metamorphic relation should hold
MR6 (EQUIVALENCE_EXTEND):
if a source test case is run with the inputs [page, per_page, occurred_before, incident_type, proximity, query]
and a follow-up test case is constructed by adding the following parameters [proximity_square:100]
then the source and the follow-up output(s) should have the same items in the same order.

In the domain of Bikewise (GetIncidents)
the following metamorphic relation should hold
MR53 (DISJOINT_EXTEND):
if a source test case is run with the inputs [page, occurred_before, incident_type:crash]
and a follow-up test case is constructed by changing the value of the following parameters [incident_type:hazard]
and a follow-up test case is constructed by changing the value of the following parameters [incident_type:theft]
and a follow-up test case is constructed by changing the value of the following parameters [incident_type:unconfirmed]
and a follow-up test case is constructed by changing the value of the following parameters [incident_type:infrastructure_issue]
and a follow-up test case is constructed by changing the value of the following parameters [incident_type:chop_shop]
then the source and the follow-up output(s) should be disjoint.

In the domain of Bikewise (GetIncidents)
the following metamorphic relation should hold
MR67 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [page, per_page, occurred_before, occurred_after, query]
and a follow-up test case is constructed by adding the following parameters [incident_type]
and a follow-up test case is constructed by adding the following parameters [proximity]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Bikewise (GetIncidents)
the following metamorphic relation should hold
MR39 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [page, occurred_before, incident_type, proximity, proximity_square, query]
and a follow-up test case is constructed by adding the following parameters [occurred_after]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Bikewise (GetIncidents)
the following metamorphic relation should hold
MR40 (DISJOINT_EXTEND):
if a source test case is run with the inputs [page, occurred_before, incident_type:hazard, proximity, proximity_square, query]
and a follow-up test case is constructed by changing the value of the following parameters [incident_type:crash]
and a follow-up test case is constructed by changing the value of the following parameters [incident_type:theft]
and a follow-up test case is constructed by changing the value of the following parameters [incident_type:unconfirmed]
then the source and the follow-up output(s) should be disjoint.

In the domain of Bikewise (GetIncidents)
the following metamorphic relation should hold
MR9 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [occurred_after, proximity, proximity_square, query]
and a follow-up test case is constructed by adding the following parameters [incident_type, occurred_before]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Bikewise (GetIncidents)
the following metamorphic relation should hold
MR56 (EQUIVALENCE_EXTEND):
if a source test case is run with the inputs [per_page, occurred_before, incident_type, proximity, proximity_square, query]
and a follow-up test case is constructed by adding the following parameters [page:1]
then the source and the follow-up output(s) should have the same items in the same order.

In the domain of Bikewise (GetIncidents)
the following metamorphic relation should hold
MR50 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [page, occurred_before, incident_type]
and a follow-up test case is constructed by removing the following parameters [incident_type]
and a follow-up test case is constructed by removing the following parameters [occurred_before]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Bikewise (GetIncidents)
the following metamorphic relation should hold
MR7 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [occurred_after, proximity, proximity_square, query]
and a follow-up test case is constructed by removing the following parameters [occurred_after]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Bikewise (GetIncidents)
the following metamorphic relation should hold
MR45 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [page, occurred_after, incident_type, proximity, proximity_square]
and a follow-up test case is constructed by removing the following parameters [occurred_after]
and a follow-up test case is constructed by removing the following parameters [incident_type]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Bikewise (GetIncidents)
the following metamorphic relation should hold
MR63 (DISJOINT_EXTEND):
if a source test case is run with the inputs [page, per_page, occurred_before, occurred_after, incident_type:hazard, proximity, proximity_square, query]
and a follow-up test case is constructed by changing the value of the following parameters [incident_type:crash]
and a follow-up test case is constructed by changing the value of the following parameters [incident_type:theft]
and a follow-up test case is constructed by changing the value of the following parameters [incident_type:unconfirmed]
and a follow-up test case is constructed by changing the value of the following parameters [incident_type:infrastructure_issue]
and a follow-up test case is constructed by changing the value of the following parameters [incident_type:chop_shop]
then the source and the follow-up output(s) should be disjoint.

In the domain of Bikewise (GetIncidents)
the following metamorphic relation should hold
MR25 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [per_page, occurred_after, incident_type, query]
and a follow-up test case is constructed by adding the following parameters [proximity]
and a follow-up test case is constructed by adding the following parameters [occurred_before]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Bikewise (GetIncidents)
the following metamorphic relation should hold
MR20 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [page, per_page, occurred_before, proximity, proximity_square]
and a follow-up test case is constructed by removing the following parameters [occurred_before]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Bikewise (GetIncidents)
the following metamorphic relation should hold
MR38 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [page, occurred_before, incident_type, proximity, proximity_square, query]
and a follow-up test case is constructed by removing the following parameters [occurred_before]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Bikewise (GetIncidents)
the following metamorphic relation should hold
MR24 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [per_page, occurred_after, incident_type, query]
and a follow-up test case is constructed by removing the following parameters [occurred_after]
and a follow-up test case is constructed by removing the following parameters [incident_type]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Bikewise (GetIncidents)
the following metamorphic relation should hold
MR43 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [page, per_page, occurred_after, proximity, proximity_square, query]
and a follow-up test case is constructed by adding the following parameters [occurred_before]
and a follow-up test case is constructed by adding the following parameters [incident_type]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Bikewise (GetIncidents)
the following metamorphic relation should hold
MR66 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [page, per_page, occurred_before, occurred_after, query]
and a follow-up test case is constructed by removing the following parameters [occurred_before]
and a follow-up test case is constructed by removing the following parameters [occurred_after]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Bikewise (GetIncidents)
the following metamorphic relation should hold
MR34 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [page, per_page, occurred_after, incident_type, proximity, proximity_square, query]
and a follow-up test case is constructed by adding the following parameters [occurred_before]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Bikewise (GetIncidents)
the following metamorphic relation should hold
MR8 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [occurred_after, proximity, proximity_square, query]
and a follow-up test case is constructed by adding the following parameters [occurred_before]
and a follow-up test case is constructed by adding the following parameters [incident_type]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Bikewise (GetIncidents)
the following metamorphic relation should hold
MR21 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [page, per_page, occurred_before, proximity, proximity_square]
and a follow-up test case is constructed by adding the following parameters [incident_type, occurred_after]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Bikewise (GetIncidents)
the following metamorphic relation should hold
MR46 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [page, occurred_after, incident_type, proximity, proximity_square]
and a follow-up test case is constructed by adding the following parameters [occurred_before]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Bikewise (GetIncidents)
the following metamorphic relation should hold
MR51 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [page, occurred_before, incident_type]
and a follow-up test case is constructed by adding the following parameters [proximity]
and a follow-up test case is constructed by adding the following parameters [occurred_after]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Bikewise (GetIncidents)
the following metamorphic relation should hold
MR13 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [page, per_page, occurred_before, occurred_after, incident_type, proximity, proximity_square, query]
and a follow-up test case is constructed by removing the following parameters [occurred_after, occurred_before]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

In the domain of Bikewise (GetIncidents)
the following metamorphic relation should hold
MR59 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [page, per_page, proximity, proximity_square, query]
and a follow-up test case is constructed by adding the following parameters [occurred_after]
and a follow-up test case is constructed by adding the following parameters [incident_type, occurred_before]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Bikewise (GetIncidents)
the following metamorphic relation should hold
MR70 (COMPLETE_EXTEND):
if a source test case is run with the inputs [page, per_page, occurred_before, occurred_after, query]
and a follow-up test case is constructed by adding the following parameters [incident_type:crash]
and a follow-up test case is constructed by changing the value of the following parameters [incident_type:hazard]
and a follow-up test case is constructed by changing the value of the following parameters [incident_type:theft]
and a follow-up test case is constructed by changing the value of the following parameters [incident_type:unconfirmed]
and a follow-up test case is constructed by changing the value of the following parameters [incident_type:infrastructure_issue]
and a follow-up test case is constructed by changing the value of the following parameters [incident_type:chop_shop]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Bikewise (GetIncidents)
the following metamorphic relation should hold
MR31 (COMPLETE_EXTEND):
if a source test case is run with the inputs [page, per_page, occurred_before, occurred_after, proximity, query]
and a follow-up test case is constructed by adding the following parameters [incident_type:crash]
and a follow-up test case is constructed by changing the value of the following parameters [incident_type:hazard]
and a follow-up test case is constructed by changing the value of the following parameters [incident_type:theft]
and a follow-up test case is constructed by changing the value of the following parameters [incident_type:unconfirmed]
and a follow-up test case is constructed by changing the value of the following parameters [incident_type:infrastructure_issue]
and a follow-up test case is constructed by changing the value of the following parameters [incident_type:chop_shop]
then the union of the follow-up outputs should have the same items as the source output, regardless of their order.

In the domain of Bikewise (GetIncidents)
the following metamorphic relation should hold
MR12 (EQUIVALENCE_EXTEND):
if a source test case is run with the inputs [occurred_after, proximity, proximity_square, query]
and a follow-up test case is constructed by adding the following parameters [page:1]
then the source and the follow-up output(s) should have the same items in the same order.

In the domain of Bikewise (GetIncidents)
the following metamorphic relation should hold
MR58 (CONJUNCTIVE_EXTEND):
if a source test case is run with the inputs [page, per_page, proximity, proximity_square, query]
and a follow-up test case is constructed by adding the following parameters [incident_type, occurred_after, occurred_before]
then the follow-up output(s) should be a (non-strict) subset of the source test output.

In the domain of Bikewise (GetIncidents)
the following metamorphic relation should hold
MR3 (CONJUNCTIVE_CONTRACT):
if a source test case is run with the inputs [page, per_page, occurred_before, incident_type, proximity, query]
and a follow-up test case is constructed by removing the following parameters [incident_type, occurred_before, proximity]
then the follow-up output(s) should be a (non-strict) superset of the source test output.

